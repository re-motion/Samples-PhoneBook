<?xml version="1.0" encoding="utf-8"?><doc><assembly>
        <name>Remotion.Web</name>
    </assembly><members><member name="T:Remotion.Web.IResourceUrlResolver"><summary>
              Resolve the relative image URL into an absolute image url.
            </summary></member><member name="M:Remotion.Web.IResourceUrlResolver.GetResourceUrl(System.Web.UI.Control,System.Type,Remotion.Web.ResourceType,System.String)"><summary>
              Resolves a relative URL into an absolute URL.
            </summary><param name="control"> 
              The current <see cref="T:System.Web.UI.Control" />. Used to detect design time.
            </param><param name="relativeUrl">
              The relative URL to be resolved into an absolute URL.
            </param><param name="definingType"> 
              The type that defines the resource. If the resource instance is not defined by a type, 
              this is <see langword="null" />. 
            </param><param name="resourceType">
              The type of resource to get. 
            </param></member><member name="T:Remotion.Web.ResourceUrlResolver"><summary> Utility methods for URL resolving. </summary></member><member name="M:Remotion.Web.ResourceUrlResolver.GetResourceUrl(System.Web.UI.Control,System.Web.HttpContext,System.Type,Remotion.Web.ResourceType,System.String)"><summary>
              Returns the physical URL of a resource item.
              <seealso cref="T:Remotion.Web.IResourceUrlResolver" />.
            </summary><param name="control"> 
              The current <see cref="T:System.Web.UI.Control" />. Currently, this parameter is only used to detect design time.
            </param><param name="context"> The current <see cref="T:System.Web.HttpContext" />. </param><param name="definingType"> The type that this resource item is associated with. </param><param name="resourceType"> The resource type (image, static html, etc.) </param><param name="relativeUrl"> The relative URL of the item. </param></member><member name="M:Remotion.Web.ResourceUrlResolver.GetResourceUrl(System.Web.UI.Control,System.Type,Remotion.Web.ResourceType,System.String)"><summary>
              Returns the physical URL of a resource item.
            </summary><param name="control"> 
              The current <see cref="T:System.Web.UI.Control" />. This parameter is only used to detect design time.
            </param><param name="definingType"> 
              The type that this resource item is associated with. Must not be <see langword="null" />.
            </param><param name="resourceType"> The resource type (image, static html, etc.) Must not be <see langword="null" />. </param><param name="relativeUrl"> The relative URL of the item. Must not be <see langword="null" /> or empty.</param></member><member name="M:Remotion.Web.ResourceUrlResolver.GetAssemblyRoot(System.Boolean,System.Reflection.Assembly)"><summary> Returns the root folder for all resources belonging to the <paramref name="assembly" />. </summary><param name="isDesignMode"> <see langword="true" /> if the application is in design mode. </param><param name="assembly">The <paramref name="assembly" /> for which a ressource is being resolved.</param></member><member name="M:Remotion.Web.ResourceUrlResolver.GetRoot(System.Boolean)"><summary> Returns the root folder for all resources. </summary><param name="isDesignMode"> <see langword="true" /> if the application is in design mode. </param></member><member name="T:Remotion.Web.Configuration.ExecutionEngineConfiguration"><summary> Configuration section entry for configuring the <b>Remotion.Web.ExecutionEngine</b>. </summary></member><member name="P:Remotion.Web.Configuration.ExecutionEngineConfiguration.FunctionTimeout"><summary> Gets or sets the default timeout for individual functions within one session. </summary></member><member name="P:Remotion.Web.Configuration.ExecutionEngineConfiguration.EnableSessionManagement"><summary> Gets or sets a flag that determines whether session management is employed. </summary></member><member name="P:Remotion.Web.Configuration.ExecutionEngineConfiguration.RefreshInterval"><summary> Gets or sets the default refresh intervall for a function. </summary></member><member name="P:Remotion.Web.Configuration.ExecutionEngineConfiguration.UrlMappingFile"><summary> Gets or sets the path to the file holding the URL mapping configuration. </summary></member><member name="P:Remotion.Web.Configuration.ExecutionEngineConfiguration.MaximumUrlLength"><summary> Gets or sets the maximum length of URLs generated by the Execution Engine. </summary></member><member name="P:Remotion.Web.Configuration.ExecutionEngineConfiguration.DefaultWxeHandler"><summary> Gets or sets the path to the default <see cref="T:Remotion.Web.ExecutionEngine.WxeHandler" />. </summary></member><member name="T:Remotion.Web.Configuration.ResourceConfiguration"><summary> Configuration section entry for specifying the resources root. </summary></member><member name="P:Remotion.Web.Configuration.ResourceConfiguration.Root"><summary> Gets or sets the root folder for all resources. </summary></member><member name="T:Remotion.Web.Configuration.SmartNavigationConfiguration"><summary> Configuration section entry for configuring the <b>Remotion.Web.ExecutionEngine</b>. </summary></member><member name="P:Remotion.Web.Configuration.SmartNavigationConfiguration.EnableScrolling"><summary> Gets or sets a flag that determines whether to enable smart scrolling. </summary></member><member name="P:Remotion.Web.Configuration.SmartNavigationConfiguration.EnableFocusing"><summary> Gets or sets a flag that determines whether to enable smart focus. </summary></member><member name="T:Remotion.Web.Configuration.WaiConformanceLevel"><summary> Enumeration listing the possible WCAG conformance levels. </summary></member><member name="F:Remotion.Web.Configuration.WaiConformanceLevel.Undefined"><summary> The web application is not required to follow the WAI guidelines. </summary></member><member name="F:Remotion.Web.Configuration.WaiConformanceLevel.A"><summary> WAI conformance level A, all Priority 1 checkpoints are satisfied. </summary></member><member name="F:Remotion.Web.Configuration.WaiConformanceLevel.DoubleA"><summary> WAI conformance level Double-A, all Priority 1 and 2 checkpoints are satisfied. </summary></member><member name="F:Remotion.Web.Configuration.WaiConformanceLevel.TripleA"><summary> WAI conformance level Triple-A, all Priority 1, 2, and 3 checkpoints are satisfied. </summary></member><member name="T:Remotion.Web.Configuration.WcagDebugMode"><summary> Enumeration listing the possible modes for debugging WCG conformance. </summary></member><member name="T:Remotion.Web.Configuration.WcagConfiguration"><summary> Configuration section entry for specifying the application wide WAI level. </summary></member><member name="P:Remotion.Web.Configuration.WcagConfiguration.ConformanceLevel"><summary> Gets or sets the WCAG conformance level required in this web-application. </summary></member><member name="P:Remotion.Web.Configuration.WcagConfiguration.Debugging"><summary>
              Gets or sets a value specifying if and how the developer will be notified on WAI compliancy issues in the 
              controls' configuration.
            </summary></member><member name="T:Remotion.Web.Configuration.WebConfiguration"><summary> The configuration section for <b>Remotion.Web</b>. </summary></member><member name="F:Remotion.Web.Configuration.WebConfiguration.ElementName"><summary> The name of the configuration section in the configuration file. </summary></member><member name="F:Remotion.Web.Configuration.WebConfiguration.SchemaUri"><summary> The namespace of the configuration section schema. </summary></member><member name="M:Remotion.Web.Configuration.WebConfiguration.GetSchemaReader"><summary> Gets an <see cref="T:System.Xml.XmlReader" /> reader for the schema embedded in the assembly. </summary></member><member name="P:Remotion.Web.Configuration.WebConfiguration.Current"><summary> Gets the <see cref="T:Remotion.Web.Configuration.WebConfiguration" />. </summary></member><member name="P:Remotion.Web.Configuration.WebConfiguration.ExecutionEngine"><summary> Gets or sets the <see cref="T:Remotion.Web.Configuration.ExecutionEngineConfiguration" /> entry. </summary></member><member name="P:Remotion.Web.Configuration.WebConfiguration.Wcag"><summary> Gets or sets the <see cref="T:Remotion.Web.Configuration.WcagConfiguration" /> entry. </summary></member><member name="P:Remotion.Web.Configuration.WebConfiguration.Resources"><summary> Gets or sets the <see cref="T:Remotion.Web.Configuration.ResourceConfiguration" /> entry. </summary></member><member name="P:Remotion.Web.Configuration.WebConfiguration.SmartNavigation"><summary> Gets or sets the <see cref="T:Remotion.Web.Configuration.SmartNavigationConfiguration" /> entry. </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ExecutingSubFunctionWithoutPermaUrlState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ExecutingSubFunctionWithoutPermaUrlState" /> is responsible for executing a sub-function.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PostProcessingSubFunctionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecutionStateBase`1"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecutionStateBase`1" /> type is an abstract base class implementing the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" /> interface.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" /> interface is defines the state-pattern for executing a sub-function within a <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState.ExecuteSubFunction(Remotion.Web.ExecutionEngine.WxeContext)"><summary>
            Executes the behavor of the current state and uses the <see cref="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState.ExecutionStateContext" /> to transistion the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />
            into the next state. 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState.ExecutionStateContext"><summary> Gets the context of the execution. Use this member to transistion the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> into the next state. </summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState.Parameters"><summary> Gets a set of parameters common for all execution states, such as the executing <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState.IsExecuting"><summary> Gets a flag that informs the observer whether the state is executing. This value is typically constant for a state implementation. </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ExecutingSubFunctionWithPermaUrlState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.RedirectingToSubFunctionState" /> is responsible for executing a sub-function.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ReturningFromSubFunctionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PostProcessingSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PostProcessingSubFunctionState" /> is responsible for setting the current <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />'s state after the sub-function
            has completed execution. Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the 
            <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.NullExecutionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PreparingRedirectToSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PreparingRedirectToSubFunctionState" /> is responsible for evaluating the perma-URL information required for a sub-function.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.RedirectingToSubFunctionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PreProcessingSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PreProcessingSubFunctionState" /> is responsible for setting up the current <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> to execute the sub-function.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PreparingRedirectToSubFunctionState" /> if the
            sub-function has a perma-URL and into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ExecutingSubFunctionWithoutPermaUrlState" /> otherwise.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.RedirectingToSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.RedirectingToSubFunctionState" /> is responsible for redirecting the user's client to a sub-function's Perma-URL.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ExecutingSubFunctionWithPermaUrlState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.RedirectingToSubFunctionStateParameters"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.RedirectingToSubFunctionStateParameters" /> type provides all state required to redirect to and return from a sub-function URL.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecutionStateParameters"><summary> 
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecutionStateParameters" /> type groups a basic set of parameters passed between the individual implementations of the
            <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" /> interface during the various state transistions. 
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateParameters"><summary> The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateParameters" /> defines a common set of parameters for <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" /> implementations. </summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateParameters.SubFunction"><summary> Gets the executing sub-function. </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ReturningFromSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.ReturningFromSubFunctionState" /> is responsible for redirecting the user's client back to main-function URL after the sub-function
            has completed execution and a perma-URL was used. Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the 
            <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.Execute.PostProcessingSubFunctionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PostProcessingSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PostProcessingSubFunctionState" /> is responsible for setting the current <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />'s state after the sub-function
            has completed execution. Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the 
            <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.NullExecutionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PreparingRedirectToSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PreparingRedirectToSubFunctionState" /> is responsible for evaluating the perma-URL information required for a sub-function.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.RedirectingToSubFunctionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PreProcessingSubFunctionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PreProcessingSubFunctionState" /> is responsible for setting up the current <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> to execute the sub-function.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PreparingRedirectToSubFunctionState" /> .
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.RedirectingToSubFunctionState.#ctor(Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext,Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.RedirectingToSubFunctionStateParameters)"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.RedirectingToSubFunctionState" /> is responsible for redirecting the user's client to a sub-function's Perma-URL.
            Executing this state will transition the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> into the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.PostProcessingSubFunctionState" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.RedirectingToSubFunctionStateParameters"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.ExecuteExternalByRedirect.RedirectingToSubFunctionStateParameters" /> type provides all state required to redirect to a sub-function URL.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext" /> interface exposes the context in which the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" /> implementations operate.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext.SetExecutionState(Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState)"><summary> Transistions the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> into the next <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext.ExecutionState"><summary> Gets the current <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" /> for the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext.CurrentFunction"><summary> Gets the function currently executing, i.e. usually the parent of the <see cref="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext.CurrentStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionStateContext.CurrentStep"><summary> Getst the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> that is executing the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.NullExecutionState"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.NullExecutionState" /> is the null-object implementation of the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.IExecutionState" /> interface. This state always
            returns <see langword="false" /> for the <see cref="P:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.NullExecutionState.IsExecuting" /> property.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.PreparingRedirectToSubFunctionStateParameters"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.PreparingRedirectToSubFunctionStateParameters" /> group the parameters necessary for setting up the the redirect to a sub-function URL.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.PreProcessingSubFunctionStateParameters"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.PreProcessingSubFunctionStateParameters" /> group the parameters necessary for setting up the execution of a sub-function.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.IWxeFunctionExecutionListener"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.IWxeFunctionExecutionListener" /> interface defines hooks for interacting with a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />'s execution,
            including it's re-entry model.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.IWxeFunctionExecutionListener.OnExecutionPlay(Remotion.Web.ExecutionEngine.WxeContext)"><summary>Play is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method is invoked (first and subsequent calls).</summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.IWxeFunctionExecutionListener.OnExecutionStop(Remotion.Web.ExecutionEngine.WxeContext)"><summary>Stop is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method is completed successfully.</summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.IWxeFunctionExecutionListener.OnExecutionPause(Remotion.Web.ExecutionEngine.WxeContext)"><summary>
            Play is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method is exited by a <see cref="T:System.Threading.ThreadAbortException" />,
            i.e. the execution is paused.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.IWxeFunctionExecutionListener.OnExecutionFail(Remotion.Web.ExecutionEngine.WxeContext,System.Exception)"><summary>Play is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method fails.</summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.NullExecutionListener"><summary>
            <see cref="T:Remotion.INullObject" /> implemention of the <see cref="T:Remotion.Web.ExecutionEngine.Infrastructure.IWxeFunctionExecutionListener" /> interface.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Infrastructure.NumberedMemberFinder"><summary>
              Finds and orders type members using a prefix/number pattern.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.NumberedMemberFinder.FindMembers(System.Type,System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)"><summary>
              Returnes an orderd array of member infos.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.SecurityExecutionListener.OnExecutionPlay(Remotion.Web.ExecutionEngine.WxeContext)"><summary>Play is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method is invoked (first and subsequent calls).</summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.SecurityExecutionListener.OnExecutionStop(Remotion.Web.ExecutionEngine.WxeContext)"><summary>Stop is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method is completed successfully.</summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.SecurityExecutionListener.OnExecutionPause(Remotion.Web.ExecutionEngine.WxeContext)"><summary>
            Play is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method is exited by a <see cref="T:System.Threading.ThreadAbortException" />,
            i.e. the execution is paused.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.SecurityExecutionListener.OnExecutionFail(Remotion.Web.ExecutionEngine.WxeContext,System.Exception)"><summary>Play is invoked when the function's <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> method fails.</summary></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.SecurityExecutionListener.IsNull"><summary>
            Gets a value indicating whether the object is a "Null Object".
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxeExceptionHandler.SetCatchExceptionTypes(System.Type[])"><summary>
              Sets <see cref="P:Remotion.Web.ExecutionEngine.Infrastructure.WxeExceptionHandler.CatchExceptions" /> to <c>true</c> and limits the types of exceptions that are caught.
            </summary><param name="exceptionTypes"> Exceptions of these types or sub classes will be caught, all other
                exceptions will be rethrown. </param></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxeExceptionHandler.AppendCatchExceptionTypes(System.Type[])"><summary>
              Joins the passed exceptions types with those already assigned.
            </summary><param name="exceptionTypes"> 
              Exceptions of these types or sub classes will be caught, all other exceptions will be rethrown. 
            </param></member><member name="P:Remotion.Web.ExecutionEngine.Infrastructure.WxeExceptionHandler.CatchExceptions"><summary> 
              If this is <c>true</c>, exceptions are caught and returned in the <see cref="P:Remotion.Web.ExecutionEngine.Infrastructure.WxeExceptionHandler.Exception" /> property.
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.Infrastructure.WxeVariablesContainer.s_parameterDeclarations"><summary> Hashtable&lt;Type, WxeParameterDeclaration[]&gt; </summary></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxeVariablesContainer.ParseActualParameters(Remotion.Web.ExecutionEngine.WxeParameterDeclaration[],System.String,System.Globalization.CultureInfo)"><summary>
              Parses a string of comma separated actual parameters.
            </summary><param name="parameterDeclarations">
             The <see cref="T:Remotion.Web.ExecutionEngine.WxeParameterDeclaration" /> list used for parsing the <paramref name="actualParameters" />.
             Must not be <see langword="null" /> or contain items that are <see langword="null" />.
            </param><param name="actualParameters"> 
              The comma separated list of parameters. Must contain an entry for each required parameter.
              Must not be <see langword="null" />.
            </param><param name="culture"> The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxeVariablesContainer.SerializeParametersForQueryString(Remotion.Web.ExecutionEngine.WxeParameterDeclaration[],System.Object[])"><summary>
              Converts a list of parameter values into a <see cref="T:System.Collections.Specialized.NameValueCollection" />.
            </summary><param name="parameterDeclarations">
             The <see cref="T:Remotion.Web.ExecutionEngine.WxeParameterDeclaration" /> list used for serializing the <paramref name="parameterValues" />.
             Must not be <see langword="null" /> or contain items that are <see langword="null" />.
            </param><param name="parameterValues"> 
              The list parameter values. Must not be <see langword="null" />.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxeVariablesContainer.InitializeParameters(System.Collections.Specialized.NameValueCollection)"><summary> Initalizes parameters by name. </summary><param name="parameters"> 
              The list of parameter. Must contain an entry for each required parameter. Must not be <see langword="null" />. 
            </param></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxeVariablesContainer.InitializeParameters(System.String,Remotion.Collections.NameObjectCollection)"><summary> Initializes the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> with the supplied parameters. </summary><param name="parameterString"> 
              The comma separated list of parameters. Must contain an entry for each required parameter.
              Must not be <see langword="null" />.
            </param><param name="additionalParameters"> 
              The parameters passed to the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> in addition to the executing function's variables.
              Use <see langword="null" /> or an empty collection if all parameters are supplied by the 
              <see cref="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.Parameters" /> string and the function stack.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.Infrastructure.WxeVariablesContainer.EnsureParametersInitialized(Remotion.Collections.NameObjectCollection)"><summary> Pass actualParameters to Variables. </summary></member><member name="T:Remotion.Web.ExecutionEngine.Obsolete.WxeIf"><summary>
            If-Then-Else block.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeStep"><summary> Performs a single operation in a web application as part of a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.GetFunction(Remotion.Web.ExecutionEngine.WxeStep)"><summary> Gets the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for the passed <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary><param name="step"> The <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> whose <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to get. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.GetStepByType``1(Remotion.Web.ExecutionEngine.WxeStep)"><summary>
            Gets the first step of the specified type <typeparamref name="T" />.
            </summary><param name="step">The step from which to start searching for the given step type <typeparamref name="T" />.</param></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.varref(System.String)"><summary> Used to pass a variable by reference to a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. </summary><param name="localVariable"> The name of a variable in the scope's <see cref="P:Remotion.Web.ExecutionEngine.WxeStep.Variables" /> collection. </param></member><member name="F:Remotion.Web.ExecutionEngine.WxeStep._isAborting"><summary> 
              <see langword="true" /> during the execution of <see cref="M:Remotion.Web.ExecutionEngine.WxeStep.Abort" />. Used to prevent circular aborting.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.Execute"><summary> Executes the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.Execute(Remotion.Web.ExecutionEngine.WxeContext)"><summary> Executes the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary><param name="context"> The <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" /> containing the information about the execution. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.SetParentStep(Remotion.Web.ExecutionEngine.WxeStep)"><summary> Sets the parent step of this <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary><param name="parentStep"> 
      The <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> to be set as this step's parent. Must not be <see langword="null" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.Abort"><summary> Aborts the <b>WxeStep</b> by calling <see cref="M:Remotion.Web.ExecutionEngine.WxeStep.AbortRecursive" />. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeStep.AbortRecursive"><summary> Contains the aborting logic for the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeStep.Variables"><summary> Gets the scope's variables collection. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeStep.ParentStep"><summary> Gets the parent step of the the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeStep.ExecutingStep"><summary> Gets the step currently being executed. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeStep.RootFunction"><summary> Gets the root <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of the execution hierarchy. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeStep.ParentFunction"><summary> Gets the parent <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for this <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeStep.CurrentException"><summary> 
              Gets the <see cref="T:System.Exception" /> caught by the <see cref="T:Remotion.Web.ExecutionEngine.Obsolete.WxeTryCatch" /> block encapsulating this 
              <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeStep.IsAborted"><summary> Gets a flag describing whether the <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" /> has been aborted. </summary></member><member name="T:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions"><summary>
            This class contains extension methods for the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunction(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction)"><summary> Executes the <paramref name="function" /> in the current window. </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunction(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Boolean,System.Boolean)"><summary> Executes the <paramref name="function" /> in the current window. </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the parent function's perma-URL. Defaults to <see langword="false" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunction(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary> Executes the <paramref name="function" /> in the current window. </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the parent function's perma-URL. Defaults to <see langword="false" />.
    </param><param name="permaUrlParameters">
      Provides the list of arguments for the perma-URL's query string. Defaults to <see langword="null" />, 
      which indicates that the <paramref name="function" />'s current parameters should be used for the query string.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionNoRepost(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Web.UI.Control)"><summary>Executes the <paramref name="function" /> in the current window without triggering the current post-back event on returning.</summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionNoRepost(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Web.UI.Control,System.Boolean)"><summary>Executes the <paramref name="function" /> in the current window without triggering the current post-back event on returning.</summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="usesEventTarget"> <see langword="true" /> to  use the <b>__EVENTTARGET</b> field. </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionNoRepost(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Web.UI.Control,System.Boolean,System.Boolean)"><summary>Executes the <paramref name="function" /> in the current window without triggering the current post-back event on returning.</summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the parent function's perma-URL. Defaults to <see langword="false" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionNoRepost(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Web.UI.Control,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary>Executes the <paramref name="function" /> in the current window without triggering the current post-back event on returning.</summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the parent function's perma-URL. Defaults to <see langword="false" />.
    </param><param name="permaUrlParameters">
      Provides the list of arguments for the perma-URL's query string. Defaults to <see langword="null" />, 
      which indicates that the <paramref name="function" />'s current parameters should be used for the query string.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionNoRepost(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Web.UI.Control,System.Boolean,System.Boolean,System.Boolean)"><summary>Executes the <paramref name="function" /> in the current window without triggering the current post-back event on returning.</summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="usesEventTarget"> <see langword="true" /> to  use the <b>__EVENTTARGET</b> field. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the parent function's perma-URL. Defaults to <see langword="false" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionNoRepost(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Web.UI.Control,System.Boolean,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary>Executes the <paramref name="function" /> in the current window without triggering the current post-back event on returning.</summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="usesEventTarget"> <see langword="true" /> to  use the <b>__EVENTTARGET</b> field. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the parent function's perma-URL. Defaults to <see langword="false" />.
    </param><param name="permaUrlParameters">
      Provides the list of arguments for the perma-URL's query string. Defaults to <see langword="null" />, 
      which indicates that the <paramref name="function" />'s current parameters should be used for the query string.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              current window or frame. The execution engine uses a redirect request to transfer the execution to the new function.
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the executing function's perma-URL. Defaults to <see langword="false" />.
    </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the <paramref name="function" />'s current parameters should be used for the query string.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              current window or frame. The execution engine uses a redirect request to transfer the execution to the new function.
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the executing function's perma-URL. Defaults to <see langword="false" />.
    </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the <paramref name="function" />'s current parameters should be used for the query string.
    </param><param name="returnToCaller">
      <see langword="true" /> to return to the executing function.
      Defaults to <see langword="true" />.
    </param><param name="callerUrlParameters">
      Provides the list of arguments for the return URL's query string. Defaults to <see langword="null" />, 
      which indicates that the executing page's current parameters should be used for the query string.
      Provide an emtpy <see cref="T:System.Collections.Specialized.NameValueCollection" /> if your function does not support perma-urls.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.Web.UI.Control,System.Boolean)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              specified window or frame by through a javascript call.
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or empty.
    </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="returningPostback"> <see langword="true" /> if the call should be returned to the current window. </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.String,System.Web.UI.Control,System.Boolean)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              specified window or frame through javascript window.open(...).
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or empty.
    </param><param name="features"> The features argument that is passed to the javascript function <b>window.open()</b>. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="returningPostback"> <see langword="true" /> if the call should be returned to the current window. </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.Web.UI.Control,System.Boolean,System.Boolean,System.Boolean)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              specified window or frame through javascript window.open(...).
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or empty.
    </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="returningPostback"> <see langword="true" /> if the call should be returned to the current window. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the executing function's perma-URL. Defaults to <see langword="false" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.Web.UI.Control,System.Boolean,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              specified window or frame through javascript window.open(...).
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or empty.
    </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="returningPostback"> <see langword="true" /> if the call should be returned to the current window. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the executing function's perma-URL. Defaults to <see langword="false" />.
    </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the <paramref name="function" />'s current parameters should be used for the query string.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.String,System.Web.UI.Control,System.Boolean,System.Boolean,System.Boolean)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              specified window or frame through javascript window.open(...).
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or empty.
    </param><param name="features"> The features argument that is passed to the javascript function <b>window.open()</b>. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="returningPostback"> <see langword="true" /> if the call should be returned to the current window. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the executing function's perma-URL. Defaults to <see langword="false" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.Obsolete.WxePageExtensions.ExecuteFunctionExternal(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.String,System.Web.UI.Control,System.Boolean,System.Boolean,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> outside the current function's context (i.e. asynchron) using the 
              specified window or frame through javascript window.open(...).
            </summary><param name="page">The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> on which the function will be executed. Must not be <see langword="null" />.</param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or empty.
    </param><param name="features"> The features argument that is passed to the javascript function <b>window.open()</b>. </param><param name="sender"> 
      The control that caused the event (i.e. the <b>sender</b> argument of the event handler).
      Valid senders implement either <see cref="T:System.Web.UI.IPostBackEventHandler" /> or <see cref="T:System.Web.UI.IPostBackDataHandler" />
    </param><param name="returningPostback"> <see langword="true" /> if the call should be returned to the current window. </param><param name="createPermaUrl"> 
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="useParentPermaUrl">
      <see langword="true" /> to add the executing function's perma-URL. Defaults to <see langword="false" />.
    </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the <paramref name="function" />'s current parameters should be used for the query string.
    </param></member><member name="T:Remotion.Web.ExecutionEngine.Obsolete.WxeFunctionPageAttribute"><summary>
            Specifies that a WXE function should automatically be created by the WXE function generator (wxegen.exe).
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Obsolete.WxePageParameterAttribute"><summary>
            Specifies a WXE function parameter that should automatically be created by the WXE function generator (wxegen.exe). 
            Requires <see cref="T:Remotion.Web.ExecutionEngine.Obsolete.WxeFunctionPageAttribute" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.Obsolete.WxeTryCatch"><summary>
              Try-Catch block.
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.Obsolete.WxeTryCatch._executingCatchBlock"><summary>
            index of currently executing catch block, or -1 if the try block is executing, -2 if finally block is executing
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.Obsolete.WxeTryCatch._catchBlocks"><summary> ArrayList&lt;WxeCatchBlock&gt; </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeStepList"><summary>
              Performs a sequence of steps in a web application.
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeStepList._steps"><summary> ArrayList&lt;WxeStep&gt; </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeStepList.Encapsulate(Remotion.Web.ExecutionEngine.WxeStepList)"><summary>
              Moves all steps to <paramref name="innerList" /> and makes <paramref name="innerList" /> the only step of 
              this step list.
            </summary><param name="innerList"> 
              This list will be the only step of the <see cref="T:Remotion.Web.ExecutionEngine.WxeStepList" /> and contain all of the 
              <see cref="T:Remotion.Web.ExecutionEngine.WxeStepList" />'s steps. Must be empty and not executing.
            </param></member><member name="T:Remotion.Web.ExecutionEngine.UrlMapping.ConfigurationBase"><summary> Represents the common information all configuration classes provide. </summary></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.ConfigurationBase.#ctor(System.String)"><summary> Initializes a new instance of the <b>ConfigurationBase</b> type. </summary></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.ConfigurationBase.#ctor"><summary> XML Deserialization contructor. </summary></member><member name="P:Remotion.Web.ExecutionEngine.UrlMapping.ConfigurationBase.ApplicationName"><summary> Gets the application name that is specified in the XML configuration file.  </summary></member><member name="T:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration"><summary> Contains the configuration data for the URL mapping system of the execution engine. </summary></member><member name="F:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration.ElementName"><summary> The name of the root element. </summary></member><member name="F:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration.SchemaUri"><summary> The namespace of the mapping's schema. </summary></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration.SetCurrent(Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration)"><summary> Sets the current <see cref="T:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration.Current"><summary> Gets the current <see cref="T:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingConfiguration" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry.ID"><summary> An optional ID for the <see cref="T:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry.FunctionTypeName"><summary>
              The <see cref="T:System.Type" /> name of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> identified by the <see cref="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry.Resource" />. 
              Must not be <see langword="null" /> or empty. 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry.FunctionType"><summary> 
              The <see cref="T:System.Type" /> of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> identified by the <see cref="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry.Resource" />. 
              Must not be <see langword="null" />. 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry.Resource"><summary> 
              The path associated with the <see cref="P:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry.FunctionType" />. Must not be <see langword="null" /> or empty. 
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingCollection.FindType(System.String)"><summary> Finds the mapping for the specified <paramref name="path" />. </summary><param name="path"> The path to look-up. </param></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingCollection.FindResource(System.Type)"><summary> Finds the mapping for the specified <paramref name="type" />. </summary><param name="type"> The name of the <see cref="T:System.Type" /> to look-up. </param></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingCollection.FindResource(System.String)"><summary> Finds the mapping for the specified <paramref name="typeName" />. </summary><param name="typeName"> The name of the <see cref="T:System.Type" /> to look-up. </param></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingCollection.Find(System.String)"><summary> Finds the mapping for the specified <paramref name="path" />. </summary><param name="path"> The path to look-up. </param></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingCollection.Find(System.Type)"><summary> Finds the mapping for the specified <paramref name="functionType" />. </summary><param name="functionType"> The <see cref="T:System.Type" /> to look-up. </param></member><member name="M:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingCollection.FindByID(System.String)"><summary> Finds the mapping for the specified <paramref name="id" />. </summary><param name="id"> The ID to look-up. Must not be <see langword="null" /> or empty. </param></member><member name="T:Remotion.Web.ExecutionEngine.IWxeCallArguments"><summary>
              The <see cref="T:Remotion.Web.ExecutionEngine.IWxeCallArguments" /> interface is used to to collect the parameters for executing a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.IWxePage"><summary> This interface represents a page that can be used in a <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. </summary></member><member name="T:Remotion.Web.UI.ISmartPage"><summary>
              This interface represents a page that has a dirty-state and can prevent multiple postbacks.
            </summary></member><member name="T:Remotion.Web.UI.IPage"><summary>
              This interface contains all public members of System.Web.UI.Page. It is used to derive interfaces that will be
              implemented by deriving from System.Web.UI.Page.
            </summary></member><member name="T:Remotion.Web.UI.Controls.ITemplateControl"><summary>
              This interface contains all public members of System.Web.UI.TemplateControl. It is used to 
              derive interfaces that will be implemented by deriving from System.Web.UI.TemplateControl.
            </summary></member><member name="T:Remotion.Web.UI.Controls.IControl"><summary>
              This interface contains all public members of System.Web.UI.Control. It is used to derive interfaces that will be
              implemented by deriving from System.Web.UI.Control.
            </summary></member><member name="M:Remotion.Web.UI.ISmartPage.GetPostBackCollection"><summary> Gets the post back data for the page. </summary></member><member name="M:Remotion.Web.UI.ISmartPage.RegisterControlForDirtyStateTracking(Remotion.Web.UI.Controls.IEditableControl)"><summary>
              Registers a control implementing <see cref="T:Remotion.Web.UI.Controls.IEditableControl" /> for tracking of it's server- and client-side
              dirty state.
            </summary><param name="control"> A control implementing <see cref="T:Remotion.Web.UI.Controls.IEditableControl" /> that will be tracked. </param></member><member name="M:Remotion.Web.UI.ISmartPage.RegisterControlForClientSideDirtyStateTracking(System.String)"><summary>
              Resgisters a <see cref="P:System.Web.UI.Control.ClientID" /> for the tracking of the controls client-side dirty state.
            </summary><param name="clientID"> The ID of an HTML input/textarea/select element. </param></member><member name="M:Remotion.Web.UI.ISmartPage.EvaluateDirtyState"><summary> 
              Evaluates whether any control regsitered using <see cref="M:Remotion.Web.UI.ISmartPage.RegisterControlForDirtyStateTracking(Remotion.Web.UI.Controls.IEditableControl)" />
              has values that must be persisted before the user leaves the page. 
            </summary></member><member name="M:Remotion.Web.UI.ISmartPage.RegisterClientSidePageEventHandler(Remotion.Web.UI.SmartPageEvents,System.String,System.String)"><summary> 
              Registers Java Script functions to be executed when the respective <paramref name="pageEvent" /> is raised.
            </summary><param name="pageEvent"> The type of event to register for. </param><param name="key"> 
      Forms in combination with <paramref name="pageEvent" /> a unique key that identifies the function.
    </param><param name="function"> The name of the Java Script function to be called. </param></member><member name="M:Remotion.Web.UI.ISmartPage.SaveAllState"><summary> Saves the ControlState and the ViewState of the ASP.NET page. </summary></member><member name="P:Remotion.Web.UI.ISmartPage.IsDirtyStateTrackingEnabled"><summary>
              Gets a flag that determines whether the dirty state will be taken into account when displaying the abort 
              confirmation dialog.
            </summary></member><member name="P:Remotion.Web.UI.ISmartPage.IsAbortConfirmationEnabled"><summary>
              Gets or sets a flag that determines whether to display a confirmation dialog before leaving the page. 
             </summary></member><member name="P:Remotion.Web.UI.ISmartPage.AbortMessage"><summary> Gets the message displayed when the user attempts to abort the WXE Function. </summary></member><member name="P:Remotion.Web.UI.ISmartPage.StatusIsSubmittingMessage"><summary> Gets the message displayed when the user attempts to submit while the page is already submitting. </summary></member><member name="P:Remotion.Web.UI.ISmartPage.IsStatusIsSubmittingMessageEnabled"><summary> 
              Gets a flag whether the is submitting status messages will be displayed when the user tries to postback while 
              a request is being processed.
            </summary></member><member name="P:Remotion.Web.UI.ISmartPage.CheckFormStateFunction"><summary>
              Regisiters a Java Script function used to evaluate whether to continue with the submit.
              Signature: <c>bool Function (isAborting, hasSubmitted, hasUnloaded, isCached)</c>
            </summary></member><member name="P:Remotion.Web.UI.ISmartPage.HtmlForm"><summary> Gets or sets the <see cref="P:Remotion.Web.UI.ISmartPage.HtmlForm" /> of the ASP.NET page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.IWxePage.ExecuteNextStep"><summary> End this page step and continue with the WXE function. </summary></member><member name="M:Remotion.Web.ExecutionEngine.IWxePage.ExecuteFunction(Remotion.Web.ExecutionEngine.WxeFunction,Remotion.Web.ExecutionEngine.IWxeCallArguments)"><summary>Executes the <paramref name="function" /> using the specified <paramref name="callArguments" />.</summary><param name="function">The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to be executed.</param><param name="callArguments">The <see cref="T:Remotion.Web.ExecutionEngine.IWxeCallArguments" /> used to control the function invocation.</param></member><member name="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrlParameters"><summary> Gets the permanent URL parameters the current page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrl"><summary> Gets the permanent URL for the current page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrl(System.Collections.Specialized.NameValueCollection)"><summary> Gets the permanent URL for the current page using the specified <paramref name="queryString" />. </summary><param name="queryString">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the query string arguments. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrl(System.Type,System.Collections.Specialized.NameValueCollection)"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of the specified <paramref name="functionType" /> 
              and using the <paramref name="queryString" />.
            </summary><param name="functionType"> 
      The type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for which to create the permanent URL. 
      Must be derived from <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. 
    </param><param name="queryString">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the query string arguments. Must not be <see langword="null" />. 
    </param></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.IsReturningPostBack"><summary> Gets a flag describing whether this post-back has been triggered by returning from a WXE function. </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.ReturningFunction"><summary> Gets the WXE function that has been executed in the current page. </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.IsAbortEnabled"><summary>
              Gets a flag that determines whether to abort the session upon closing the window. 
             </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.AreOutOfSequencePostBacksEnabled"><summary>
              Gets a flag that determines whether to allow out-of-sequence postbacks (i.e. post-backs from an already 
              submitted page because of the cache). 
             </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.IsOutOfSequencePostBack"><summary>
              Gets a flag that describes whether the current postback cycle was caused by resubmitting a page from the 
              client's cache.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.AreStatusMessagesEnabled"><summary> 
              Gets a flag whether the status messages (i.e. is submitting, is aborting) will be displayed when the user
              tries to e.g. postback while a request is being processed.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.StatusIsAbortingMessage"><summary> Gets the message displayed when the user attempts to submit while the page is already aborting. </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.StatusIsCachedMessage"><summary> 
              Gets the message displayed when the user returnes to a cached page that has already been submited or aborted. 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.IWxePage.WxeHandler"><summary> Gets or sets the <see cref="P:Remotion.Web.ExecutionEngine.IWxePage.WxeHandler" /> of the current request. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeCallArguments"><summary>
            Use an instance <see cref="T:Remotion.Web.ExecutionEngine.WxeCallArguments" /> type to control the execution of a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. This type always requires a 
            <b>sender</b>-object and can be parameterized with <see cref="T:Remotion.Web.ExecutionEngine.WxeCallOptions" /> to specify if the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> should execute
            within the same window, as a new root-function, with or without a perma-URL and so on.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeCallArgumentsBase"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.WxeCallArgumentsBase" /> type is the default implementation of <see cref="T:Remotion.Web.ExecutionEngine.IWxeCallArguments" /> and acts as the base type for
            the <see cref="T:Remotion.Web.ExecutionEngine.WxeCallArguments" /> and <see cref="T:Remotion.Web.ExecutionEngine.WxePermaUrlCallArguments" /> types.
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeCallArguments.Default"><summary>
            The default arguments. Use this instance to execute a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> as a sub-function within the same window.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeCallExternalException"><summary> 
              This exception is thrown to cancel the processing of an event handler that called a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeIgnorableException"><summary> 
              Exceptions derived from <see cref="T:Remotion.Web.ExecutionEngine.WxeIgnorableException" /> can safely be ignored in event handlers 
              that call other WxeFunctions.
              <see cref="T:Remotion.Web.ExecutionEngine.WxeUserCancelException" />.
              <see cref="T:Remotion.Web.ExecutionEngine.WxeCallExternalException" />
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeException"><summary> This exception is thrown by the web execution engine. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeCallOptions"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.WxeCallOptions" /> type represents the most generic of options for executing a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />, namely it only controls
            whether the useer should be presented with a perma-URL to the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            Use the derived types if you require additional control over the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />'s execution.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeCallOptionsExternal"><summary>
            Use the <see cref="T:Remotion.Web.ExecutionEngine.WxeCallOptionsExternal" /> type if you whish to execute a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> as a new root function, 
            typically in a new window. The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> will be initialized on the server and then opened via a Javascript call.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeCallOptionsExternalByRedirect"><summary>
            Use the <see cref="T:Remotion.Web.ExecutionEngine.WxeCallOptionsExternalByRedirect" /> type if you whish to execute a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> as a new root function in the
            same window.The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> will be initialized on the server and then opened via a HTTP-redirect request.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeCallOptionsNoRepost"><summary>
            Use the <see cref="T:Remotion.Web.ExecutionEngine.WxeCallOptionsNoRepost" /> type if you whish to execute a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> as a sub function and suppressing 
            the re-post to the postback-handler after the execution has returned to the caller function.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeContext"><summary>
              The <b>WxeContext</b> contains information about the current WXE execution cycle.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetPermanentUrl(Remotion.Web.Infrastructure.IHttpContext,System.Type,System.Collections.Specialized.NameValueCollection)"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of the specified <paramref name="functionType" /> 
              and using the <paramref name="urlParameters" />.
            </summary><param name="httpContext"> 
      The <see cref="T:Remotion.Web.Infrastructure.IHttpContext" /> used for resolving the path. Must not be <see langword="null" />. 
    </param><param name="functionType"> 
      The type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for which to create the permanent URL. 
      Must be derived from <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. Must not be <see langword="null" />. 
    </param><param name="urlParameters">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the url parameters used for the query string. 
      Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetPermanentUrl(Remotion.Web.Infrastructure.IHttpContext,System.Type,System.Collections.Specialized.NameValueCollection,System.Boolean)"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of the specified <paramref name="functionType" /> 
              and using the <paramref name="urlParameters" />.
            </summary><param name="httpContext"> 
      The <see cref="T:Remotion.Web.Infrastructure.IHttpContext" /> used for resolving the path. Must not be <see langword="null" />. 
    </param><param name="functionType"> 
      The type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for which to create the permanent URL. 
      Must be derived from <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. Must not be <see langword="null" />. 
    </param><param name="urlParameters">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the url parameters used for the query string. 
      Must not be <see langword="null" />. 
    </param><param name="fallbackOnCurrentUrl"> 
      If <see langword="true" />, the method uses the <see cref="P:System.Uri.AbsolutePath" /> of the 
      <paramref name="httpContext" />'s <see cref="P:System.Web.HttpContext.Request" /> as a fallback if no mapping for the
      <paramref name="functionType" /> has been defined, and the 
      <see cref="P:Remotion.Web.Configuration.ExecutionEngineConfiguration.DefaultWxeHandler" /> is not set. 
      Otherwise, a <see cref="T:Remotion.Web.ExecutionEngine.WxeException" /> is thrown.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.ExecuteFunctionExternal(System.Web.UI.Page,Remotion.Web.ExecutionEngine.WxeFunction,System.Collections.Specialized.NameValueCollection,System.Boolean)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> in the current window from any <see cref="T:System.Web.UI.Page" /> by using a redirect.
            </summary><param name="page"> The <see cref="T:System.Web.UI.Page" />. </param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the only <paramref name="function" />'s current parameters should be used for the 
      query string.
    </param><param name="returnToCaller">
      <see langword="true" /> to return to the calling page (i.e. the <see cref="P:System.Web.UI.Page.Request" />'s 
      <see cref="P:System.Web.HttpRequest.RawUrl" /> after the <paramref name="function" /> has completed.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.ExecuteFunctionExternal(System.Web.UI.Page,Remotion.Web.ExecutionEngine.WxeFunction,System.Boolean,System.Collections.Specialized.NameValueCollection,System.Boolean)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> in the current window from any <see cref="T:System.Web.UI.Page" /> by using a redirect.
            </summary><param name="page"> The <see cref="T:System.Web.UI.Page" />. </param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="createPermaUrl">
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the only <paramref name="function" />'s current parameters should be used for the 
      query string.
    </param><param name="returnToCaller">
      <see langword="true" /> to return to the calling page (i.e. the <see cref="P:System.Web.UI.Page.Request" />'s 
      <see cref="P:System.Web.HttpRequest.RawUrl" /> after the <paramref name="function" /> has completed.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.ExecuteFunctionExternal(System.Web.UI.Page,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.String,System.Collections.Specialized.NameValueCollection)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> in the specified window or frame from any <see cref="T:System.Web.UI.Page" /> 
              by using java script.
            </summary><param name="page"> The <see cref="T:System.Web.UI.Page" />. </param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or 
      empty.
    </param><param name="features"> 
      The features argument that is passed to the javascript function <b>window.open()</b>. 
    </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the only <paramref name="function" />'s current parameters should be used for the 
      query string.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.ExecuteFunctionExternal(System.Web.UI.Page,Remotion.Web.ExecutionEngine.WxeFunction,System.String,System.String,System.Boolean,System.Collections.Specialized.NameValueCollection)"><summary> 
              Executes a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> in the specified window or frame from any <see cref="T:System.Web.UI.Page" />  
              by using java script.
            </summary><param name="page"> The <see cref="T:System.Web.UI.Page" />. </param><param name="function"> The WXE function to be executed. Must not be <see langword="null" />. </param><param name="target">
      The HTML frame/window name that will be used to execute the function. Must not be <see langword="null" /> or 
      empty.
    </param><param name="features"> 
      The features argument that is passed to the javascript function <b>window.open()</b>. 
    </param><param name="createPermaUrl">
      <see langword="true" /> to redirect the client to a URL that can be used as a perma-URL. 
      Defaults to <see langword="false" />.
    </param><param name="urlParameters">
      Provides the list of arguments for the URL's query string. Defaults to <see langword="null" />, 
      which indicates that the only <paramref name="function" />'s current parameters should be used for the 
      query string.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetResumeUrl(System.Boolean)"><summary> Gets the URL that resumes the current function. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetResumePath"><summary> Gets the absolute path that resumes the current function. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetPath(System.Collections.Specialized.NameValueCollection)"><summary> Gets the absolute path to the WXE handler used for the current function. </summary><param name="queryString"> An optional list of URL parameters to be appended to the path. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetPath(System.String,System.Collections.Specialized.NameValueCollection)"><summary> Gets the absolute path that resumes the function with specified token. </summary><param name="functionToken"> 
              The function token of the function to resume. Must not be <see langword="null" /> or emtpy.
            </param><param name="queryString"> An optional list of URL parameters to be appended to the path. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetPath(System.String,System.String,System.Collections.Specialized.NameValueCollection)"><summary> Gets the absolute path that resumes the function with specified token. </summary><param name="path"> The path to the <see cref="T:Remotion.Web.ExecutionEngine.WxeHandler" />. Must not be <see langword="null" /> or emtpy. </param><param name="functionToken"> 
              The function token of the function to resume. Must not be <see langword="null" /> or emtpy.
            </param><param name="queryString"> An optional list of URL parameters to be appended to the <paramref name="path" />. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetPermanentUrl(System.Type,System.Collections.Specialized.NameValueCollection)"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of the specified <paramref name="functionType" /> 
              and using the <paramref name="urlParameters" />.
            </summary><param name="functionType"> 
      The type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for which to create the permanent URL. 
      Must be derived from <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. Must not be <see langword="null" />. 
    </param><param name="urlParameters">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the url parameters used for the query string. 
      Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetPermanentUrl(System.Type,System.Collections.Specialized.NameValueCollection,System.Boolean)"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of the specified <paramref name="functionType" /> 
              and using the <paramref name="urlParameters" />.
            </summary><param name="functionType"> 
      The type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for which to create the permanent URL. 
      Must be derived from <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. Must not be <see langword="null" />. 
    </param><param name="urlParameters">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the url parameters used for the query string. 
      Must not be <see langword="null" />. 
    </param><param name="useParentPermanentUrl">
       <see langword="true" /> to add the executing function's perma-URL. Defaults to <see langword="false" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetDestinationUrlForExternalFunction(Remotion.Web.ExecutionEngine.WxeFunction,System.String,Remotion.Web.ExecutionEngine.WxePermaUrlOptions)"><summary> Gets the URL to be used for transfering to the external function. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeContext.GetFunctionTokenForExternalFunction(Remotion.Web.ExecutionEngine.WxeFunction,System.Boolean)"><summary>Initalizes a new <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> with the passed <paramref name="function" /> and returns the associated function token.</summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeContext.Current"><summary> The current <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" />. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeExecuteNextStepException"><summary> This exception is used by the execution engine to end the execution of a <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeExecutionControlExceptionBase"><summary> This exception is used by the execution engine to control the call stack. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeExecuteUserControlNextStepException"><summary> This exception is used by the execution engine to end the execution of a <see cref="T:Remotion.Web.ExecutionEngine.WxeUserControlStep" />. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeExecutor`1"><summary>
            Encapsulates execute logic for WXE functions.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeExecutor`1.System#IDisposable#Dispose"><summary>
            Invoke <see cref="M:System.IDisposable.Dispose" /> at the end of the page life cycle, i.e. in the <see cref="M:System.Web.UI.Control.Dispose" /> method.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeExecutor`1.GetClosingScriptForExternalFunction(System.String,System.Web.UI.Control,System.Boolean)"><summary> Gets the client script to be used as the return URL for the window of the external function. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeExecutor`1.FormatDoPostBackClientScript(System.String,System.String,System.String,System.String,System.String)"><summary> 
              Gets the client script used to execute <c>__dopostback</c> in the parent form before closing the window of the 
              external function.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeExecutor`1.FormatDoSubmitClientScript(System.String,System.String,System.String)"><summary> 
              Gets the client script used to submit the parent form before closing the window of the external function. 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeExecutor`1.UsesEventTarget"><summary> 
              Gets a flag describing whether the post back was most likely caused by the ASP.NET post back mechanism.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeForm.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"><summary> Calls the <see cref="M:Remotion.Web.ExecutionEngine.WxeForm.OnLoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> method. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeForm.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent"><summary> Calls the <see cref="M:Remotion.Web.ExecutionEngine.WxeForm.RaisePostDataChangedEvent" /> method. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeForm.OnLoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"><summary> Fires the <see cref="E:Remotion.Web.ExecutionEngine.WxeForm.LoadPostData" /> event. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeForm.RaisePostDataChangedEvent"><summary> Called when the state of the control has changed between postbacks. </summary></member><member name="E:Remotion.Web.ExecutionEngine.WxeForm.LoadPostData"><summary> Occurs during the load post data phase. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeFunction"><summary>
            The new <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. Will replace the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> type once implemtation is completed.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeFunctionState"><summary>
              Stores the session state for a single function token.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeFunctionState.Abort"><summary> Aborts the <b>WxeFunctionState</b> by calling <see cref="M:Remotion.Web.ExecutionEngine.WxeFunctionState.AbortRecursive" />. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeFunctionState.AbortRecursive"><summary> Aborts the <b>WxeFunctionState</b>. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeFunctionState.IsCleanUpEnabled"><summary> 
              Gets a flag that determines whether to automatically clean-up (i.e. abort) the function state after 
              its function has executed.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeFunctionStateManager.CleanUpExpired"><summary> Cleans up expired <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> objects in the collection. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeFunctionStateManager.Add(Remotion.Web.ExecutionEngine.WxeFunctionState)"><summary> Adds the <paramref name="functionState" /> to the collection. </summary><param name="functionState"> 
              The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> to be added. Must not be <see langword="null" /> or aborted.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeFunctionStateManager.GetItem(System.String)"><summary> Gets the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> for the specifed <paramref name="functionToken" />. </summary><param name="functionToken"> 
              The token to look-up the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" />. Must not be <see langword="null" /> or empty.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeFunctionStateManager.Remove(System.String)"><summary> Removes the <paramref name="functionToken" /> from the collection. </summary><param name="functionToken"> 
              The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> to be removed. Must not be <see langword="null" /> or empty.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeFunctionStateManager.Abort(Remotion.Web.ExecutionEngine.WxeFunctionState)"><summary> Removes and aborts the <paramref name="functionState" /> from the collection. </summary><param name="functionState"> 
              The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> to be removed. Must not be <see langword="null" />.
            </param></member><member name="T:Remotion.Web.ExecutionEngine.WxeHandler"><summary> 
              The <see cref="T:System.Web.IHttpHandler" /> implementation responsible for handling requests to the 
              <b>Web Execution Engine.</b>
            </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler._currentFunctionState"><summary> The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> representing the <see cref="P:Remotion.Web.ExecutionEngine.WxeHandler.RootFunction" /> and its context. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.ProcessRequest(System.Web.HttpContext)"><summary> Processes the requests associated with the <see cref="T:Remotion.Web.ExecutionEngine.WxeHandler" />. </summary><param name="context"> The <see cref="T:System.Web.HttpContext" /> of the request. Must not be <see langword="null" />. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.CheckTimeoutConfiguration(System.Web.HttpContext)"><summary> Checks whether the timeout settings are valid. </summary><param name="context"> 
      The current <see cref="T:System.Web.HttpContext" />. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.GetType(System.Web.HttpContext)"><summary> Gets the <see cref="T:System.Type" /> from the information provided by the <paramref name="context" />. </summary><param name="context"> 
      The <see cref="T:System.Web.HttpContext" /> of the request. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.GetTypeByPath(System.String)"><summary> Gets the <see cref="T:System.Type" /> for the specified <paramref name="absolutePath" />. </summary><param name="absolutePath"> 
      The absolute path of the <see cref="T:System.Type" /> to get. Must start with a '/'.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.GetTypeByTypeName(System.String)"><summary> Gets the <see cref="T:System.Type" /> for the specified <paramref name="typeName" />. </summary><param name="typeName">
      The name of the <see cref="T:System.Type" /> to get. Must not be <see langword="null" /> or emtpy. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.CreateNewFunctionState(System.Web.HttpContext,System.Type)"><summary> Initializes a new <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />, encapsulated in a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> object. </summary><param name="context">
      The current <see cref="T:System.Web.HttpContext" />. Must not be <see langword="null" />. 
    </param><param name="type">
      The type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to create. Must not be <see langword="null" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.ResumeExistingFunctionState(System.Web.HttpContext,System.String)"><summary> Resumes an existing <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. </summary><param name="context"> 
      The current <see cref="T:System.Web.HttpContext" />. Must not be <see langword="null" />. 
    </param><param name="functionToken"> 
      The unique identifier of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> instance to resume. 
      Must not be <see langword="null" /> or emtpy.  
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.ProcessFunctionState(System.Web.HttpContext,Remotion.Web.ExecutionEngine.WxeFunctionState,System.Boolean)"><summary> Redirects the <see cref="P:System.Web.HttpContext.Response" /> to an optional <see cref="P:Remotion.Web.ExecutionEngine.WxeFunction.ReturnUrl" />. </summary><param name="context"> 
      The current <see cref="T:System.Web.HttpContext" />. Must not be <see langword="null" />. 
    </param><param name="functionState"> 
      The current <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" />. Must not be <see langword="null" />. 
    </param><param name="isNewFunction">
      <see langword="true" /> if the <paramref name="functionState" />'s <see cref="P:Remotion.Web.ExecutionEngine.WxeFunctionState.Function" /> is
      a new function, i.e. the request contained a <see cref="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeFunctionType" /> parameter.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.ExecuteFunctionState(System.Web.HttpContext,Remotion.Web.ExecutionEngine.WxeFunctionState,System.Boolean)"><summary> 
              Sets the current <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" /> and invokes <see cref="M:Remotion.Web.ExecutionEngine.WxeHandler.ExecuteFunction(Remotion.Web.ExecutionEngine.WxeFunction,Remotion.Web.ExecutionEngine.WxeContext,System.Boolean)" /> on the
              <paramref name="functionState" />'s <see cref="P:Remotion.Web.ExecutionEngine.WxeFunctionState.Function" />.
            </summary><param name="context"> 
      The current <see cref="T:System.Web.HttpContext" />. Must not be <see langword="null" />. 
    </param><param name="functionState"> 
      The current <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" />. Must not be <see langword="null" /> or aborted. 
    </param><param name="isNewFunction">
      <see langword="true" /> if the <paramref name="functionState" />'s <see cref="P:Remotion.Web.ExecutionEngine.WxeFunctionState.Function" /> is
      a new function, i.e. the request contained a <see cref="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeFunctionType" /> parameter.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.ExecuteFunction(Remotion.Web.ExecutionEngine.WxeFunction,Remotion.Web.ExecutionEngine.WxeContext,System.Boolean)"><summary>  Invokes <see cref="M:Remotion.Web.ExecutionEngine.WxeFunction.Execute(Remotion.Web.ExecutionEngine.WxeContext)" /> on the <paramref name="function" />. </summary><param name="function"> 
      The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to be executed. Must not be <see langword="null" /> or aborted. 
    </param><param name="context"> 
      The <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" /> to be passed to the function. Must not be <see langword="null" />. 
    </param><param name="isNew">
      <para>
        <see langword="true" /> if the <paramref name="function" /> is a new function, 
        i.e. the request contained a <see cref="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeFunctionType" /> parameter.
      </para><para>
        This parameter is not evaluated by the default implementation.
      </para>
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.CleanUpFunctionState(Remotion.Web.ExecutionEngine.WxeFunctionState)"><summary> Aborts the <paramref name="functionState" /> after its function has executed. </summary><param name="functionState"> 
      The current <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" />. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeHandler.ProcessReturnUrl(System.Web.HttpContext,System.String)"><summary> Redirects the <see cref="P:System.Web.HttpContext.Response" /> to an optional <see cref="P:Remotion.Web.ExecutionEngine.WxeFunction.ReturnUrl" />. </summary><param name="context"> 
      The current <see cref="T:System.Web.HttpContext" />. Must not be <see langword="null" />. 
    </param><param name="returnUrl"> 
      The return URL. Must not be <see langword="null" /> or empty. 
    </param></member><member name="P:Remotion.Web.ExecutionEngine.WxeHandler.IsSessionManagementEnabled"><summary> Gets a flag indication whether session management is enabled for the application. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeHandler.IsSessionRefreshEnabled"><summary> Gets a flag indication whether session refreshing is enabled for the application. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeHandler.RefreshInterval"><summary> Gets session refresh interval for the application. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeHandler.RootFunction"><summary> The root function executed by the <b>WxeHanlder</b>. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeHandler.Parameters"><summary> Contains a list of parameters supported by the <see cref="T:Remotion.Web.ExecutionEngine.WxeHandler" />. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeFunctionType"><summary> Denotes the type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to initialize. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeFunctionToken"><summary> Denotes the <b>ID</b> of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to be resumed. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.ReturnUrl"><summary> Denotes the <b>URL</b> to return to after the function has completed. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeAction"><summary> Denotes a special action to be executed. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeReturnToSelf"><summary> Denotes whether to the function should restart after it has completed. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeHandler.Actions"><summary> Denotes the arguments supported for the <see cref="F:Remotion.Web.ExecutionEngine.WxeHandler.Parameters.WxeAction" /> parameter. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Actions.Refresh"><summary> Denotes a session refresh. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Actions.Abort"><summary> Denotes a session abort. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeHandler.Actions.Cancel"><summary> Denotes a session abort. (Obsolete) </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeLauncher"><summary> Redirects the request to the <b>WxeHandler.ashx</b> HTTP handler. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeLauncher.GetQueryString(System.Collections.Specialized.NameValueCollection)"><summary> Gets the query string to be passed to the <see cref="P:Remotion.Web.ExecutionEngine.WxeLauncher.WxeHandler" />. </summary><param name="queryString"> The original query string. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeLauncher.ProcessRequest(System.Web.HttpContext)"><summary> 
              Redirects the request to the <see cref="P:Remotion.Web.ExecutionEngine.WxeLauncher.WxeHandler" />, passing the query string generated by 
              <see cref="M:Remotion.Web.ExecutionEngine.WxeLauncher.GetQueryString(System.Collections.Specialized.NameValueCollection)" />.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxeLauncher.WxeHandler"><summary> Gets the name of the wxe handler. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeMethod"><summary> This delegate represents a parameterless method called. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeMethodWithContext"><summary> This delegate represents a method accepting a <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" /> as a parameter. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeMethodStep"><summary> Performs a step implemented by an instance method of a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeMethodStep._target"><summary> The <see cref="T:Remotion.Web.ExecutionEngine.WxeStepList" /> containing the <b>Method</b> executed by this <b>WxeMethodStep</b>. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeMethodStep._methodName"><summary> The name of the method executed by this <b>WxeMethodStep</b>. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeMethodStep._hasContext"><summary> <see langword="true" /> if the method has a parameter of type <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" />. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeMethodStep._method"><summary> The cached <see cref="T:Remotion.Web.ExecutionEngine.WxeMethod" /> delegate used during execution of this <b>WxeMethodStep</b>. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeMethodStep._methodWithContext"><summary> The cached <see cref="T:Remotion.Web.ExecutionEngine.WxeMethodWithContext" /> delegate used during execution of this <b>WxeMethodStep</b>. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeMethodStep.#ctor(Remotion.Web.ExecutionEngine.WxeStepList,System.Reflection.MethodInfo)"><summary> Initalizes a new instance of the <b>WxeMethodStep</b> type. </summary><param name="target">
      The <see cref="T:Remotion.Web.ExecutionEngine.WxeStepList" /> containing the <b>Method</b> executed by this <b>WxeMethodStep</b>. 
      Must not be <see langword="null" />.
    </param><param name="method"> 
      The <see cref="T:System.Reflection.MethodInfo" /> of the <b>Method</b> executed by this <b>MethodStep</b>. 
      Must not be <see langword="null" />. The specified method must be an instance method of the 
      <paramref name="target" />'s type. Its signature must match either the <see cref="T:Remotion.Web.ExecutionEngine.WxeMethod" /> or 
      <see cref="T:Remotion.Web.ExecutionEngine.WxeMethodWithContext" /> delegate.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeMethodStep.Execute(Remotion.Web.ExecutionEngine.WxeContext)"><summary> Executes the method provided during the initizalion of this <see cref="T:Remotion.Web.ExecutionEngine.WxeMethodStep" />. </summary><param name="context"> The <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" /> containing the information about the execution. </param></member><member name="T:Remotion.Web.ExecutionEngine.WxeOutParameterNotSupportedException"><summary>
            This exception occurs when a WxeFunction constructor with one or more <c>out</c> parameters is called.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxePage"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="T:Remotion.Web.UI.SmartPage"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="T:Remotion.Web.UI.ISmartNavigablePage"><summary>
              This interface declares methods and properties used to control and enhance the client side user experience
              for navigating the page and to simplify application development towards this goal.
            </summary></member><member name="M:Remotion.Web.UI.ISmartNavigablePage.DiscardSmartNavigationData"><summary> Clears scrolling and focus information on the page. </summary></member><member name="M:Remotion.Web.UI.ISmartNavigablePage.SetFocus(Remotion.Web.UI.Controls.IFocusableControl)"><summary> Sets the focus to the passed control. </summary><param name="control"> 
              The <see cref="T:Remotion.Web.UI.Controls.IFocusableControl" /> to assign the focus to.
            </param></member><member name="M:Remotion.Web.UI.ISmartNavigablePage.SetFocus(System.String)"><summary> Sets the focus to the passed control ID. </summary><param name="id">
              The client side ID of the control to assign the focus to.  Must no be <see langword="null" /> or empty. 
            </param></member><member name="M:Remotion.Web.UI.ISmartNavigablePage.RegisterNavigationControl(Remotion.Web.UI.Controls.INavigationControl)"><summary> Registers a <see cref="T:Remotion.Web.UI.Controls.INavigationControl" /> with the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" />. </summary><param name="control"> The <see cref="T:Remotion.Web.UI.Controls.INavigationControl" /> to register. </param></member><member name="M:Remotion.Web.UI.ISmartNavigablePage.AppendNavigationUrlParameters(System.String)"><summary> 
              Appends the URL parameters returned by <see cref="M:Remotion.Web.UI.ISmartNavigablePage.GetNavigationUrlParameters" /> to the <paramref name="url" />.
            </summary><param name="url"> A URL or a query string. </param></member><member name="M:Remotion.Web.UI.ISmartNavigablePage.GetNavigationUrlParameters"><summary> 
              Evaluates the <see cref="M:Remotion.Web.UI.Controls.INavigationControl.GetNavigationUrlParameters" /> methods of all controls registered
              using <see cref="M:Remotion.Web.UI.ISmartNavigablePage.RegisterNavigationControl(Remotion.Web.UI.Controls.INavigationControl)" />.
            </summary></member><member name="P:Remotion.Web.UI.ISmartNavigablePage.IsSmartScrollingEnabled"><summary> Gets or sets the flag that determines whether smart scrolling is enabled on this page.  </summary></member><member name="P:Remotion.Web.UI.ISmartNavigablePage.IsSmartFocusingEnabled"><summary> Gets or sets the flag that determines whether smart naviagtion is enabled on this page.  </summary></member><member name="M:Remotion.Web.UI.SmartPage.RegisterClientSidePageEventHandler(Remotion.Web.UI.SmartPageEvents,System.String,System.String)"><summary> 
              Registers Java Script functions to be executed when the respective <paramref name="pageEvent" /> is raised.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.RegisterControlForDirtyStateTracking(Remotion.Web.UI.Controls.IEditableControl)"><summary>
              Registers a control implementing <see cref="T:Remotion.Web.UI.Controls.IEditableControl" /> for tracking of it's server- and client-side
              dirty state.
            </summary><param name="control"> A control implementing <see cref="T:Remotion.Web.UI.Controls.IEditableControl" /> that will be tracked.  </param></member><member name="M:Remotion.Web.UI.SmartPage.RegisterControlForClientSideDirtyStateTracking(System.String)"><summary>
              Resiters a <see cref="P:System.Web.UI.Control.ClientID" /> for the tracking of the controls client-side dirty state.
            </summary><param name="clientID"> The ID of an HTML input/textarea/select element. </param></member><member name="M:Remotion.Web.UI.SmartPage.DiscardSmartNavigationData"><summary> Clears scrolling and focus information on the page. </summary></member><member name="M:Remotion.Web.UI.SmartPage.SetFocus(Remotion.Web.UI.Controls.IFocusableControl)"><summary> Sets the focus to the passed control. </summary><param name="control"> 
              The <see cref="T:Remotion.Web.UI.Controls.IFocusableControl" /> to assign the focus to. Must no be <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.SmartPage.SetFocus(System.String)"><summary> Sets the focus to the passed control ID. </summary><param name="id"> 
              The client side ID of the control to assign the focus to. Must no be <see langword="null" /> or empty. 
            </param></member><member name="M:Remotion.Web.UI.SmartPage.RegisterNavigationControl(Remotion.Web.UI.Controls.INavigationControl)"><summary> Registers a <see cref="T:Remotion.Web.UI.Controls.INavigationControl" /> with the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" />. </summary><param name="control"> The <see cref="T:Remotion.Web.UI.Controls.INavigationControl" /> to register. Must not be <see langword="null" />. </param></member><member name="M:Remotion.Web.UI.SmartPage.AppendNavigationUrlParameters(System.String)"><summary> 
              Appends the URL parameters returned by <see cref="M:Remotion.Web.UI.SmartPage.GetNavigationUrlParameters" /> to the <paramref name="url" />.
            </summary><param name="url"> A URL or a query string. Must not be <see langword="null" />. </param></member><member name="M:Remotion.Web.UI.SmartPage.GetNavigationUrlParameters"><summary> 
              Evaluates the <see cref="M:Remotion.Web.UI.Controls.INavigationControl.GetNavigationUrlParameters" /> methods of all controls registered
              using <see cref="M:Remotion.Web.UI.SmartPage.RegisterNavigationControl(Remotion.Web.UI.Controls.INavigationControl)" />.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#ISmartPage#GetPostBackCollection"><summary> Gets the post back data for the page. </summary></member><member name="M:Remotion.Web.UI.SmartPage.PrepareValidation"><summary>
              Call this method before validating when using <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> 
              and <see cref="M:Remotion.ObjectBinding.Web.UI.Controls.IBusinessObjectDataSourceControl.Validate()" />.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.EnsurePostLoadInvoked"><summary> Ensures that PostLoad is called on all controls that support <see cref="T:Remotion.Web.UI.Controls.ISupportsPostLoadControl" />. </summary></member><member name="M:Remotion.Web.UI.SmartPage.EnsureValidatableControlsInitialized"><summary> Ensures that all validators are registered with their <see cref="T:Remotion.Web.UI.Controls.IValidatableControl" /> controls. </summary></member><member name="M:Remotion.Web.UI.SmartPage.EvaluateDirtyState"><summary> 
              Evaluates whether any control regsitered using <see cref="M:Remotion.Web.UI.SmartPage.RegisterControlForDirtyStateTracking(Remotion.Web.UI.Controls.IEditableControl)" />
              has values that must be persisted before the user leaves the page. 
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#DesignerInitialize"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#GetPostBackClientEvent(System.Web.UI.Control,System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#GetPostBackClientHyperlink(System.Web.UI.Control,System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#GetPostBackEventReference(System.Web.UI.Control)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#GetPostBackEventReference(System.Web.UI.Control,System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#IsClientScriptBlockRegistered(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#IsStartupScriptRegistered(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#MapPath(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#RegisterArrayDeclaration(System.String,System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#RegisterOnSubmitStatement(System.String,System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#RegisterRequiresPostBack(System.Web.UI.Control)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#RegisterViewStateHandler"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Application"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Cache"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_ClientTarget"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_ClientTarget(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_ErrorPage"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_ErrorPage(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_IsPostBack"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_IsValid"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Request"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Response"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Server"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_SmartNavigation"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_SmartNavigation(System.Boolean)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Trace"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_User"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_Validators"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#get_ViewStateUserKey"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#IPage#set_ViewStateUserKey(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#add_AbortTransaction(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#remove_AbortTransaction(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#add_CommitTransaction(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#remove_CommitTransaction(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#add_Error(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#remove_Error(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#LoadControl(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#LoadTemplate(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#ITemplateControl#ParseControl(System.String)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="M:Remotion.Web.UI.SmartPage.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary>
              <b>SmartPage</b> is the default implementation of the <see cref="T:Remotion.Web.UI.ISmartPage" /> interface. Use this type
              a base class for pages that should supress multiple postbacks, require smart navigation, or have a dirty-state.
            </summary></member><member name="P:Remotion.Web.UI.SmartPage.AbortMessage"><summary> Gets or sets the message displayed when the user attempts to leave the page. </summary></member><member name="P:Remotion.Web.UI.SmartPage.StatusIsSubmittingMessage"><summary> 
              Gets or sets the message displayed when the user attempts to submit while the page is already submitting. 
            </summary></member><member name="P:Remotion.Web.UI.SmartPage.Remotion#Web#UI#ISmartPage#HtmlForm"><summary> Gets or sets the <b>HtmlForm</b> of this page. </summary></member><member name="P:Remotion.Web.UI.SmartPage.HtmlForm"><summary> Gets or sets the <b>HtmlForm</b> of this page. </summary></member><member name="P:Remotion.Web.UI.SmartPage.IsDirty"><summary> Gets or sets a flag describing whether the page is dirty. </summary></member><member name="P:Remotion.Web.UI.SmartPage.IsDirtyStateTrackingEnabled"><summary> Gets a flag whether to only show the abort confirmation if the page is dirty. </summary></member><member name="P:Remotion.Web.UI.SmartPage.Remotion#Web#UI#ISmartPage#IsDirtyStateTrackingEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.UI.SmartPage.IsDirtyStateTrackingEnabled" />. </summary></member><member name="P:Remotion.Web.UI.SmartPage.ShowAbortConfirmation"><summary> 
              Gets or sets a value that determines whether to display a confirmation dialog before leaving the page. 
            </summary></member><member name="P:Remotion.Web.UI.SmartPage.IsAbortConfirmationEnabled"><summary> Gets the evaluated value for the <see cref="P:Remotion.Web.UI.SmartPage.ShowAbortConfirmation" /> property. </summary></member><member name="P:Remotion.Web.UI.SmartPage.Remotion#Web#UI#ISmartPage#IsAbortConfirmationEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.UI.SmartPage.IsAbortConfirmationEnabled" />. </summary></member><member name="P:Remotion.Web.UI.SmartPage.EnableStatusIsSubmittingMessage"><summary> 
              Gets or sets the flag that determines whether to display a message when the user tries to start a second
              request.
            </summary></member><member name="P:Remotion.Web.UI.SmartPage.IsStatusIsSubmittingMessageEnabled"><summary> 
              Gets a flag whether a status message  will be displayed when the user tries to postback while a request is 
              being processed.
            </summary></member><member name="P:Remotion.Web.UI.SmartPage.Remotion#Web#UI#ISmartPage#IsStatusIsSubmittingMessageEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.UI.SmartPage.IsStatusIsSubmittingMessageEnabled" />. </summary></member><member name="P:Remotion.Web.UI.SmartPage.EnableSmartScrolling"><summary> Gets or sets the flag that determines whether to use smart scrolling. </summary></member><member name="P:Remotion.Web.UI.SmartPage.IsSmartScrollingEnabled"><summary> Gets the evaluated value for the <see cref="P:Remotion.Web.UI.SmartPage.EnableSmartScrolling" /> property. </summary></member><member name="P:Remotion.Web.UI.SmartPage.Remotion#Web#UI#ISmartNavigablePage#IsSmartScrollingEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.UI.SmartPage.IsSmartScrollingEnabled" />. </summary></member><member name="P:Remotion.Web.UI.SmartPage.EnableSmartFocusing"><summary> Gets or sets the flag that determines whether to use smart navigation. </summary></member><member name="P:Remotion.Web.UI.SmartPage.IsSmartFocusingEnabled"><summary> Gets the evaluated value for the <see cref="P:Remotion.Web.UI.SmartPage.EnableSmartFocusing" /> property. </summary></member><member name="P:Remotion.Web.UI.SmartPage.Remotion#Web#UI#ISmartNavigablePage#IsSmartFocusingEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.UI.SmartPage.IsSmartFocusingEnabled" />. </summary></member><member name="T:Remotion.Web.UI.IWindowStateManager"><summary>
            Defines methods to get and set state between pages.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.ExecuteNextStep"><summary> End this page step and continue with the WXE function. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.ExecuteFunction(Remotion.Web.ExecutionEngine.WxeFunction,Remotion.Web.ExecutionEngine.IWxeCallArguments)"><summary>Executes the <paramref name="function" /> using the specified <paramref name="callArguments" />.</summary><param name="function">The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to be executed. Must not be <see langword="null" />.</param><param name="callArguments">The <see cref="T:Remotion.Web.ExecutionEngine.IWxeCallArguments" /> used to control the function invocation. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.GetPermanentUrlParameters"><summary> Gets the permanent URL parameters the current page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.GetPermanentUrl"><summary> Gets the permanent URL for the current page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.GetPermanentUrl(System.Collections.Specialized.NameValueCollection)"><summary> Gets the permanent URL for the current page using the specified <paramref name="queryString" />. </summary><param name="queryString">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the query string arguments. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.GetPermanentUrl(System.Type,System.Collections.Specialized.NameValueCollection)"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of the specified <paramref name="functionType" /> 
              and using the <paramref name="queryString" />.
            </summary><param name="functionType"> 
      The type of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> for which to create the permanent URL. 
      Must be derived from <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. 
    </param><param name="queryString">
      The <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the query string arguments. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.DeterminePostBackMode"><summary> Overrides <see cref="M:System.Web.UI.Page.DeterminePostBackMode" />. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.GetPostBackCollection"><summary> Gets the post-back data for the page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#ISmartPage#GetPostBackCollection"><summary> Gets the value returned by <see cref="M:Remotion.Web.ExecutionEngine.WxePage.GetPostBackCollection" />. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.SavePageStateToPersistenceMedium(System.Object)"></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.LoadPageStateFromPersistenceMedium"></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.OnPreRenderComplete(System.EventArgs)"></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Dispose"><summary> Disposes the page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Dispose(System.Boolean)"><summary> Disposes the page. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Application"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Cache"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_ClientTarget"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_ClientTarget(System.String)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_ErrorPage"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_ErrorPage(System.String)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_IsPostBack"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_IsValid"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Request"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Response"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Server"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_SmartNavigation"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_SmartNavigation(System.Boolean)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Trace"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_User"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_Validators"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#get_ViewStateUserKey"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#IPage#set_ViewStateUserKey(System.String)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#ITemplateControl#add_AbortTransaction(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#ITemplateControl#remove_AbortTransaction(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#ITemplateControl#add_CommitTransaction(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#ITemplateControl#remove_CommitTransaction(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#ITemplateControl#add_Error(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#ITemplateControl#remove_Error(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary>
              <b>WxePage</b> is the default implementation of the <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> interface. Use this type
              a base class for pages that can be called by <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.IsReturningPostBack"><summary> Gets a flag describing whether this post-back has been triggered by returning from a WXE function. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.ReturningFunction"><summary> Gets the WXE function that has been executed in the current page. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.StatusIsAbortingMessage"><summary> 
              Gets or sets the message displayed when the user attempts to submit while the page is already aborting. 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.StatusIsCachedMessage"><summary> 
              Gets or sets the message displayed when the user returnes to a cached page that has already been submitted 
              or aborted. 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#ExecutionEngine#IWxePage#WxeHandler"><summary> Gets or sets the <see cref="T:Remotion.Web.ExecutionEngine.WxeHandler" /> of the current request. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.CurrentPageStep"><summary> Gets the <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" /> that called this <see cref="T:Remotion.Web.ExecutionEngine.WxePage" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.CurrentFunction"><summary> Gets the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> of which the <see cref="P:Remotion.Web.ExecutionEngine.WxePage.CurrentPageStep" /> is a part. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.Variables"><summary> Gets the <see cref="P:Remotion.Web.ExecutionEngine.WxeStep.Variables" /> collection of the <see cref="P:Remotion.Web.ExecutionEngine.WxePage.CurrentPageStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.WxeForm"><summary> Gets the <see cref="P:Remotion.Web.ExecutionEngine.WxePage.WxeForm" /> of this page. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.EnableAbort"><summary> Gets or sets the flag that determines whether to abort the session upon closing the window. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.IsAbortEnabled"><summary> Gets the evaluated value for the <see cref="P:Remotion.Web.ExecutionEngine.WxePage.EnableAbort" /> property. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#ExecutionEngine#IWxePage#IsAbortEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.ExecutionEngine.WxePage.IsAbortEnabled" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.EnableOutOfSequencePostBacks"><summary>
              Gets a flag that determines whether to allow out-of-sequence postbacks (i.e. post-backs from an already 
              submitted page because of the cache). 
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.AreOutOfSequencePostBacksEnabled"><summary> Gets the evaluated value for the <see cref="P:Remotion.Web.ExecutionEngine.WxePage.EnableOutOfSequencePostBacks" /> property. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#ExecutionEngine#IWxePage#AreOutOfSequencePostBacksEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.ExecutionEngine.WxePage.AreOutOfSequencePostBacksEnabled" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.IsOutOfSequencePostBack"><summary>
              Gets a flag that describes whether the current postback cycle was caused by resubmitting a page from the client's cache.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.IsAbortConfirmationEnabled"><summary> Gets the evaluated value for the <see cref="T:Remotion.Web.UI.ShowAbortConfirmation" /> property. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.IsDirtyStateTrackingEnabled"><summary> 
              Gets the value of the base class's <see cref="P:Remotion.Web.UI.SmartPage.IsDirtyStateTrackingEnabled" /> property ANDed with <see cref="P:Remotion.Web.ExecutionEngine.WxePage.IsAbortEnabled" />.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.EnableStatusMessages"><summary> 
              Gets or sets the flag that determines whether to display a message when the user tries to start a second
              request or returns to a page that has already been submittet (i.e. a cached page).
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.AreStatusMessagesEnabled"><summary> 
              Gets a flag whether the status messages (i.e. is submitting, is aborting) will be displayed when the user
              tries to e.g. postback while a request is being processed.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.Remotion#Web#ExecutionEngine#IWxePage#AreStatusMessagesEnabled"><summary> Gets the value returned by <see cref="P:Remotion.Web.ExecutionEngine.WxePage.AreStatusMessagesEnabled" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.EnableStatusIsSubmittingMessage"></member><member name="P:Remotion.Web.ExecutionEngine.WxePage.IsStatusIsSubmittingMessageEnabled"><summary> Overridden to return the value of <see cref="P:Remotion.Web.ExecutionEngine.WxePage.AreStatusMessagesEnabled" />. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeTemplateControlInfo._cachedResourceManager"><summary> Caches the <see cref="T:Remotion.Globalization.ResourceManagerSet" /> for this control. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeTemplateControlInfo.GetResourceManager(System.Type)"><summary> Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this control info. </summary><param name="localResourcesType"> 
              A type with the <see cref="T:Remotion.Globalization.MultiLingualResourcesAttribute" /> applied to it.
              Typically an <b>enum</b> or the derived class itself.
            </param></member><member name="F:Remotion.Web.ExecutionEngine.WxePageInfo`1._returningFunctionState"><summary> The <see cref="T:Remotion.Web.ExecutionEngine.WxeFunctionState" /> designated by <b>WxeForm.ReturningToken</b>. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.#ctor(`0)"><summary> Initializes a new instance of the <b>WxePageInfo</b> type. </summary><param name="page"> 
              The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> containing this <b>WxePageInfo</b> object. 
              The page must be derived from <see cref="T:System.Web.UI.Page">System.Web.UI.Page</see>.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.FindControl(System.String,System.Boolean@)"><summary>
            Finds the control if it is the page's form. Otherwise, call the find method of the page's base class.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.HandleLoadPostData(System.Collections.Specialized.NameValueCollection)"></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.ExecuteNextStep"><summary> Implements <see cref="M:Remotion.Web.ExecutionEngine.IWxePage.ExecuteNextStep">IWxePage.ExecuteNextStep</see>. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.GetPermanentUrlParameters"><summary>
              Implements <see cref="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrlParameters">IWxePage.GetPermanentUrlParameters()</see>.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.GetPermanentUrl"><summary>
              Implements <see cref="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrl">IWxePage.GetPermanentUrl()</see>.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.GetPermanentUrl(System.Collections.Specialized.NameValueCollection)"><summary>
              Implements <see cref="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrl(System.Collections.Specialized.NameValueCollection)">IWxePage.GetPermanentUrl(NameValueCollection)</see>.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.GetPermanentUrl(System.Type,System.Collections.Specialized.NameValueCollection)"><summary>
              Implements <see cref="M:Remotion.Web.ExecutionEngine.IWxePage.GetPermanentUrl(System.Type,System.Collections.Specialized.NameValueCollection)">IWxePage.GetPermanentUrl(Type,NameValueCollection)</see>.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.SavePageStateToPersistenceMedium(System.Object)"><summary> Saves the viewstate into the executing <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. </summary><param name="state"> An <b>ASP.NET</b> viewstate object. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.LoadPageStateFromPersistenceMedium"><summary> Returns the viewstate previously saved into the executing <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.Dispose"><summary> 
              If <see cref="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.ExecuteNextStep" /> has been called prior to disposing the page, <b>Dispose</b> will
              break execution of this page life cycle and allow the Execution Engine to continue with the next step.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.GetResourceManager"><summary> Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this WxePageInfo. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.GetData(System.String)"><summary>
              Implements <see cref="M:Remotion.Web.UI.IWindowStateManager.GetData(System.String)">Remotion.Web.UI.IWindowStateManager.GetData</see>.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageInfo`1.SetData(System.String,System.Object)"><summary>
              Implements <see cref="M:Remotion.Web.UI.IWindowStateManager.SetData(System.String,System.Object)">Remotion.Web.UI.IWindowStateManager.SetData</see>.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageInfo`1.StatusIsCachedMessage"><summary> Implements <see cref="P:Remotion.Web.ExecutionEngine.IWxePage.StatusIsCachedMessage">IWxePage.StatusIsCachedMessage</see>. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageInfo`1.StatusIsAbortingMessage"><summary> Implements <see cref="P:Remotion.Web.ExecutionEngine.IWxePage.StatusIsAbortingMessage">IWxePage.StatusIsAbortingMessage</see>. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageInfo`1.IsOutOfSequencePostBack"><summary> Implements <see cref="P:Remotion.Web.ExecutionEngine.IWxePage.IsOutOfSequencePostBack">IWxePage.IsOutOfSequencePostBack</see>. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageInfo`1.IsReturningPostBack"><summary> Implements <see cref="P:Remotion.Web.ExecutionEngine.IWxePage.IsReturningPostBack">IWxePage.IsReturningPostBack</see>. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageInfo`1.ReturningFunction"><summary> Implements <see cref="P:Remotion.Web.ExecutionEngine.IWxePage.ReturningFunction">IWxePage.ReturningFunction</see>. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxePageInfo`1.ResourceIdentifier"><summary> A list of resources. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxePageInfo`1.ResourceIdentifier.StatusIsAbortingMessage"><summary> Displayed when the user attempts to submit while the page is already aborting. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxePageInfo`1.ResourceIdentifier.StatusIsCachedMessage"><summary> Displayed when the user returnes to a cached page that has already been submitted or aborted. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxePageStep"><summary> This step interrupts the server side execution to display a page to the user. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageStep.#ctor(System.String)"><summary> Initializes a new instance of the <b>WxePageStep</b> type. </summary><param name="page">
      The URL of the page to be displayed, relative to the application root. Must not be <see langword="null" />
      or emtpy.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePageStep.#ctor(Remotion.Web.ExecutionEngine.WxeVariableReference)"><summary> Initializes a new instance of the <b>WxePageStep</b> type. </summary><param name="pageref"> 
      A <see cref="T:Remotion.Web.ExecutionEngine.WxeVariableReference" /> pointing to the URL of the page to be displayed. The URL is relative 
      to the application root. Must not be <see langword="null" />.
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePageStep.Execute(Remotion.Web.ExecutionEngine.WxeContext)"><summary> 
              Displays the <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />'s page or the sub-function that has been invoked by the 
              <see cref="M:Remotion.Web.ExecutionEngine.WxePageStep.ExecuteFunction(Remotion.Web.ExecutionEngine.Infrastructure.WxePageStepExecutionStates.PreProcessingSubFunctionStateParameters,Remotion.Web.ExecutionEngine.WxeRepostOptions)" /> method.
            </summary><param name="context"> 
      The <see cref="T:Remotion.Web.ExecutionEngine.WxeContext" /> containing the information about the execution. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePageStep.SavePageStateToPersistenceMedium(System.Object)"><summary> Saves the passed <paramref name="state" /> object into the <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. </summary><param name="state"> An <b>ASP.NET</b> viewstate object. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxePageStep.LoadPageStateFromPersistenceMedium"><summary> 
              Returns the viewstate previsously saved through the <see cref="M:Remotion.Web.ExecutionEngine.WxePageStep.SavePageStateToPersistenceMedium(System.Object)" /> method. 
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxePageStep.AbortRecursive"><summary> 
              Aborts the <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. Aborting will cascade to any <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> executed
              in the scope of this step if they are part of the same hierarchy, i.e. share a common <see cref="P:Remotion.Web.ExecutionEngine.WxeStep.RootFunction" />.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageStep.Page"><summary> The URL of the page to be displayed by this <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageStep.ExecutingStep"><summary> Gets the currently executing <see cref="T:Remotion.Web.ExecutionEngine.WxeStep" />. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageStep.PageToken"><summary> Gets the token for this page step. </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageStep.IsPostBack"><summary>
              Gets a flag that corresponds to the <see cref="P:System.Web.UI.Page.IsPostBack">Page.IsPostBack</see> flag, but is 
              available from the beginning of the execution cycle, i.e. even before <b>OnInit</b>.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageStep.IsOutOfSequencePostBack"><summary>
              Gets a flag that describes whether the current postback cycle was caused by resubmitting a page from the 
              client's cache.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageStep.IsReturningPostBack"><summary>
              During the execution of a page, specifies whether the current postback cycle was caused by returning from a 
              <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            </summary></member><member name="P:Remotion.Web.ExecutionEngine.WxePageStep.PostBackCollection"><summary> Gets or sets the postback data for the page if it has executed a sub-function. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterAttribute.#ctor(System.Int32,System.Boolean,Remotion.Web.ExecutionEngine.WxeParameterDirection)"><summary>
            Declares a property as WXE function parameter.
            </summary><param name="index"> Index of the parameter within the function's parameter list. </param><param name="required"> Speficies whether this parameter must be specified (an not 
                be <see langword="null" />). Default is <see langword="true" /> for value types
                and <see langword="false" /> for reference types. </param><param name="direction"> Declares the parameter as input or output parameter, or both. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterConverter.ConvertToString(System.Object,Remotion.Collections.NameObjectCollection)"><summary> Converts a parameter's value to its string representation. </summary><param name="value"> The value to be converted. Must be of assignable to the <see cref="T:System.Type" />. </param><param name="callerVariables"> 
              The optional list of caller variables. Used to dereference a <see cref="T:Remotion.Web.ExecutionEngine.WxeVariableReference" />.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterConverter.ConvertVarRefToString(Remotion.Web.ExecutionEngine.WxeVariableReference,Remotion.Collections.NameObjectCollection)"><summary> Converts a <see cref="T:Remotion.Web.ExecutionEngine.WxeVariableReference" />'s value to its string representation. </summary><param name="varRef"> 
              The <see cref="T:Remotion.Web.ExecutionEngine.WxeVariableReference" /> to be converted. The referenced value must be of assignable to the 
              <see cref="T:Remotion.Web.ExecutionEngine.WxeParameterDeclaration" />'s <see cref="T:System.Type" />. Must not be <see langword="null" />.
            </param><param name="callerVariables">
              The optional list of caller variables. Used to dereference a <see cref="T:Remotion.Web.ExecutionEngine.WxeVariableReference" />.
            </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterConverter.ConvertObjectToString(System.Object)"><summary> Converts a parameter's value to its string representation. </summary><param name="value"> The value to be converted. Must be of assignable to the <see cref="T:System.Type" />. </param></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterConverter.TryConvertObjectToString(System.Object)"><summary> Tries to convert a parameter's value to its string representation. </summary><param name="value"> The value to be converted. </param></member><member name="T:Remotion.Web.ExecutionEngine.WxeParameterDirection"><summary> Specifies in which direction a parameter is passed. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeParameterDirection.In"><summary> The parameter is passed from the caller to the callee. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeParameterDirection.Out"><summary> The parameter is returned from the callee to the caller. </summary></member><member name="F:Remotion.Web.ExecutionEngine.WxeParameterDirection.InOut"><summary> The parameter is passed from the caller to the callee and returned back to the caller. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeParameterDeclaration"><summary> Declares a WXE parameter. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterDeclaration.CopyToCallee(System.String,Remotion.Collections.NameObjectCollection,Remotion.Collections.NameObjectCollection)"><summary> Copy a single caller variable to a callee parameter. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterDeclaration.CopyToCallee(System.Object,Remotion.Collections.NameObjectCollection)"><summary> Copy a value to a callee parameter. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterDeclaration.CopyToCaller(System.String,Remotion.Collections.NameObjectCollection,Remotion.Collections.NameObjectCollection)"><summary> Copy a single callee parameter back to a caller variable. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterDeclaration.CopyParameter(System.String,Remotion.Collections.NameObjectCollection,System.String,Remotion.Collections.NameObjectCollection,System.Boolean)"><summary> Copy fromVariables[fromName] to toVariables[toName]. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterDeclaration.SetParameter(System.String,System.Object,Remotion.Collections.NameObjectCollection)"><summary> Set the parameter variables[parameterName] to the specified value. </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeParameterDeclaration.GetValue(Remotion.Collections.NameObjectCollection)"><summary>
            Gets the value of the parameter described by this declaration from a function's variable list.
            </summary><param name="variables">The variable list to get the parameter value from.</param></member><member name="T:Remotion.Web.ExecutionEngine.WxePermanentUrlTooLongException"><summary>
              This exception occurs when a permanent URL would exceed the maximum URL length.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxePermaUrlCallArguments"><summary>
            Use an instance of the <see cref="T:Remotion.Web.ExecutionEngine.WxePermaUrlCallArguments" /> to execute a sub-function within the same window while providing a perma-URL
            in the browser's location bar.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxePermaUrlOptions"><summary>
            Use the <see cref="T:Remotion.Web.ExecutionEngine.WxePermaUrlOptions" /> to specify that the user should be provided with a perma-URL to the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> in the 
            browser's location bar. Use the <see cref="F:Remotion.Web.ExecutionEngine.WxePermaUrlOptions.Null" /> value of the <see cref="T:Remotion.Web.ExecutionEngine.WxePermaUrlOptions" /> if you do not wish to create a perma-URL for
            the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxePostbackOutOfSequenceException"><summary> This exception indicates an attempt to resubmit a page cached in the browser's history. </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeRepostOptions"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.WxeRepostOptions" /> determine if and how the calling page is notified after a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> executed with the 
            <see cref="T:Remotion.Web.ExecutionEngine.IWxeExecutor" />.<see cref="M:Remotion.Web.ExecutionEngine.IWxeExecutor.ExecuteFunction(Remotion.Web.ExecutionEngine.WxeFunction,Remotion.Web.ExecutionEngine.WxePermaUrlOptions)" /> or <see cref="T:Remotion.Web.ExecutionEngine.IWxeExecutor" />.<see cref="M:Remotion.Web.ExecutionEngine.IWxeExecutor.ExecuteFunctionNoRepost(Remotion.Web.ExecutionEngine.WxeFunction,System.Web.UI.Control,Remotion.Web.ExecutionEngine.WxeCallOptionsNoRepost)" /> 
            methods has returned to the caller.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeResourcePageStep"><summary>
              Calls pages that are stored in the resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourcePageStep.#ctor(System.String)"><summary>
              Calls the page using the calling assemby's resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourcePageStep.#ctor(Remotion.Web.ExecutionEngine.WxeVariableReference)"><summary>
              Calls the page using the calling assemby's resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourcePageStep.#ctor(System.Type,System.String)"><summary>
              Calls the page using the resource directory of the assembly's type.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourcePageStep.#ctor(System.Type,Remotion.Web.ExecutionEngine.WxeVariableReference)"><summary>
              Calls the page using the resource directory of the assembly's type.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourcePageStep.#ctor(System.Reflection.Assembly,System.String)"><summary>
              Calls the page using the assemby's resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourcePageStep.#ctor(System.Reflection.Assembly,Remotion.Web.ExecutionEngine.WxeVariableReference)"><summary>
              Calls the page using the assemby's resource directory.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeResourceUserControlStep"><summary>
              Calls user controls that are stored in the resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourceUserControlStep.#ctor(System.String)"><summary>
              Calls the user controls using the calling assemby's resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourceUserControlStep.#ctor(Remotion.Web.ExecutionEngine.WxeVariableReference)"><summary>
              Calls the user controls using the calling assemby's resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourceUserControlStep.#ctor(System.Type,System.String)"><summary>
              Calls the user controls using the resource directory of the assembly's type.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourceUserControlStep.#ctor(System.Type,Remotion.Web.ExecutionEngine.WxeVariableReference)"><summary>
              Calls the user controls using the resource directory of the assembly's type.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourceUserControlStep.#ctor(System.Reflection.Assembly,System.String)"><summary>
              Calls the user controls using the assemby's resource directory.
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeResourceUserControlStep.#ctor(System.Reflection.Assembly,Remotion.Web.ExecutionEngine.WxeVariableReference)"><summary>
              Calls the user controls using the assemby's resource directory.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeReturnOptions"><summary>
            The <see cref="T:Remotion.Web.ExecutionEngine.WxeReturnOptions" /> determine whether a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> executed with the 
            <see cref="T:Remotion.Web.ExecutionEngine.IWxeExecutor" />.<see cref="M:Remotion.Web.ExecutionEngine.IWxeExecutor.ExecuteFunctionExternalByRedirect(Remotion.Web.ExecutionEngine.WxeFunction,Remotion.Web.ExecutionEngine.WxeCallOptionsExternalByRedirect)" /> method will return to its calling 
            <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />. Use the <see cref="F:Remotion.Web.ExecutionEngine.WxeReturnOptions.Null" /> value if you do not wish to return to the caller.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeUnhandledException"><summary>
              Encapsulates an exception when it is re-thrown by a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            </summary></member><member name="T:Remotion.Web.ExecutionEngine.WxeUserCancelException"><summary> 
              Throw this exception to cancel the execution of a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> while executing a 
              <see cref="T:Remotion.Web.ExecutionEngine.WxePageStep" />. 
            </summary></member><member name="M:Remotion.Web.ExecutionEngine.WxeUserControl.ExecuteNextStep"><summary> Implements <see cref="M:Remotion.Web.ExecutionEngine.IWxePage.ExecuteNextStep">IWxePage.ExecuteNextStep</see>. </summary></member><member name="T:Remotion.Web.Infrastructure.HttpContextWrapper"><summary>
            The <see cref="T:Remotion.Web.Infrastructure.HttpContextWrapper" /> type is the default implementation of the <see cref="T:Remotion.Web.Infrastructure.IHttpContext" /> interface.
            </summary></member><member name="T:Remotion.Web.Infrastructure.IHttpContext"><summary>
            The <see cref="T:Remotion.Web.Infrastructure.IHttpContext" /> interface defines a wrapper for the <see cref="T:System.Web.HttpContext" /> type. Use the default implementation of 
            <see cref="T:Remotion.Web.Infrastructure.HttpContextWrapper" /> to create a wrapper object that exposes this interface.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpContext.AddError(System.Exception)"><summary>
            Adds an exception to the exception collection for the current HTTP request.
            </summary><param name="errorInfo">
            The <see cref="T:System.Exception" /> to add to the exception collection.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpContext.ClearError"><summary>
            Clears all errors for the current HTTP request.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpContext.GetSection(System.String)"><summary>
            Gets a specified configuration section for the current application's default configuration. 
            </summary><param name="sectionName">
            The configuration section path (in XPath format) and the configuration element name.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpContext.RewritePath(System.String)"><summary>
            Rewrites the URL using the given path.
            </summary><param name="path">
            The internal rewrite path.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpContext.RewritePath(System.String,System.Boolean)"><summary>
            Rewrites the URL using the given path and a Boolean value that specifies whether the virtual path for server resources is modified.
            </summary><param name="path">
            The internal rewrite path.
            </param><param name="rebaseClientPath">true to reset the virtual path; false to keep the virtual path unchanged.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpContext.RewritePath(System.String,System.String,System.String)"><summary>
            Rewrites the URL using the given path, path information, and a Boolean value that specifies whether the virtual path for server resources is modified.
            </summary><param name="filePath">
            The internal rewrite path.
            </param><param name="pathInfo">
            Additional path information for a resource.
            </param><param name="queryString">
            The request query string.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)"><summary>
            Rewrites the URL using the given virtual path, path information, query string information, and a Boolean value that specifies whether the client file path is set to the rewrite path. 
            </summary><param name="filePath">
            The virtual path to the resource that services the request.
            </param><param name="pathInfo">
            Additional path information to use for the URL redirect.
            </param><param name="queryString">
            The request query string to use for the URL redirect.
            </param><param name="setClientFilePath">true to set the file path used for client resources to the value of the <paramref name="filePath" /> parameter; otherwise false.
            </param></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.WrappedInstance"><summary>
            Gets the concrete instance wrapped by this <see cref="T:Remotion.Web.Infrastructure.IHttpContext" /> wrapper.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.ApplicationInstance"><summary>
            Gets or sets the <see cref="T:System.Web.HttpApplication" /> object for the current HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.Application"><summary>
            Gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.Handler"><summary>
            Gets or sets the <see cref="T:System.Web.IHttpHandler" /> object responsible for processing the HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.PreviousHandler"><summary>
            Gets the <see cref="T:System.Web.IHttpHandler" /> object for the parent handler.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.CurrentHandler"><summary>
            Gets the <see cref="T:System.Web.IHttpHandler" /> object that represents the currently executing handler.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.Request"><summary>
            Gets the <see cref="T:Remotion.Web.Infrastructure.IHttpRequest" /> object for the current HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.Response"><summary>
            Gets the <see cref="T:Remotion.Web.Infrastructure.IHttpResponse" /> object for the current HTTP response.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.Trace"><summary>
            Gets the <see cref="T:System.Web.TraceContext" /> object for the current HTTP response.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.Items"><summary>
            Gets a key/value collection that can be used to organize and share data between an <see cref="T:System.Web.IHttpModule" /> interface and an <see cref="T:System.Web.IHttpHandler" /> interface during an HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.Session"><summary>
            Gets the <see cref="T:System.Web.SessionState.IHttpSessionState" /> object for the current HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.Server"><summary>
            Gets the <see cref="T:Remotion.Web.Infrastructure.IHttpServerUtility" /> object that provides methods used in processing Web requests.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.Error"><summary>
            Gets the first error (if any) accumulated during HTTP request processing.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.AllErrors"><summary>
            Gets an array of errors accumulated while processing an HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.User"><summary>
            Gets or sets security information for the current HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.Profile"><summary>
            Gets the <see cref="T:System.Web.Profile.ProfileBase" /> object for the current user profile.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.SkipAuthorization"><summary>
            Gets or sets a value that specifies whether the <see cref="T:System.Web.Security.UrlAuthorizationModule" /> object should skip the authorization check for the current request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.IsDebuggingEnabled"><summary>
            Gets a value indicating whether the current HTTP request is in debug mode.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.IsCustomErrorEnabled"><summary>
            Gets a value indicating whether custom errors are enabled for the current HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.Timestamp"><summary>
            Gets the initial timestamp of the current HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.Cache"><summary>
            Gets the <see cref="T:System.Web.Caching.Cache" /> object for the current application domain.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.CurrentNotification"><summary>
            Gets a <see cref="T:System.Web.RequestNotification" /> value that indicates the current <see cref="T:System.Web.HttpApplication" /> event that is processing. 
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpContext.IsPostNotification"><summary>
            Gets a value that is the current processing point in the ASP.NET pipeline just after an <see cref="T:System.Web.HttpApplication" /> event has finished processing. 
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpContextWrapper.GetService(System.Type)"><summary>
            Gets the service object of the specified type.
            </summary><param name="serviceType">
            An object that specifies the type of service object to get. 
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpContextWrapper.AddError(System.Exception)"><summary>
            Adds an exception to the exception collection for the current HTTP request.
            </summary><param name="errorInfo">
            The <see cref="T:System.Exception" /> to add to the exception collection.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpContextWrapper.ClearError"><summary>
            Clears all errors for the current HTTP request.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpContextWrapper.GetSection(System.String)"><summary>
            Gets a specified configuration section for the current application's default configuration. 
            </summary><param name="sectionName">
            The configuration section path (in XPath format) and the configuration element name.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpContextWrapper.RewritePath(System.String)"><summary>
            Rewrites the URL using the given path.
            </summary><param name="path">
            The internal rewrite path.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpContextWrapper.RewritePath(System.String,System.Boolean)"><summary>
            Rewrites the URL using the given path and a Boolean value that specifies whether the virtual path for server resources is modified.
            </summary><param name="path">
            The internal rewrite path.
            </param><param name="rebaseClientPath">true to reset the virtual path; false to keep the virtual path unchanged.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpContextWrapper.RewritePath(System.String,System.String,System.String)"><summary>
            Rewrites the URL using the given path, path information, and a Boolean value that specifies whether the virtual path for server resources is modified.
            </summary><param name="filePath">
            The internal rewrite path.
            </param><param name="pathInfo">
            Additional path information for a resource.
            </param><param name="queryString">
            The request query string.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpContextWrapper.RewritePath(System.String,System.String,System.String,System.Boolean)"><summary>
            Rewrites the URL using the given virtual path, path information, query string information, and a Boolean value that specifies whether the client file path is set to the rewrite path. 
            </summary><param name="filePath">
            The virtual path to the resource that services the request.
            </param><param name="pathInfo">
            Additional path information to use for the URL redirect.
            </param><param name="queryString">
            The request query string to use for the URL redirect.
            </param><param name="setClientFilePath">true to set the file path used for client resources to the value of the <paramref name="filePath" /> parameter; otherwise false.
            </param></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.WrappedInstance"><summary>
            Gets the concrete instance wrapped by this <see cref="T:Remotion.Web.Infrastructure.IHttpContext" /> wrapper.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.ApplicationInstance"><summary>
            Gets or sets the <see cref="T:System.Web.HttpApplication" /> object for the current HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.Application"><summary>
            Gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.Handler"><summary>
            Gets or sets the <see cref="T:System.Web.IHttpHandler" /> object responsible for processing the HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.PreviousHandler"><summary>
            Gets the <see cref="T:System.Web.IHttpHandler" /> object for the parent handler.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.CurrentHandler"><summary>
            Gets the <see cref="T:System.Web.IHttpHandler" /> object that represents the currently executing handler.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.Request"><summary>
            Gets the <see cref="T:Remotion.Web.Infrastructure.IHttpRequest" /> object for the current HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.Response"><summary>
            Gets the <see cref="T:Remotion.Web.Infrastructure.IHttpResponse" /> object for the current HTTP response.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.Trace"><summary>
            Gets the <see cref="T:System.Web.TraceContext" /> object for the current HTTP response.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.Items"><summary>
            Gets a key/value collection that can be used to organize and share data between an <see cref="T:System.Web.IHttpModule" /> interface and an <see cref="T:System.Web.IHttpHandler" /> interface during an HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.Session"><summary>
            Gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.Server"><summary>
            Gets the <see cref="T:Remotion.Web.Infrastructure.IHttpServerUtility" /> object that provides methods used in processing Web requests.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.Error"><summary>
            Gets the first error (if any) accumulated during HTTP request processing.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.AllErrors"><summary>
            Gets an array of errors accumulated while processing an HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.User"><summary>
            Gets or sets security information for the current HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.Profile"><summary>
            Gets the <see cref="T:System.Web.Profile.ProfileBase" /> object for the current user profile.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.SkipAuthorization"><summary>
            Gets or sets a value that specifies whether the <see cref="T:System.Web.Security.UrlAuthorizationModule" /> object should skip the authorization check for the current request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.IsDebuggingEnabled"><summary>
            Gets a value indicating whether the current HTTP request is in debug mode.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.IsCustomErrorEnabled"><summary>
            Gets a value indicating whether custom errors are enabled for the current HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.Timestamp"><summary>
            Gets the initial timestamp of the current HTTP request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.Cache"><summary>
            Gets the <see cref="T:System.Web.Caching.Cache" /> object for the current application domain.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.CurrentNotification"><summary>
            Gets a <see cref="T:System.Web.RequestNotification" /> value that indicates the current <see cref="T:System.Web.HttpApplication" /> event that is processing. 
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpContextWrapper.IsPostNotification"><summary>
            Gets a value that is the current processing point in the ASP.NET pipeline just after an <see cref="T:System.Web.HttpApplication" /> event has finished processing. 
            </summary></member><member name="T:Remotion.Web.Infrastructure.HttpRequestWrapper"><summary>
            The <see cref="T:Remotion.Web.Infrastructure.HttpRequestWrapper" /> type is the default implementation of the <see cref="T:Remotion.Web.Infrastructure.IHttpRequest" /> interface.
            </summary></member><member name="T:Remotion.Web.Infrastructure.IHttpRequest"><summary>
            The <see cref="T:Remotion.Web.Infrastructure.IHttpRequest" /> interface defines a wrapper for the <see cref="T:System.Web.HttpRequest" /> type.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpRequest.BinaryRead(System.Int32)"><summary>
            Performs a binary read of a specified number of bytes from the current input stream.
            </summary><param name="count">
            The number of bytes to read. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpRequest.ValidateInput"><summary>
            Causes validation to occur for the collections accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpRequest.MapImageCoordinates(System.String)"><summary>
            Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.
            </summary><param name="imageFieldName">
            The name of the form image map. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpRequest.SaveAs(System.String,System.Boolean)"><summary>
            Saves an HTTP request to disk.
            </summary><param name="filename">
            The physical drive path. 
            </param><param name="includeHeaders">
            A Boolean value specifying whether an HTTP header should be saved to disk. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpRequest.MapPath(System.String)"><summary>
            Maps the specified virtual path to a physical path.
            </summary><param name="virtualPath">
            The virtual path (absolute or relative) for the current request. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpRequest.MapPath(System.String,System.String,System.Boolean)"><summary>
            Maps the specified virtual path to a physical path.
            </summary><param name="virtualPath">
            The virtual path (absolute or relative) for the current request. 
            </param><param name="baseVirtualDir">
            The virtual base directory path used for relative resolution. 
            </param><param name="allowCrossAppMapping">true to indicate that <paramref name="virtualPath" /> may belong to another application; otherwise, false. 
            </param></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.WrappedInstance"><summary>
            Gets the concrete instance wrapped by this <see cref="T:Remotion.Web.Infrastructure.IHttpRequest" /> wrapper.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.IsLocal"><summary>
            Gets a value indicating whether the request is from the local computer.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.HttpMethod"><summary>
            Gets the HTTP data transfer method (such as GET, POST, or HEAD) used by the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.RequestType"><summary>
            Gets or sets the HTTP data transfer method (GET or POST) used by the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.ContentType"><summary>
            Gets or sets the MIME content type of the incoming request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.ContentLength"><summary>
            Specifies the length, in bytes, of content sent by the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.ContentEncoding"><summary>
            Gets or sets the character set of the entity-body.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.AcceptTypes"><summary>
            Gets a string array of client-supported MIME accept types.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.IsAuthenticated"><summary>
            Gets a value indicating whether the request has been authenticated.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.IsSecureConnection"><summary>
            Gets a value indicting whether the HTTP connection uses secure sockets (that is, HTTPS).
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.Path"><summary>
            Gets the virtual path of the current request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.AnonymousID"><summary>
            Gets the anonymous identifier for the user, if present.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.FilePath"><summary>
            Gets the virtual path of the current request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.CurrentExecutionFilePath"><summary>
            Gets the virtual path of the current request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.AppRelativeCurrentExecutionFilePath"><summary>
            Gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in "~/page.aspx").
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.PathInfo"><summary>
            Gets additional path information for a resource with a URL extension.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.PhysicalPath"><summary>
            Gets the physical file system path corresponding to the requested URL.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.ApplicationPath"><summary>
            Gets the ASP.NET application's virtual application root path on the server.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.PhysicalApplicationPath"><summary>
            Gets the physical file system path of the currently executing server application's root directory.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.UserAgent"><summary>
            Gets the raw user agent string of the client browser.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.UserLanguages"><summary>
            Gets a sorted string array of client language preferences.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.Browser"><summary>
            Gets or sets information about the requesting client's browser capabilities.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.UserHostName"><summary>
            Gets the DNS name of the remote client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.UserHostAddress"><summary>
            Gets the IP host address of the remote client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.RawUrl"><summary>
            Gets the raw URL of the current request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.Url"><summary>
            Gets information about the URL of the current request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.UrlReferrer"><summary>
            Gets information about the URL of the client's previous request that linked to the current URL.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.Params"><summary>
            Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.ServerVariables" />, and <see cref="P:System.Web.HttpRequest.Cookies" /> items.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.QueryString"><summary>
            Gets the collection of HTTP query string variables.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.Form"><summary>
            Gets a collection of form variables.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.Headers"><summary>
            Gets a collection of HTTP headers.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.ServerVariables"><summary>
            Gets a collection of Web server variables.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.Cookies"><summary>
            Gets a collection of cookies sent by the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.Files"><summary>
            Gets the collection of files uploaded by the client, in multipart MIME format.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.InputStream"><summary>
            Gets the contents of the incoming HTTP entity body.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.TotalBytes"><summary>
            Gets the number of bytes in the current input stream.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.Filter"><summary>
            Gets or sets the filter to use when reading the current input stream.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.ClientCertificate"><summary>
            Gets the current request's client security certificate.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.LogonUserIdentity"><summary>
            Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpRequest.Item(System.String)"><summary>
            Gets the specified object from the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.QueryString" /> or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.
            </summary><param name="key">
            The name of the collection member to get. 
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpRequestWrapper.BinaryRead(System.Int32)"><summary>
            Performs a binary read of a specified number of bytes from the current input stream.
            </summary><param name="count">
            The number of bytes to read. 
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpRequestWrapper.ValidateInput"><summary>
            Causes validation to occur for the collections accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpRequestWrapper.MapImageCoordinates(System.String)"><summary>
            Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.
            </summary><param name="imageFieldName">
            The name of the form image map. 
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpRequestWrapper.SaveAs(System.String,System.Boolean)"><summary>
            Saves an HTTP request to disk.
            </summary><param name="filename">
            The physical drive path. 
            </param><param name="includeHeaders">
            A Boolean value specifying whether an HTTP header should be saved to disk. 
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpRequestWrapper.MapPath(System.String)"><summary>
            Maps the specified virtual path to a physical path.
            </summary><param name="virtualPath">
            The virtual path (absolute or relative) for the current request. 
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpRequestWrapper.MapPath(System.String,System.String,System.Boolean)"><summary>
            Maps the specified virtual path to a physical path.
            </summary><param name="virtualPath">
            The virtual path (absolute or relative) for the current request. 
            </param><param name="baseVirtualDir">
            The virtual base directory path used for relative resolution. 
            </param><param name="allowCrossAppMapping">true to indicate that <paramref name="virtualPath" /> may belong to another application; otherwise, false. 
            </param></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.WrappedInstance"><summary>
            Gets the concrete instance wrapped by this <see cref="T:Remotion.Web.Infrastructure.IHttpRequest" /> wrapper.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.IsLocal"><summary>
            Gets a value indicating whether the request is from the local computer.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.HttpMethod"><summary>
            Gets the HTTP data transfer method (such as GET, POST, or HEAD) used by the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.RequestType"><summary>
            Gets or sets the HTTP data transfer method (GET or POST) used by the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.ContentType"><summary>
            Gets or sets the MIME content type of the incoming request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.ContentLength"><summary>
            Specifies the length, in bytes, of content sent by the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.ContentEncoding"><summary>
            Gets or sets the character set of the entity-body.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.AcceptTypes"><summary>
            Gets a string array of client-supported MIME accept types.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.IsAuthenticated"><summary>
            Gets a value indicating whether the request has been authenticated.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.IsSecureConnection"><summary>
            Gets a value indicting whether the HTTP connection uses secure sockets (that is, HTTPS).
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.Path"><summary>
            Gets the virtual path of the current request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.AnonymousID"><summary>
            Gets the anonymous identifier for the user, if present.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.FilePath"><summary>
            Gets the virtual path of the current request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.CurrentExecutionFilePath"><summary>
            Gets the virtual path of the current request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.AppRelativeCurrentExecutionFilePath"><summary>
            Gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in "~/page.aspx").
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.PathInfo"><summary>
            Gets additional path information for a resource with a URL extension.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.PhysicalPath"><summary>
            Gets the physical file system path corresponding to the requested URL.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.ApplicationPath"><summary>
            Gets the ASP.NET application's virtual application root path on the server.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.PhysicalApplicationPath"><summary>
            Gets the physical file system path of the currently executing server application's root directory.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.UserAgent"><summary>
            Gets the raw user agent string of the client browser.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.UserLanguages"><summary>
            Gets a sorted string array of client language preferences.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.Browser"><summary>
            Gets or sets information about the requesting client's browser capabilities.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.UserHostName"><summary>
            Gets the DNS name of the remote client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.UserHostAddress"><summary>
            Gets the IP host address of the remote client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.RawUrl"><summary>
            Gets the raw URL of the current request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.Url"><summary>
            Gets information about the URL of the current request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.UrlReferrer"><summary>
            Gets information about the URL of the client's previous request that linked to the current URL.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.Params"><summary>
            Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.ServerVariables" />, and <see cref="P:System.Web.HttpRequest.Cookies" /> items.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.Item(System.String)"><summary>
            Gets the specified object from the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.QueryString" /> or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.
            </summary><param name="key">
            The name of the collection member to get. 
            </param></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.QueryString"><summary>
            Gets the collection of HTTP query string variables.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.Form"><summary>
            Gets a collection of form variables.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.Headers"><summary>
            Gets a collection of HTTP headers.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.ServerVariables"><summary>
            Gets a collection of Web server variables.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.Cookies"><summary>
            Gets a collection of cookies sent by the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.Files"><summary>
            Gets the collection of files uploaded by the client, in multipart MIME format.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.InputStream"><summary>
            Gets the contents of the incoming HTTP entity body.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.TotalBytes"><summary>
            Gets the number of bytes in the current input stream.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.Filter"><summary>
            Gets or sets the filter to use when reading the current input stream.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.ClientCertificate"><summary>
            Gets the current request's client security certificate.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpRequestWrapper.LogonUserIdentity"><summary>
            Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.
            </summary></member><member name="T:Remotion.Web.Infrastructure.HttpResponseWrapper"><summary>
            The <see cref="T:Remotion.Web.Infrastructure.HttpResponseWrapper" /> type is the default implementation of the <see cref="T:Remotion.Web.Infrastructure.IHttpResponse" /> interface.
            </summary></member><member name="T:Remotion.Web.Infrastructure.IHttpResponse"><summary>
            The <see cref="T:Remotion.Web.Infrastructure.IHttpResponse" /> interface defines a wrapper for the <see cref="T:System.Web.HttpResponse" /> type.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.DisableKernelCache"><summary>
            Disables kernel caching for the current response.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.AddFileDependency(System.String)"><summary>
            Adds a single file name to the collection of file names on which the current response is dependent.
            </summary><param name="filename">
            The name of the file to add.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.AddFileDependencies(System.Collections.ArrayList)"><summary>
            Adds a group of file names to the collection of file names on which the current response is dependent.
            </summary><param name="filenames">
            The collection of files to add.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.AddFileDependencies(System.String[])"><summary>
            Adds an array of file names to the collection of file names on which the current response is dependent.
            </summary><param name="filenames">
            An array of files to add.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.AddCacheItemDependency(System.String)"><summary>
            Makes the validity of a cached response dependent on another item in the cache.
            </summary><param name="cacheKey">
            The key of the item that the cached response is dependent upon.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)"><summary>
            Makes the validity of a cached response dependent on other items in the cache.
            </summary><param name="cacheKeys">
            The <see cref="T:System.Collections.ArrayList" /> that contains the keys of the items that the current cached response is dependent upon.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.AddCacheItemDependencies(System.String[])"><summary>
            Makes the validity of a cached item dependent on another item in the cache.
            </summary><param name="cacheKeys">
            An array of item keys that the cached response is dependent upon.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])"><summary>
            Associates a set of cache dependencies with the response to facilitate invalidation of the response if it is stored in the output cache and the specified dependencies change.
            </summary><param name="dependencies">
            A file, cache key, or <see cref="T:System.Web.Caching.CacheDependency" /> to add to the list of application dependencies.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.Close"><summary>
            Closes the socket connection to a client.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.BinaryWrite(System.Byte[])"><summary>
            Writes a string of binary characters to the HTTP output stream.
            </summary><param name="buffer">
            The bytes to write to the output stream.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.Pics(System.String)"><summary>
            Appends a HTTP PICS-Label header to the output stream.
            </summary><param name="value">
            The string to add to the PICS-Label header.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.AppendHeader(System.String,System.String)"><summary>
            Adds an HTTP header to the output stream.
            </summary><param name="name">
            The name of the HTTP header to add to the output stream.
            </param><param name="value">
            The string to append to the header.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.AppendCookie(System.Web.HttpCookie)"><summary>
            Adds an HTTP cookie to the intrinsic cookie collection.
            </summary><param name="cookie">
            The <see cref="T:System.Web.HttpCookie" /> to add to the output stream.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.SetCookie(System.Web.HttpCookie)"><summary>
            Updates an existing cookie in the cookie collection.
            </summary><param name="cookie">
            The cookie in the collection to be updated.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.ClearHeaders"><summary>
            Clears all headers from the buffer stream.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.ClearContent"><summary>
            Clears all content output from the buffer stream.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.Clear"><summary>
            Clears all content output from the buffer stream.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.Flush"><summary>
            Sends all currently buffered output to the client.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.AppendToLog(System.String)"><summary>
            Adds custom log information to the Internet Information Services (IIS) log file.
            </summary><param name="param">
            The text to add to the log file.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.Redirect(System.String)"><summary>
            Redirects a client to a new URL and specifies the new URL.
            </summary><param name="url">
            The target location. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.Redirect(System.String,System.Boolean)"><summary>
            Redirects a client to a new URL. Specifies the new URL and whether execution of the current page should terminate.
            </summary><param name="url">
            The location of the target. 
            </param><param name="endResponse">
            Indicates whether execution of the current page should terminate. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.Write(System.String)"><summary>
            Writes a string to an HTTP response output stream.
            </summary><param name="s">
            The string to write to the HTTP output stream.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.Write(System.Object)"><summary>
            Writes an <see cref="T:System.Object" /> to an HTTP response stream.
            </summary><param name="obj">
            The <see cref="T:System.Object" /> to write to the HTTP output stream.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.Write(System.Char)"><summary>
            Writes a character to an HTTP response output stream.
            </summary><param name="ch">
            The character to write to the HTTP output stream.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.Write(System.Char[],System.Int32,System.Int32)"><summary>
            Writes an array of characters to an HTTP response output stream.
            </summary><param name="buffer">
            The character array to write.
            </param><param name="index">
            The position in the character array where writing starts.
            </param><param name="count">
            The number of characters to write, beginning at <paramref name="index" />.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)"><summary>
            Allows insertion of response substitution blocks into the response, which allows dynamic generation of specified response regions for output cached responses.
            </summary><param name="callback">
            The method, user control, or object to substitute.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.WriteFile(System.String)"><summary>
            Writes the contents of the specified file directly to an HTTP response output stream as a file block.
            </summary><param name="filename">
            The name of the file to write to the HTTP output.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.WriteFile(System.String,System.Boolean)"><summary>
            Writes the contents of the specified file directly to an HTTP response output stream as a memory block.
            </summary><param name="filename">
            The name of the file to write into a memory block.
            </param><param name="readIntoMemory">
            Indicates whether the file will be written into a memory block.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.TransmitFile(System.String)"><summary>
            Writes the specified file directly to an HTTP response output stream, without buffering it in memory.
            </summary><param name="filename">
            The name of the file to write to the HTTP output.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.TransmitFile(System.String,System.Int64,System.Int64)"><summary>
            Writes the specified part of a file directly to an HTTP response output stream without buffering it in memory.
            </summary><param name="filename">
            The name of the file to write to the HTTP output.
            </param><param name="offset">
            The position in the file to begin to write to the HTTP output.
            </param><param name="length">
            The number of bytes to be transmitted.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.WriteFile(System.String,System.Int64,System.Int64)"><summary>
            Writes the specified file directly to an HTTP response output stream.
            </summary><param name="filename">
            The name of the file to write to the HTTP output stream.
            </param><param name="offset">
            The byte position in the file where writing will start.
            </param><param name="size">
            The number of bytes to write to the output stream.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)"><summary>
            Writes the specified file directly to an HTTP response output stream.
            </summary><param name="fileHandle">
            The file handle of the file to write to the HTTP output stream.
            </param><param name="offset">
            The byte position in the file where writing will start.
            </param><param name="size">
            The number of bytes to write to the output stream.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.AddHeader(System.String,System.String)"><summary>
            Adds an HTTP header to the output stream. <see cref="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" /> is provided for compatibility with earlier versions of ASP.
            </summary><param name="name">
            The name of the HTTP header to add <paramref name="value" /> to.
            </param><param name="value">
            The string to add to the header.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.End"><summary>
            Sends all currently buffered output to the client, stops execution of the page, and raises the <see cref="E:System.Web.HttpApplication.EndRequest" /> event.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpResponse.ApplyAppPathModifier(System.String)"><summary>
            Adds a session ID to the virtual path if the session is using <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state and returns the combined path. If <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state is not used, <see cref="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" /> returns the original virtual path.
            </summary><param name="virtualPath">
            The virtual path to a resource. 
            </param></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.WrappedInstance"><summary>
            Gets the concrete instance wrapped by this <see cref="T:Remotion.Web.Infrastructure.IHttpResponse" /> wrapper.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.Cookies"><summary>
            Gets the response cookie collection.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.Headers"><summary>
            Gets the collection of response headers.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.StatusCode"><summary>
            Gets or sets the HTTP status code of the output returned to the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.SubStatusCode"><summary>
            Gets or sets a value qualifying the status code of the response.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.StatusDescription"><summary>
            Gets or sets the HTTP status string of the output returned to the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.TrySkipIisCustomErrors"><summary>
            Gets or sets a value that specifies whether IIS 7.0 custom errors are disabled.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.BufferOutput"><summary>
            Gets or sets a value indicating whether to buffer output and send it after the complete page is finished processing.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.ContentType"><summary>
            Gets or sets the HTTP MIME type of the output stream.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.Charset"><summary>
            Gets or sets the HTTP character set of the output stream.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.ContentEncoding"><summary>
            Gets or sets the HTTP character set of the output stream.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.HeaderEncoding"><summary>
            Gets or sets an <see cref="T:System.Text.Encoding" /> object that represents the encoding for the current header output stream.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.Cache"><summary>
            Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of a Web page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.IsClientConnected"><summary>
            Gets a value indicating whether the client is still connected to the server.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.IsRequestBeingRedirected"><summary>
            Gets a Boolean value indicating whether the client is being transferred to a new location.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.RedirectLocation"><summary>
            Gets or sets the value of the Http Location header.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.Output"><summary>
            Enables output of text to the outgoing HTTP response stream.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.OutputStream"><summary>
            Enables binary output to the outgoing HTTP content body.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.Filter"><summary>
            Gets or sets a wrapping filter object that is used to modify the HTTP entity body before transmission.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.SuppressContent"><summary>
            Gets or sets a value indicating whether to send HTTP content to the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.Status"><summary>
            Sets the Status line that is returned to the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.Buffer"><summary>
            Gets or sets a value indicating whether to buffer output and send it after the complete response is finished processing.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.Expires"><summary>
            Gets or sets the number of minutes before a page cached on a browser expires. If the user returns to the same page before it expires, the cached version is displayed. <see cref="P:System.Web.HttpResponse.Expires" /> is provided for compatibility with earlier versions of ASP.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.ExpiresAbsolute"><summary>
            Gets or sets the absolute date and time at which to remove cached information from the cache. <see cref="P:System.Web.HttpResponse.ExpiresAbsolute" /> is provided for compatibility with earlier versions of ASP.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpResponse.CacheControl"><summary>
            Gets or sets the Cache-Control HTTP header that matches one of the <see cref="T:System.Web.HttpCacheability" /> enumeration values.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.DisableKernelCache"><summary>
            Disables kernel caching for the current response.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.AddFileDependency(System.String)"><summary>
            Adds a single file name to the collection of file names on which the current response is dependent.
            </summary><param name="filename">
            The name of the file to add.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.AddFileDependencies(System.Collections.ArrayList)"><summary>
            Adds a group of file names to the collection of file names on which the current response is dependent.
            </summary><param name="filenames">
            The collection of files to add.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.AddFileDependencies(System.String[])"><summary>
            Adds an array of file names to the collection of file names on which the current response is dependent.
            </summary><param name="filenames">
            An array of files to add.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.AddCacheItemDependency(System.String)"><summary>
            Makes the validity of a cached response dependent on another item in the cache.
            </summary><param name="cacheKey">
            The key of the item that the cached response is dependent upon.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.AddCacheItemDependencies(System.Collections.ArrayList)"><summary>
            Makes the validity of a cached response dependent on other items in the cache.
            </summary><param name="cacheKeys">
            The <see cref="T:System.Collections.ArrayList" /> that contains the keys of the items that the current cached response is dependent upon.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.AddCacheItemDependencies(System.String[])"><summary>
            Makes the validity of a cached item dependent on another item in the cache.
            </summary><param name="cacheKeys">
            An array of item keys that the cached response is dependent upon.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.AddCacheDependency(System.Web.Caching.CacheDependency[])"><summary>
            Associates a set of cache dependencies with the response to facilitate invalidation of the response if it is stored in the output cache and the specified dependencies change.
            </summary><param name="dependencies">
            A file, cache key, or <see cref="T:System.Web.Caching.CacheDependency" /> to add to the list of application dependencies.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.Close"><summary>
            Closes the socket connection to a client.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.BinaryWrite(System.Byte[])"><summary>
            Writes a string of binary characters to the HTTP output stream.
            </summary><param name="buffer">
            The bytes to write to the output stream.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.Pics(System.String)"><summary>
            Appends a HTTP PICS-Label header to the output stream.
            </summary><param name="value">
            The string to add to the PICS-Label header.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.AppendHeader(System.String,System.String)"><summary>
            Adds an HTTP header to the output stream.
            </summary><param name="name">
            The name of the HTTP header to add to the output stream.
            </param><param name="value">
            The string to append to the header.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.AppendCookie(System.Web.HttpCookie)"><summary>
            Adds an HTTP cookie to the intrinsic cookie collection.
            </summary><param name="cookie">
            The <see cref="T:System.Web.HttpCookie" /> to add to the output stream.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.SetCookie(System.Web.HttpCookie)"><summary>
            Updates an existing cookie in the cookie collection.
            </summary><param name="cookie">
            The cookie in the collection to be updated.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.ClearHeaders"><summary>
            Clears all headers from the buffer stream.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.ClearContent"><summary>
            Clears all content output from the buffer stream.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.Clear"><summary>
            Clears all content output from the buffer stream.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.Flush"><summary>
            Sends all currently buffered output to the client.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.AppendToLog(System.String)"><summary>
            Adds custom log information to the Internet Information Services (IIS) log file.
            </summary><param name="param">
            The text to add to the log file.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.Redirect(System.String)"><summary>
            Redirects a client to a new URL and specifies the new URL.
            </summary><param name="url">
            The target location. 
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.Redirect(System.String,System.Boolean)"><summary>
            Redirects a client to a new URL. Specifies the new URL and whether execution of the current page should terminate.
            </summary><param name="url">
            The location of the target. 
            </param><param name="endResponse">
            Indicates whether execution of the current page should terminate. 
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.Write(System.String)"><summary>
            Writes a string to an HTTP response output stream.
            </summary><param name="s">
            The string to write to the HTTP output stream.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.Write(System.Object)"><summary>
            Writes an <see cref="T:System.Object" /> to an HTTP response stream.
            </summary><param name="obj">
            The <see cref="T:System.Object" /> to write to the HTTP output stream.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.Write(System.Char)"><summary>
            Writes a character to an HTTP response output stream.
            </summary><param name="ch">
            The character to write to the HTTP output stream.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.Write(System.Char[],System.Int32,System.Int32)"><summary>
            Writes an array of characters to an HTTP response output stream.
            </summary><param name="buffer">
            The character array to write.
            </param><param name="index">
            The position in the character array where writing starts.
            </param><param name="count">
            The number of characters to write, beginning at <paramref name="index" />.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)"><summary>
            Allows insertion of response substitution blocks into the response, which allows dynamic generation of specified response regions for output cached responses.
            </summary><param name="callback">
            The method, user control, or object to substitute.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.WriteFile(System.String)"><summary>
            Writes the contents of the specified file directly to an HTTP response output stream as a file block.
            </summary><param name="filename">
            The name of the file to write to the HTTP output.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.WriteFile(System.String,System.Boolean)"><summary>
            Writes the contents of the specified file directly to an HTTP response output stream as a memory block.
            </summary><param name="filename">
            The name of the file to write into a memory block.
            </param><param name="readIntoMemory">
            Indicates whether the file will be written into a memory block.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.TransmitFile(System.String)"><summary>
            Writes the specified file directly to an HTTP response output stream, without buffering it in memory.
            </summary><param name="filename">
            The name of the file to write to the HTTP output.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.TransmitFile(System.String,System.Int64,System.Int64)"><summary>
            Writes the specified part of a file directly to an HTTP response output stream without buffering it in memory.
            </summary><param name="filename">
            The name of the file to write to the HTTP output.
            </param><param name="offset">
            The position in the file to begin to write to the HTTP output.
            </param><param name="length">
            The number of bytes to be transmitted.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.WriteFile(System.String,System.Int64,System.Int64)"><summary>
            Writes the specified file directly to an HTTP response output stream.
            </summary><param name="filename">
            The name of the file to write to the HTTP output stream.
            </param><param name="offset">
            The byte position in the file where writing will start.
            </param><param name="size">
            The number of bytes to write to the output stream.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.WriteFile(System.IntPtr,System.Int64,System.Int64)"><summary>
            Writes the specified file directly to an HTTP response output stream.
            </summary><param name="fileHandle">
            The file handle of the file to write to the HTTP output stream.
            </param><param name="offset">
            The byte position in the file where writing will start.
            </param><param name="size">
            The number of bytes to write to the output stream.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.AddHeader(System.String,System.String)"><summary>
            Adds an HTTP header to the output stream. <see cref="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" /> is provided for compatibility with earlier versions of ASP.
            </summary><param name="name">
            The name of the HTTP header to add <paramref name="value" /> to.
            </param><param name="value">
            The string to add to the header.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.End"><summary>
            Sends all currently buffered output to the client, stops execution of the page, and raises the <see cref="E:System.Web.HttpApplication.EndRequest" /> event.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpResponseWrapper.ApplyAppPathModifier(System.String)"><summary>
            Adds a session ID to the virtual path if the session is using <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state and returns the combined path. If <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state is not used, <see cref="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" /> returns the original virtual path.
            </summary><param name="virtualPath">
            The virtual path to a resource. 
            </param></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.WrappedInstance"><summary>
            Gets the concrete instance wrapped by this <see cref="T:Remotion.Web.Infrastructure.IHttpResponse" /> wrapper.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.Cookies"><summary>
            Gets the response cookie collection.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.Headers"><summary>
            Gets the collection of response headers.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.StatusCode"><summary>
            Gets or sets the HTTP status code of the output returned to the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.SubStatusCode"><summary>
            Gets or sets a value qualifying the status code of the response.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.StatusDescription"><summary>
            Gets or sets the HTTP status string of the output returned to the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.TrySkipIisCustomErrors"><summary>
            Gets or sets a value that specifies whether IIS 7.0 custom errors are disabled.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.BufferOutput"><summary>
            Gets or sets a value indicating whether to buffer output and send it after the complete page is finished processing.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.ContentType"><summary>
            Gets or sets the HTTP MIME type of the output stream.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.Charset"><summary>
            Gets or sets the HTTP character set of the output stream.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.ContentEncoding"><summary>
            Gets or sets the HTTP character set of the output stream.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.HeaderEncoding"><summary>
            Gets or sets an <see cref="T:System.Text.Encoding" /> object that represents the encoding for the current header output stream.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.Cache"><summary>
            Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of a Web page.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.IsClientConnected"><summary>
            Gets a value indicating whether the client is still connected to the server.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.IsRequestBeingRedirected"><summary>
            Gets a Boolean value indicating whether the client is being transferred to a new location.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.RedirectLocation"><summary>
            Gets or sets the value of the Http Location header.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.Output"><summary>
            Enables output of text to the outgoing HTTP response stream.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.OutputStream"><summary>
            Enables binary output to the outgoing HTTP content body.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.Filter"><summary>
            Gets or sets a wrapping filter object that is used to modify the HTTP entity body before transmission.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.SuppressContent"><summary>
            Gets or sets a value indicating whether to send HTTP content to the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.Status"><summary>
            Sets the Status line that is returned to the client.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.Buffer"><summary>
            Gets or sets a value indicating whether to buffer output and send it after the complete response is finished processing.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.Expires"><summary>
            Gets or sets the number of minutes before a page cached on a browser expires. If the user returns to the same page before it expires, the cached version is displayed. <see cref="P:System.Web.HttpResponse.Expires" /> is provided for compatibility with earlier versions of ASP.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.ExpiresAbsolute"><summary>
            Gets or sets the absolute date and time at which to remove cached information from the cache. <see cref="P:System.Web.HttpResponse.ExpiresAbsolute" /> is provided for compatibility with earlier versions of ASP.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpResponseWrapper.CacheControl"><summary>
            Gets or sets the Cache-Control HTTP header that matches one of the <see cref="T:System.Web.HttpCacheability" /> enumeration values.
            </summary></member><member name="T:Remotion.Web.Infrastructure.HttpServerUtilityWrapper"><summary>
            The <see cref="T:Remotion.Web.Infrastructure.HttpServerUtilityWrapper" /> type is the default implementation of the <see cref="T:Remotion.Web.Infrastructure.IHttpServerUtility" /> interface.
            </summary></member><member name="T:Remotion.Web.Infrastructure.IHttpServerUtility"><summary>
            The <see cref="T:Remotion.Web.Infrastructure.IHttpServerUtility" /> interface defines a wrapper for the <see cref="T:System.Web.HttpServerUtility" /> type.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.CreateObject(System.String)"><summary>
            Creates a server instance of a COM object identified by the object's programmatic identifier (ProgID).
            </summary><param name="progID">
            The class or type of object to create an instance of.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.CreateObject(System.Type)"><summary>
            Creates a server instance of a COM object identified by the object's type.
            </summary><param name="type">
            A <see cref="T:System.Type" /> representing the object to create.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.CreateObjectFromClsid(System.String)"><summary>
            Creates a server instance of a COM object identified by the object's class identifier (CLSID).
            </summary><param name="clsid">
            The class identifier of the object to create an instance of.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.MapPath(System.String)"><summary>
            Returns the physical file path that corresponds to the specified virtual path on the Web server.
            </summary><param name="path">
            The virtual path of the Web server.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.GetLastError"><summary>
            Returns the previous exception.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.ClearError"><summary>
            Clears the previous exception.
            </summary></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.Execute(System.String)"><summary>
            Executes the handler for the specified virtual path in the context of the current request. 
            </summary><param name="path">
            The URL path to execute.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.Execute(System.String,System.IO.TextWriter)"><summary>
            Executes the handler for the specified virtual path in the context of the current request. A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler.
            </summary><param name="path">
            The URL path to execute. 
            </param><param name="writer">
            The <see cref="T:System.IO.TextWriter" /> to capture the output. 
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.Execute(System.String,System.Boolean)"><summary>
            Executes the handler for the specified virtual path in the context of the current request and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </summary><param name="path">
            The URL path to execute. 
            </param><param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)"><summary>
            Executes the handler for the specified virtual path in the context of the current request. A <see cref="T:System.IO.TextWriter" /> captures output from the page and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </summary><param name="path">
            The URL path to execute.
            </param><param name="writer">
            The <see cref="T:System.IO.TextWriter" /> to capture the output.
            </param><param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)"><summary>
            Executes the handler for the specified virtual path in the context of the current request. A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </summary><param name="handler">
            The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.
            </param><param name="writer">
            The <see cref="T:System.IO.TextWriter" /> to capture the output.
            </param><param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.Transfer(System.String,System.Boolean)"><summary>
            Terminates execution of the current page and starts execution of a new page by using the specified URL path of the page. Specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </summary><param name="path">
            The URL path of the new page on the server to execute.
            </param><param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.Transfer(System.String)"><summary>
            For the current request, terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.
            </summary><param name="path">
            The URL path of the new page on the server to execute.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)"><summary>
            Terminates execution of the current page and starts execution of a new request by using a custom HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> interface and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </summary><param name="handler">
            The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.
            </param><param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.TransferRequest(System.String)"><summary>
            Performs an asynchronous execution of the specified URL.
            </summary><param name="path">
            The URL path of the new page on the server to execute.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.TransferRequest(System.String,System.Boolean)"><summary>
            Performs an asynchronous execution of the specified URL and preserves query string parameters.
            </summary><param name="path">
            The URL path of the new page on the server to execute.
            </param><param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)"><summary>
            Performs an asynchronous execution of the specified URL using the specified HTTP method and headers.
            </summary><param name="path">
            The URL path of the new page on the server to execute.
            </param><param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </param><param name="method">
            The HTTP method to use in the execution of the new request.
            </param><param name="headers">
            A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of request headers for the new request.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.HtmlDecode(System.String)"><summary>
            Decodes an HTML-encoded string and returns the decoded string.
            </summary><param name="s">
            The HTML string to decode.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)"><summary>
            Decodes an HTML-encoded string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.
            </summary><param name="s">
            The HTML string to decode.
            </param><param name="output">
            The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.HtmlEncode(System.String)"><summary>
            HTML-encodes a string and returns the encoded string.
            </summary><param name="s">
            The text string to encode.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)"><summary>
            HTML-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.
            </summary><param name="s">
            The string to encode. 
            </param><param name="output">
            The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.UrlEncode(System.String)"><summary>
            URL-encodes a string and returns the encoded string.
            </summary><param name="s">
            The text to URL-encode.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.UrlPathEncode(System.String)"><summary>
            URL-encodes the path section of a URL string and returns the encoded string.
            </summary><param name="s">
            The text to URL-encode.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)"><summary>
            URL-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.
            </summary><param name="s">
            The text string to encode.
            </param><param name="output">
            The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.UrlDecode(System.String)"><summary>
            URL-decodes a string and returns the decoded string.
            </summary><param name="s">
            The text string to decode.
            </param></member><member name="M:Remotion.Web.Infrastructure.IHttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)"><summary>
            Decodes an HTML string received in a URL and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.
            </summary><param name="s">
            The HTML string to decode.
            </param><param name="output">
            The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.
            </param></member><member name="P:Remotion.Web.Infrastructure.IHttpServerUtility.WrappedInstance"><summary>
            Gets the concrete instance wrapped by this <see cref="T:Remotion.Web.Infrastructure.IHttpServerUtility" /> wrapper.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpServerUtility.MachineName"><summary>
            Gets the server's computer name.
            </summary></member><member name="P:Remotion.Web.Infrastructure.IHttpServerUtility.ScriptTimeout"><summary>
            Gets and sets the request time-out value in seconds.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.CreateObject(System.String)"><summary>
            Creates a server instance of a COM object identified by the object's programmatic identifier (ProgID).
            </summary><param name="progID">
            The class or type of object to create an instance of.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.CreateObject(System.Type)"><summary>
            Creates a server instance of a COM object identified by the object's type.
            </summary><param name="type">
            A <see cref="T:System.Type" /> representing the object to create.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.CreateObjectFromClsid(System.String)"><summary>
            Creates a server instance of a COM object identified by the object's class identifier (CLSID).
            </summary><param name="clsid">
            The class identifier of the object to create an instance of.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.MapPath(System.String)"><summary>
            Returns the physical file path that corresponds to the specified virtual path on the Web server.
            </summary><param name="path">
            The virtual path of the Web server.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.GetLastError"><summary>
            Returns the previous exception.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.ClearError"><summary>
            Clears the previous exception.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.Execute(System.String)"><summary>
            Executes the handler for the specified virtual path in the context of the current request. 
            </summary><param name="path">
            The URL path to execute.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.Execute(System.String,System.IO.TextWriter)"><summary>
            Executes the handler for the specified virtual path in the context of the current request. A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler.
            </summary><param name="path">
            The URL path to execute. 
            </param><param name="writer">
            The <see cref="T:System.IO.TextWriter" /> to capture the output. 
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.Execute(System.String,System.Boolean)"><summary>
            Executes the handler for the specified virtual path in the context of the current request and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </summary><param name="path">
            The URL path to execute. 
            </param><param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.Execute(System.String,System.IO.TextWriter,System.Boolean)"><summary>
            Executes the handler for the specified virtual path in the context of the current request. A <see cref="T:System.IO.TextWriter" /> captures output from the page and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </summary><param name="path">
            The URL path to execute.
            </param><param name="writer">
            The <see cref="T:System.IO.TextWriter" /> to capture the output.
            </param><param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)"><summary>
            Executes the handler for the specified virtual path in the context of the current request. A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </summary><param name="handler">
            The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.
            </param><param name="writer">
            The <see cref="T:System.IO.TextWriter" /> to capture the output.
            </param><param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.Transfer(System.String,System.Boolean)"><summary>
            Terminates execution of the current page and starts execution of a new page by using the specified URL path of the page. Specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </summary><param name="path">
            The URL path of the new page on the server to execute.
            </param><param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.Transfer(System.String)"><summary>
            For the current request, terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.
            </summary><param name="path">
            The URL path of the new page on the server to execute.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.Transfer(System.Web.IHttpHandler,System.Boolean)"><summary>
            Terminates execution of the current page and starts execution of a new request by using a custom HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> interface and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </summary><param name="handler">
            The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.
            </param><param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.TransferRequest(System.String)"><summary>
            Performs an asynchronous execution of the specified URL.
            </summary><param name="path">
            The URL path of the new page on the server to execute.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.TransferRequest(System.String,System.Boolean)"><summary>
            Performs an asynchronous execution of the specified URL and preserves query string parameters.
            </summary><param name="path">
            The URL path of the new page on the server to execute.
            </param><param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)"><summary>
            Performs an asynchronous execution of the specified URL using the specified HTTP method and headers.
            </summary><param name="path">
            The URL path of the new page on the server to execute.
            </param><param name="preserveForm">true to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; false to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.
            </param><param name="method">
            The HTTP method to use in the execution of the new request.
            </param><param name="headers">
            A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of request headers for the new request.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.HtmlDecode(System.String)"><summary>
            Decodes an HTML-encoded string and returns the decoded string.
            </summary><param name="s">
            The HTML string to decode.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.HtmlDecode(System.String,System.IO.TextWriter)"><summary>
            Decodes an HTML-encoded string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.
            </summary><param name="s">
            The HTML string to decode.
            </param><param name="output">
            The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.HtmlEncode(System.String)"><summary>
            HTML-encodes a string and returns the encoded string.
            </summary><param name="s">
            The text string to encode.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.HtmlEncode(System.String,System.IO.TextWriter)"><summary>
            HTML-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.
            </summary><param name="s">
            The string to encode. 
            </param><param name="output">
            The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.UrlEncode(System.String)"><summary>
            URL-encodes a string and returns the encoded string.
            </summary><param name="s">
            The text to URL-encode.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.UrlPathEncode(System.String)"><summary>
            URL-encodes the path section of a URL string and returns the encoded string.
            </summary><param name="s">
            The text to URL-encode.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.UrlEncode(System.String,System.IO.TextWriter)"><summary>
            URL-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.
            </summary><param name="s">
            The text string to encode.
            </param><param name="output">
            The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.UrlDecode(System.String)"><summary>
            URL-decodes a string and returns the decoded string.
            </summary><param name="s">
            The text string to decode.
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.UrlDecode(System.String,System.IO.TextWriter)"><summary>
            Decodes an HTML string received in a URL and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.
            </summary><param name="s">
            The HTML string to decode.
            </param><param name="output">
            The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.
            </param></member><member name="P:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.WrappedInstance"><summary>
            Gets the concrete instance wrapped by this <see cref="T:Remotion.Web.Infrastructure.IHttpServerUtility" /> wrapper.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.MachineName"><summary>
            Gets the server's computer name.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpServerUtilityWrapper.ScriptTimeout"><summary>
            Gets and sets the request time-out value in seconds.
            </summary></member><member name="T:Remotion.Web.Infrastructure.HttpSessionStateWrapper"><summary>
            The <see cref="T:Remotion.Web.Infrastructure.HttpRequestWrapper" /> type is the default implementation of the <see cref="T:Remotion.Web.Infrastructure.IHttpRequest" /> interface.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpSessionStateWrapper.Abandon"><summary>
            Cancels the current session.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpSessionStateWrapper.Add(System.String,System.Object)"><summary>
            Adds a new item to the session-state collection.
            </summary><param name="name">
            The name of the item to add to the session-state collection. 
            </param><param name="value">
            The value of the item to add to the session-state collection. 
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpSessionStateWrapper.Remove(System.String)"><summary>
            Deletes an item from the session-state collection.
            </summary><param name="name">
            The name of the item to delete from the session-state collection. 
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpSessionStateWrapper.RemoveAt(System.Int32)"><summary>
            Deletes an item at a specified index from the session-state collection.
            </summary><param name="index">
            The index of the item to remove from the session-state collection. 
            </param></member><member name="M:Remotion.Web.Infrastructure.HttpSessionStateWrapper.Clear"><summary>
            Removes all keys and values from the session-state collection.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpSessionStateWrapper.RemoveAll"><summary>
            Removes all keys and values from the session-state collection.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpSessionStateWrapper.GetEnumerator"><summary>
            Returns an enumerator that can be used to read all the session-state variable names in the current session.
            </summary></member><member name="M:Remotion.Web.Infrastructure.HttpSessionStateWrapper.CopyTo(System.Array,System.Int32)"><summary>
            Copies the collection of session-state values to a one-dimensional array, starting at the specified index in the array.
            </summary><param name="array">
            The <see cref="T:System.Array" /> that receives the session values. 
            </param><param name="index">
            The zero-based index in <paramref name="array" /> from which copying starts. 
            </param></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.WrappedInstance"><summary>
            Gets the concrete instance wrapped by this <see cref="T:System.Web.SessionState.IHttpSessionState" /> wrapper.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.SessionID"><summary>
            Gets the unique identifier for the session.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.Timeout"><summary>
            Gets and sets the amount of time, in minutes, allowed between requests before the session-state provider terminates the session.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.IsNewSession"><summary>
            Gets a value indicating whether the session was created with the current request.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.Mode"><summary>
            Gets the current session-state mode.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.IsCookieless"><summary>
            Gets a value indicating whether the session ID is embedded in the URL or stored in an HTTP cookie.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.CookieMode"><summary>
            Gets a value that indicates whether the application is configured for cookieless sessions.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.LCID"><summary>
            Gets or sets the locale identifier (LCID) of the current session.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.CodePage"><summary>
            Gets or sets the character-set identifier for the current session.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.Contents"><summary>
            Gets a reference to the current session-state object.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.StaticObjects"><summary>
            Gets a collection of objects declared by &lt;object Runat="Server" Scope="Session"/&gt; tags within the ASP.NET application file Global.asax.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.Item(System.String)"><summary>
            Gets or sets a session value by name.
            </summary><param name="name">
            The key name of the session value. 
            </param></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.Item(System.Int32)"><summary>
            Gets or sets a session value by numerical index.
            </summary><param name="index">
            The numerical index of the session value. 
            </param></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.Count"><summary>
            Gets the number of items in the session-state collection.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.Keys"><summary>
            Gets a collection of the keys for all values stored in the session-state collection.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.SyncRoot"><summary>
            Gets an object that can be used to synchronize access to the collection of session-state values.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.IsReadOnly"><summary>
            Gets a value indicating whether the session is read-only.
            </summary></member><member name="P:Remotion.Web.Infrastructure.HttpSessionStateWrapper.IsSynchronized"><summary>
            Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe).
            </summary></member><member name="T:Remotion.Web.UI.Controls.ControlReplacing.StateClearingStrategy"><summary>
            The <see cref="T:Remotion.Web.UI.Controls.ControlReplacing.StateClearingStrategy" /> type is used when the state of a <see cref="T:Remotion.Web.UI.Controls.ControlReplacing.ControlReplacer" />'s control tree should be reset.
            </summary></member><member name="T:Remotion.Web.UI.Controls.ControlReplacing.StateLoadingStrategy"><summary>
            The <see cref="T:Remotion.Web.UI.Controls.ControlReplacing.StateLoadingStrategy" /> type is used when the state of a <see cref="T:Remotion.Web.UI.Controls.ControlReplacing.ControlReplacer" />'s control tree should be 
            loaded during a regular page-lifecycle, i.e. when the view state is to be loaded without modification
            </summary></member><member name="T:Remotion.Web.UI.Controls.ControlReplacing.StateReplacingStrategy"><summary>
            The <see cref="T:Remotion.Web.UI.Controls.ControlReplacing.StateReplacingStrategy" /> type is used when the state of a <see cref="T:Remotion.Web.UI.Controls.ControlReplacing.ControlReplacer" />'s control tree should be 
            restored to reflect a previously used state.
            </summary></member><member name="T:Remotion.Web.UI.Controls.Command"><summary> A <see cref="T:Remotion.Web.UI.Controls.Command" /> defines an action the user can invoke. </summary></member><member name="T:Remotion.Web.UI.Controls.IControlItem"><summary>
              Provides <see cref="T:System.ComponentModel.IComponent" />-like functionality for non-UI items of controls.
            </summary></member><member name="M:Remotion.Web.UI.Controls.Command.OnClick"><summary> Fires the <see cref="F:Remotion.Web.UI.Controls.Command.Click" /> event. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.RenderBegin(System.Web.UI.HtmlTextWriter,System.String,System.String[],System.String,Remotion.Security.ISecurableObject,System.Collections.Specialized.NameValueCollection,System.Boolean,System.Web.UI.WebControls.Style)"><summary> Renders the opening tag for the command. </summary><param name="writer"> The <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use. Must not be <see langword="null" />. </param><param name="postBackEvent">
              The string executed upon the click on a command of types
              <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" /> or <see cref="F:Remotion.Web.UI.Controls.CommandType.WxeFunction" />.
              This string is usually the call to the <c>__doPostBack</c> script function used by ASP.net
              to force a post back.
            </param><param name="parameters">
              The strings inserted into the href attribute using <c>string.Format</c>.
            </param><param name="onClick"> 
              The string always rendered in the <c>onClick</c> tag of the anchor element. 
            </param><param name="securableObject">
              The <see cref="T:Remotion.Security.ISecurableObject" /> for which security is evaluated. Use <see landword="null" /> if security is stateless or not evaluated.
            </param><param name="additionalUrlParameters">
              The <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing additional url parameters.
              Must not be <see langword="null" />.
            </param><param name="includeNavigationUrlParameters"> 
              <see langword="true" /> to include URL parameters provided by <see cref="T:Remotion.Web.UI.ISmartNavigablePage" />.
            </param><param name="style"> The style applied to the opening tag. </param></member><member name="M:Remotion.Web.UI.Controls.Command.RenderBegin(System.Web.UI.HtmlTextWriter,System.String,System.String[],System.String,Remotion.Security.ISecurableObject)"><summary> Renders the opening tag for the command. </summary><param name="writer"> The <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use. Must not be <see langword="null" />. </param><param name="postBackEvent">
              The string executed upon the click on a command of types
              <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" /> or <see cref="F:Remotion.Web.UI.Controls.CommandType.WxeFunction" />.
              This string is usually the call to the <c>__doPostBack</c> script function used by ASP.net
              to force a post back.
            </param><param name="parameters">
              The strings inserted into the href attribute using <c>string.Format</c>.
            </param><param name="onClick"> 
              The string always rendered in the <c>onClick</c> tag of the anchor element. 
            </param><param name="securableObject">
              The <see cref="T:Remotion.Security.ISecurableObject" /> for which security is evaluated. Use <see landword="null" /> if security is stateless or not evaluated.
            </param></member><member name="M:Remotion.Web.UI.Controls.Command.AddAttributesToRenderForHrefCommand(System.Web.UI.HtmlTextWriter,System.String[],System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)"><summary> Adds the attributes for the Href command to the anchor tag. </summary><param name="writer"> The <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use. Must not be <see langword="null" />. </param><param name="parameters">
              The strings inserted into the href attribute using <c>string.Format</c>.
            </param><param name="onClick"> 
              The string always rendered in the <c>onClick</c> tag of the anchor element. 
            </param><param name="additionalUrlParameters">
              The <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing additional url parameters.
              Must not be <see langword="null" />.
            </param><param name="includeNavigationUrlParameters"> 
              <see langword="true" /> to include URL parameters provided by <see cref="T:Remotion.Web.UI.ISmartNavigablePage" />.
              Defaults to <see langword="true" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.Command.AddAttributesToRenderForEventCommand(System.Web.UI.HtmlTextWriter,System.String,System.String)"><summary> Adds the attributes for the Event command to the anchor tag. </summary><param name="writer"> The <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use. Must not be <see langword="null" />. </param><param name="postBackEvent">
              The string executed upon the click on a command of types
              <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" /> or <see cref="F:Remotion.Web.UI.Controls.CommandType.WxeFunction" />.
              This string is usually the call to the <c>__doPostBack</c> script function used by ASP.net
              to force a post back. Must not be <see langword="null" />.
            </param><param name="onClick"> 
              The string always rendered in the <c>onClick</c> tag of the anchor element. 
            </param></member><member name="M:Remotion.Web.UI.Controls.Command.AddAttributesToRenderForWxeFunctionCommand(System.Web.UI.HtmlTextWriter,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)"><summary> Adds the attributes for the Wxe Function command to the anchor tag. </summary><param name="writer"> The <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use. Must not be <see langword="null" />. </param><param name="postBackEvent">
              The string executed upon the click on a command of types
              <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" /> or <see cref="F:Remotion.Web.UI.Controls.CommandType.WxeFunction" />.
              This string is usually the call to the <c>__doPostBack</c> script function used by ASP.net
              to force a post back. Must not be <see langword="null" />.
            </param><param name="onClick"> 
              The string always rendered in the <c>onClick</c> tag of the anchor element. 
            </param><param name="additionalUrlParameters">
              The <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing additional url parameters.
              Must not be <see langword="null" />.
            </param><param name="includeNavigationUrlParameters"> 
              <see langword="true" /> to include URL parameters provided by <see cref="T:Remotion.Web.UI.ISmartNavigablePage" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.Command.RenderEnd(System.Web.UI.HtmlTextWriter)"><summary> Renders the closing tag for the command. </summary><param name="writer"> The <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use. </param></member><member name="M:Remotion.Web.UI.Controls.Command.ToString"><summary>
              Returns a string representation of this <see cref="T:Remotion.Web.UI.Controls.Command" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.Command.ExecuteWxeFunction(Remotion.Web.ExecutionEngine.IWxePage,Remotion.Collections.NameObjectCollection)"><summary> Executes the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> defined by the <see cref="T:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo" />. </summary><param name="wxePage"> 
              The <see cref="T:Remotion.Web.ExecutionEngine.IWxePage" /> where this command is rendered on. Must not be <see langword="null" />.
            </param><param name="additionalWxeParameters"> 
              The parameters passed to the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> in addition to the executing function's variables.
              Use <see langword="null" /> or an empty collection if all parameters are supplied by the 
              <see cref="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.Parameters" /> string and the function stack.
            </param></member><member name="M:Remotion.Web.UI.Controls.Command.ShouldSerializeType"><summary> Controls the persisting of the <see cref="P:Remotion.Web.UI.Controls.Command.Type" />. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.ResetType"><summary> Sets the <see cref="P:Remotion.Web.UI.Controls.Command.Type" /> to its default value. </summary></member><member name="P:Remotion.Web.UI.Controls.Command.Type"><summary> The <see cref="T:Remotion.Web.UI.Controls.CommandType" /> represented by this instance of <see cref="T:Remotion.Web.UI.Controls.Command" />. </summary></member><member name="P:Remotion.Web.UI.Controls.Command.Show"><summary>
              Determines when the item command is shown to the user in regard of the parent control's read-only setting.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.EventCommand"><summary>
              The <see cref="T:Remotion.Web.UI.Controls.Command.EventCommandInfo" /> used when rendering the command as an event.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.HrefCommand"><summary>
              The <see cref="T:Remotion.Web.UI.Controls.Command.HrefCommandInfo" /> used when rendering the command as a hyperlink.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommand"><summary>
              The <see cref="T:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo" /> used when rendering the command as a <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.OwnerControl"><summary> Gets or sets the control to which this object belongs. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.EventCommandInfo.ToString"><summary> Returns a string representation of this <see cref="T:Remotion.Web.UI.Controls.Command.EventCommandInfo" />. </summary></member><member name="T:Remotion.Web.UI.Controls.Command.HrefCommandInfo"><summary> Wraps the properties required for rendering a hyperlink. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.HrefCommandInfo.#ctor"><summary> Simple constructor. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.HrefCommandInfo.ToString"><summary> Returns a string representation of this <see cref="T:Remotion.Web.UI.Controls.Command.HrefCommandInfo" />. </summary></member><member name="P:Remotion.Web.UI.Controls.Command.HrefCommandInfo.Href"><summary> Gets or sets the URL to link to when the rendered command is clicked. </summary></member><member name="P:Remotion.Web.UI.Controls.Command.HrefCommandInfo.Target"><summary> 
              Gets or sets the target window or frame to display the web page specified by <see cref="P:Remotion.Web.UI.Controls.Command.HrefCommandInfo.Href" /> 
              when  the rendered command is clicked.
            </summary></member><member name="T:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo"><summary> Wraps the properties required for calling a WxeFunction. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.#ctor"><summary> Simple constructor. </summary></member><member name="M:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.ToString"><summary>
              Returns a string representation of this <see cref="T:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.TypeName"><summary> 
              Gets or sets the complete type name of the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> to call when the rendered 
              command is clicked. Either the <see cref="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.TypeName" /> or the <see cref="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.MappingID" /> is required.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.MappingID"><summary> 
              Gets or sets the ID of the function as defined in the <see cref="T:Remotion.Web.ExecutionEngine.UrlMapping.UrlMappingEntry" />.
              Either the <see cref="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.TypeName" /> or the <see cref="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.MappingID" /> is required.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.Parameters"><summary> 
              Gets or sets the comma separated list of parameters passed to the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> when the 
              rendered command is clicked.
            </summary></member><member name="P:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo.Target"><summary> 
              Gets or sets the target window or frame to open the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> when the rendered command is 
              clicked.
            </summary></member><member name="T:Remotion.Web.UI.Controls.CommandType"><summary> The possible command types of a <see cref="T:Remotion.Web.UI.Controls.Command" />. </summary></member><member name="F:Remotion.Web.UI.Controls.CommandType.None"><summary> No command will be generated. </summary></member><member name="F:Remotion.Web.UI.Controls.CommandType.Event"><summary> A server side event will be raised upon a command click. </summary></member><member name="F:Remotion.Web.UI.Controls.CommandType.Href"><summary> A hyperlink will be rendered on the page. </summary></member><member name="F:Remotion.Web.UI.Controls.CommandType.WxeFunction"><summary> A <see cref="F:Remotion.Web.UI.Controls.CommandType.WxeFunction" /> will be called upon a command click. </summary></member><member name="T:Remotion.Web.UI.Controls.CommandShow"><summary> Defines when the command will be active on the page. </summary></member><member name="F:Remotion.Web.UI.Controls.CommandShow.Always"><summary> The command is always active. </summary></member><member name="F:Remotion.Web.UI.Controls.CommandShow.ReadOnly"><summary> The command is only active if the containing element is read-only. </summary></member><member name="F:Remotion.Web.UI.Controls.CommandShow.EditMode"><summary> The command is only active if the containing element is in edit-mode. </summary></member><member name="T:Remotion.Web.UI.Controls.CommandClickEventHandler"><summary>
              Represents the method that handles the <see cref="F:Remotion.Web.UI.Controls.Command.Click" /> event
              raised when clicking on a <see cref="T:Remotion.Web.UI.Controls.Command" /> of type <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.CommandClickEventArgs"><summary> Provides data for the <see cref="F:Remotion.Web.UI.Controls.Command.Click" /> event. </summary></member><member name="M:Remotion.Web.UI.Controls.CommandClickEventArgs.#ctor(Remotion.Web.UI.Controls.Command)"><summary> Initializes a new instance. </summary></member><member name="P:Remotion.Web.UI.Controls.CommandClickEventArgs.Command"><summary> The <see cref="P:Remotion.Web.UI.Controls.CommandClickEventArgs.Command" /> that caused the event. </summary></member><member name="T:Remotion.Web.UI.Controls.CompoundValidator"><summary>
              Base class for compound validators.
            </summary></member><member name="T:Remotion.Web.UI.Controls.IBaseValidator"><summary>
              This interface defines essential validator features that are not included in IValidator.
              <seealso cref="T:System.Web.UI.IValidator" />
            </summary></member><member name="M:Remotion.Web.UI.Controls.CompoundValidator.CreateChildValidators"><summary>
              Derived classes implement this method to create the contained validator(s).
            </summary></member><member name="T:Remotion.Web.UI.Controls.ControlItemCollection"><summary>
              Colletion of <see cref="T:Remotion.Web.UI.Controls.IControlItem" />.
            </summary></member><member name="F:Remotion.Web.UI.Controls.ControlItemCollection._isEditing"><summary> true if BeginEdit was called. </summary></member><member name="F:Remotion.Web.UI.Controls.ControlItemCollection._isChanged"><summary> true if _isEditing is true and the collection's values got changed. </summary></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.#ctor(System.Web.UI.Control,System.Type[])"><summary> Creates a new instance. </summary><param name="ownerControl"> Owner control. </param><param name="supportedTypes">
              Supported types must implement <see cref="T:Remotion.Web.UI.Controls.IControlItem" />. 
              Must not be <see langword="null" /> or contain items that are <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.#ctor(Remotion.Web.UI.Controls.IControl,System.Type[])"><summary> Creates a new instance. </summary><param name="ownerControl"> Owner control. </param><param name="supportedTypes"> 
              Supported types must implement <see cref="T:Remotion.Web.UI.Controls.IControlItem" />. 
              Must not be <see langword="null" /> or contain items that are <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.BeginEdit"><summary> Places the collection into edit mode. </summary></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.EndEdit"><summary> Returns the collection to normal mode. </summary></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)"><summary> Raises the <see cref="E:Remotion.Web.UI.Controls.ControlItemCollection.CollectionChanged" /> event. </summary></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.ToArray"></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.Find(System.String)"><summary> Finds the <see cref="T:Remotion.Web.UI.Controls.IControlItem" /> with an <see cref="P:Remotion.Web.UI.Controls.IControlItem.ItemID" /> of <paramref name="id" />. </summary><param name="id"> The ID to look for. </param></member><member name="M:Remotion.Web.UI.Controls.ControlItemCollection.IsSupportedType(Remotion.Web.UI.Controls.IControlItem)"><summary> Tests whether the specified control item's type is supported by the collection. </summary></member><member name="E:Remotion.Web.UI.Controls.ControlItemCollection.CollectionChanged"><summary> The event raised after the items contained in the collection has been changed. </summary></member><member name="P:Remotion.Web.UI.Controls.ControlItemCollection.Item(System.Int32)"></member><member name="P:Remotion.Web.UI.Controls.ControlItemCollection.OwnerControl"><summary> Gets or sets the control to which this collection belongs. </summary></member><member name="T:Remotion.Web.UI.Controls.DatePickerPage"><summary> 
              Displayes a <see cref="F:Remotion.Web.UI.Controls.DatePickerPage.Calendar" /> and updates an input control with the newly selected date.
            </summary></member><member name="F:Remotion.Web.UI.Controls.DatePickerPage.TargetIDField"><summary> Preserves the target control's ID during post backs. </summary></member><member name="F:Remotion.Web.UI.Controls.DatePickerPage.DatePickerIDField"><summary> Preserves the frame's ID in the parent page during post backs. </summary></member><member name="F:Remotion.Web.UI.Controls.DatePickerPage.DateValueField"><summary> Contains the date to be selected in the calendar. </summary></member><member name="T:Remotion.Web.UI.Controls.DropDownMenu"></member><member name="T:Remotion.Web.UI.Controls.IControlWithDesignTimeSupport"><summary>
              This interface contains all public members of System.Web.UI.Control. It is used to derive interfaces that will be
              implemented by deriving from System.Web.UI.Control.
            </summary></member><member name="F:Remotion.Web.UI.Controls.DropDownMenu.OnHeadTitleClickScript"><summary> Only used by control developers. </summary></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)"><summary> Implements interface <see cref="T:System.Web.UI.IPostBackEventHandler" />. </summary><param name="eventArgument"> &lt;index&gt; </param></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.OnEventCommandClick(Remotion.Web.UI.Controls.WebMenuItem)"><summary> Fires the <see cref="E:Remotion.Web.UI.Controls.DropDownMenu.EventCommandClick" /> event. </summary></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.OnWxeFunctionCommandClick(Remotion.Web.UI.Controls.WebMenuItem)"><summary> Fires the <see cref="E:Remotion.Web.UI.Controls.DropDownMenu.WxeFunctionCommandClick" /> event. </summary></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControlWithDesignTimeSupport#PreRenderForDesignMode"><summary> Calls <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> on every invocation. </summary></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.SetRenderHeadTitleMethodDelegate(System.Web.UI.RenderMethod)"><summary> Only used by control developers. </summary></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"></member><member name="M:Remotion.Web.UI.Controls.DropDownMenu.Remotion#Web#UI#Controls#IControl#get_BindingContainer"></member><member name="P:Remotion.Web.UI.Controls.DropDownMenu.TitleText"></member><member name="E:Remotion.Web.UI.Controls.DropDownMenu.EventCommandClick"><summary> Occurs when a command of type <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" /> is clicked. </summary></member><member name="E:Remotion.Web.UI.Controls.DropDownMenu.WxeFunctionCommandClick"><summary> Occurs when a command of type <see cref="F:Remotion.Web.UI.Controls.CommandType.WxeFunction" /> is clicked. </summary></member><member name="P:Remotion.Web.UI.Controls.DropDownMenu.CssClassHeadTitle"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.DropDownMenu" />'s title. </summary></member><member name="T:Remotion.Web.UI.Controls.EmailAddressValidator"><summary> Provides client- and server-side e-mail address validation using a regular expression. </summary></member><member name="M:Remotion.Web.UI.Controls.EmailAddressValidator.IsMatchComplete(System.String)"><summary> Tests the passed <paramref name="emailAddress" /> if it is valid. </summary><param name="emailAddress"> The e-mail address to test. </param></member><member name="M:Remotion.Web.UI.Controls.EmailAddressValidator.IsMatchUserPart(System.String)"><summary> 
              Tests the passed <paramref name="userPart" /> against <see cref="P:Remotion.Web.UI.Controls.EmailAddressValidator.ValidationExpressionUserPart" /> expression.
            </summary><param name="userPart"> The user part (i.e. the part before the @) of the e-mail address. </param></member><member name="M:Remotion.Web.UI.Controls.EmailAddressValidator.IsMatchDomainPart(System.String)"><summary> 
              Tests the passed <paramref name="domainPart" /> against <see cref="P:Remotion.Web.UI.Controls.EmailAddressValidator.ValidationExpressionDomainPart" /> expression.
            </summary><param name="domainPart"> The domain part (i.e. the part after the @) of the e-mail address. </param></member><member name="M:Remotion.Web.UI.Controls.EmailAddressValidator.IsMatch(System.String,System.String)"><summary> Tests the <paramref name="text" /> against the <paramref name="expression" />.</summary><param name="text"> The text to be evaluated. </param><param name="expression"> The regular expression to be used. </param></member><member name="P:Remotion.Web.UI.Controls.EmailAddressValidator.ValidationExpressionUserPart"><summary> Gets the validation expression to be used for evaluation of the user part (pre-@). </summary></member><member name="P:Remotion.Web.UI.Controls.EmailAddressValidator.ValidationExpressionDomainPart"><summary> Gets the validation expression to be used for evaluation of the domain part (post-@). </summary></member><member name="P:Remotion.Web.UI.Controls.EmailAddressValidator.EnableTrimming"><summary> 
              Gets or sets a flag that determines whether to ignore leading and trailing whitespaces during validation. 
            </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridLabel"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="T:Remotion.Web.UI.Controls.ISmartControl"><summary>
              This interfaces declares advanced properties and methods for data-aware web controls.
              <seealso cref="T:Remotion.Web.UI.Controls.FormGridManager" />
            </summary></member><member name="M:Remotion.Web.UI.Controls.ISmartControl.CreateValidators"><summary>
              Creates an appropriate validator for this control.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ISmartControl.RegisterHtmlHeadContents(System.Web.HttpContext)"><summary>Regsiteres stylesheet and script files with the <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.</summary></member><member name="P:Remotion.Web.UI.Controls.ISmartControl.IsRequired"><summary>
              Specifies whether the control must be filled out by the user before submitting the form.
            </summary></member><member name="P:Remotion.Web.UI.Controls.ISmartControl.HelpInfo"><summary>
              Gets an instance of the <see cref="P:Remotion.Web.UI.Controls.ISmartControl.HelpInfo" /> type, which contains all information needed for rendering a help-link.
            </summary></member><member name="P:Remotion.Web.UI.Controls.ISmartControl.TargetControl"><summary>
              Gets the input control that can be referenced by HTML tags like &lt;label for=...&gt; using its ClientID.
            </summary></member><member name="P:Remotion.Web.UI.Controls.ISmartControl.UseLabel"><summary>
              If UseLabel is true, it is valid to generate HTML &lt;label&gt; tags referencing <see cref="P:Remotion.Web.UI.Controls.ISmartControl.TargetControl" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.ISmartControl.DisplayName"><summary> Gets the text to be written into the label for this control. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridLabel.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary>
              Can be used instead of <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> controls 
              (to label controls that do not implement ISmartControl).
            </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager"><summary> Transforms one or more tables into form grids. </summary></member><member name="T:Remotion.Web.UI.Globalization.IResourceDispatchTarget"><summary>
              Interface for controls who wish to use automatic resource dispatching
              but implement the dispatching logic themselves.
            </summary></member><member name="M:Remotion.Web.UI.Globalization.IResourceDispatchTarget.Dispatch(System.Collections.IDictionary)"><summary>
              <b>Dispatch</b> is called by the parent control
              and receives the resources as an <b>IDictonary</b>.
            </summary><param name="values">
              An <b>IDictonary</b>: &lt;string key, string value&gt;.
            </param></member><member name="T:Remotion.Web.UI.Controls.ISupportsPostLoadControl"><summary>
              Allows controls to receive a call after the <see cref="E:System.Web.UI.Control.Load" /> event.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ISupportsPostLoadControl.OnPostLoad"><summary>
              This method may be called after the <see cref="E:System.Web.UI.Control.Load" /> event.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_formGridSuffix"><summary> Sufffix for identifying all tables to be used as form grids. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDFormGrids"><summary> View State ID for the form grid view states. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDLabelsColumn"><summary> View State ID for _labelsColumn. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDControlsColumn"><summary> View State ID for _controlsColumn. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDShowValidationMarkers"><summary> View State ID for _showValidationMarkers. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDShowRequiredMarkers"><summary> View State ID for _showRequiredMarkers. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDHelpProviders"><summary> View State ID for _showHelpProviders. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDValidatorVisibility"><summary> View State ID for _validatorVisibility. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.c_viewStateIDFormGridSuffix"><summary> View State ID for _formGridSuffix. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._formGrids"><summary>
              Hashtable&lt;string uniqueID, <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" />&gt;
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._labelsColumn"><summary> Index of the column normally containing the labels. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._controlsColumn"><summary>
              Index of the column normally containing the controls. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._formGridSuffix"><summary>
              Suffix identifying the <c>HtmlTables</c> to be managed by this <c>FormGridManager</c>.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._validatorVisibility"><summary> The cell where the validation message should be written. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._showValidationMarkers"><summary> Enable/Disable the validation markers. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._showRequiredMarkers"><summary> Enable/Disable the required markers. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._showHelpProviders"><summary> Enable/Disable the help providers. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._completedTransformationStep"><summary> 
              State variable for the two part transformation process. 
              Hashtable&lt;FormGrid, TransformationStep completedStep&gt; 
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._cachedFormGridRowProvider"><summary> Caches the <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" /> for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager" />. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._isFormGridRowProviderUndefined"><summary>
              <see langword="true" /> if the control hierarchy doesn't implement <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" />.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager._cachedResourceManager"><summary> Caches the <see cref="T:Remotion.Globalization.ResourceManagerSet" /> for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager" />. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.#ctor"><summary> Simple constructor. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.PrepareValidation"><summary> Prepares all all <c>FormGrid</c> objects managed by this <c>FormGridManager</c> for validation. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Validate"><summary> Validates all <c>FormGrid</c> objects managed by this <c>FormGridManager</c>. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetValidationErrors"><summary>
              Assembles all <see cref="T:Remotion.Web.UI.Controls.ValidationError" /> objects in the managed <c>FormGrids</c>.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Globalization#IResourceDispatchTarget#Dispatch(System.Collections.IDictionary)"><summary> Dispatches the resources passed in <paramref name="values" /> to the control's properties. </summary><param name="values"> An <c>IDictonary</c>: &lt;string key, string value&gt;. </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Dispatch(System.Collections.IDictionary)"><summary> Implementation of <see cref="T:Remotion.Web.UI.Globalization.IResourceDispatchTarget" />. </summary><param name="values">
      A dictonary of keys denoting the properties to be set, and the values to be used.
      The property is described by the full path through the control collection, starting with
      the form grid's ID.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Table_Load(System.Object,System.EventArgs)"><summary>
              Calls <see cref="M:Remotion.Web.UI.Controls.FormGridManager.EnsureTransformationStep(Remotion.Web.UI.Controls.FormGridManager.TransformationStep)" /> with 
              <see cref="F:Remotion.Web.UI.Controls.FormGridManager.TransformationStep.PreLoadViewStateTransformationCompleted" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.OnPostLoad"><summary>
            Optionally called after the <c>Load</c> event.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Table_PreRender(System.Object,System.EventArgs)"><summary>
              Calls <see cref="M:Remotion.Web.UI.Controls.FormGridManager.EnsureTransformationStep(Remotion.Web.UI.Controls.FormGridManager.TransformationStep)" /> with 
              <see cref="F:Remotion.Web.UI.Controls.FormGridManager.TransformationStep.PostValidationTransformationCompleted" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.LoadViewState(System.Object)"><summary> This member overrides <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.SaveViewState"><summary> This member overrides <see cref="M:System.Web.UI.Control.SaveViewState" />. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.LoadFormGridViewState(Remotion.Web.UI.Controls.FormGridManager.FormGrid,System.Object)"><summary> Restore the view state to the form grids. </summary><param name="formGrid">
      The form grid to restore.
    </param><param name="savedState">
      The view state object used for restoring.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.SaveFormGridViewState(Remotion.Web.UI.Controls.FormGridManager.FormGrid)"><summary> Saves the view state of the form grids. </summary><param name="formGrid">
      The form grid to save.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Render(System.Web.UI.HtmlTextWriter)"><summary> This member overrides <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.CreateFormGridRows(System.Web.UI.HtmlControls.HtmlTable,System.Int32,System.Int32)"><summary> Analyzes the table layout and creates the appropriate <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> isntances. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ValidateFormGrid(Remotion.Web.UI.Controls.FormGridManager.FormGrid)"><summary> Validates all <see cref="T:System.Web.UI.WebControls.BaseValidator" /> objects in the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" />. </summary><param name="formGrid">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" /> to be validated
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ValidateDataRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Validates the <see cref="T:System.Web.UI.WebControls.BaseValidator" /> objects. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> to be validated.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.RegisterValidationErrors(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Creates the appropriate validation marker and <see cref="T:Remotion.Web.UI.Controls.ValidationError" /> objects and adds them to the 
              <paramref name="dataRow" />.
            </summary><param name="dataRow"> The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> for which the validation errors will analyzed and registered. </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.LoadNewFormGridRows(Remotion.Web.UI.Controls.FormGridManager.FormGrid)"><summary>
              Queries the parent hierarchy for an <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" /> and inserts 
              the provided new rows into the form grid.
            </summary><param name="formGrid">
      The form grid for which to load the rows. Must not be <see langname="null" />.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ApplyExternalHiddenSettings(Remotion.Web.UI.Controls.FormGridManager.FormGrid)"><summary>
              Queries the parent hierarchy for an <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" /> and hides  
              the rows identified as invisible rows.
            </summary><param name="formGrid">
      The form grid for which to load the rows. Must not be <see langname="null" />.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetFormGridRowProvider(System.Web.UI.Control)"><summary>
              Find the closest parent <see cref="T:System.Web.UI.Control" /> impementing
              <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" />.
            </summary><param name="control">
      The <see cref="T:System.Web.UI.Control" /> where to start searching for <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" />.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetResourceManager"><summary> Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager" />. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ComposeFormGridContents(Remotion.Web.UI.Controls.FormGridManager.FormGrid)"><summary>
              Composes all information required to transform the <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 
              into a form grid.
            </summary><param name="formGrid">
        The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" /> whose contents need to be composeds
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ConfigureFormGrid(Remotion.Web.UI.Controls.FormGridManager.FormGrid)"><summary>
              Uses the information stored in <paramref name="formGrid" /> to configure the 
              <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> as a form grid.
            </summary><param name="formGrid">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" /> to be formatted.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ConfigureTitleRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Configures the title row. </summary><param name="titleRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> used as title row
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ConfigureSubTitleRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Configures a sub title row. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ConfigureUnknownRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Configures the unknown rows. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ConfigureDataRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Configures a data row. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> used as data row.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormatTitleRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Formats the title row. </summary><param name="titleRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> used as title row
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormatSubTitleRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Formats a sub title row. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormatUnknownRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Formats the unknown rows. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormatDataRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow,System.Boolean)"><summary> Formats a data row. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> used as data row.
    </param><param name="isTopDataRow">
      <see langword="true" /> if the <paramref name="mainRow" /> is the first row after the 
      title row.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.AddShowEmptyCellsHack(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Calls <see cref="M:Remotion.Web.UI.Controls.FormGridManager.AddShowEmptyCellHack(System.Web.UI.HtmlControls.HtmlTableCell)" /> for the cells identified by 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary><param name="formGridRow">The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />, must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.CreateMarkersCell(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Creates the cell to be used for the markers. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> for which the marker cell should be created.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.LoadMarkersIntoCell(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Loads the markers or place holders into the <see cref="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.MarkersCell" /> 
              of the <paramref name="dataRow" />.
            </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> for which the marker cell should be created.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ApplyValidatorSettings(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Applies the <c>FormGridManager</c>'s validator settings to all objects of 
              type <see cref="T:System.Web.UI.WebControls.BaseValidator" /> inside the <paramref name="dataRow" />.
            </summary><param name="dataRow"> The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> containing the validators to be overridden. </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.CreateLabels(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Creates the labels from the controls inside <paramref name="controlsCell" />
              if they do not already exist.
            </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> for which the lables will be created.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.CreateValidators(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Creates the validators from the controls inside <paramref name="dataRow" /> if they do not already exist.
            </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> for which the validators will be created.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.CreateRequiredMarker(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Queries the controls in <paramref name="dataRow" /> for their mandatory setting 
              and creates the required marker if necessary.
            </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> to check for controls requiring input.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.CreateHelpProvider(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Queries the controls in <paramref name="dataRow" /> if they provide help
              and creates a help provider.
            </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> for which the validators will be created.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.HandleReadOnlyControls(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Queries the control for its read-only setting and transforms it if necessary. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> to be checked for read-only controls.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.SetOrCreateValidationMessagesCell(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> 
              Sets the cell to be used for the validation messages, creating a new cell if necessary.
            </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> containing the future validation message cell.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.LoadValidationMessagesIntoCell(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Outputs the validation messages into a <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> containing the validation messages.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.AssignCssClassesToCells(Remotion.Web.UI.Controls.FormGridManager.FormGridRow,System.Boolean)"><summary> Assign CSS classes for cells where none exist. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> containing the cells to get CSS classes assigned.
    </param><param name="isTopDataRow">
      <see langword="true" /> if the <paramref name="mainRow" /> is the first row after the 
      title row.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.AssignCssClassesToInputControls(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Assign CSS classes to input controls where none exist. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> containing the input controls to get CSS classes assigned.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.AssignCssClassesToValidators(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary> Assign CSS classes to validators where none exist. </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> containing the input controls to get CSS classes assigned.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.AssignCssClassToCell(System.Web.UI.HtmlControls.HtmlTableCell,System.String)"><summary>
              Tests for an empty <c>class</c> attribute and assigns the <paramref name="cssClass" /> 
              if empty.
            </summary><param name="cell"> The <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> to be used. </param><param name="cssClass"> The <c>CSS-class</c> to assign. </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.AddShowEmptyCellHack(System.Web.UI.HtmlControls.HtmlTableCell)"><summary>
              Adds a white space to the <paramref name="cell" /> to force show the cell in the browser.
            </summary><param name="cell"> The <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> to be made visible. </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetImageUrl(Remotion.Web.UI.Controls.FormGridManager.FormGridImage)"><summary> Returns the image URL for the images defined in the <c>FormGridManager</c>. </summary><param name="image">
      The image whose URL should be returned.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetRequiredMarker"><summary> Builds the input required marker. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetHelpProvider(Remotion.Web.UI.Controls.HelpInfo)"><summary> Builds the help provider. </summary><param name="helpInfo"> 
      The <see cref="T:Remotion.Web.UI.Controls.HelpInfo" /> object used to generate the hyperlink.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetValidationMarker(System.String)"><summary> Builds a new marker for validation errors. </summary><param name="toolTip"> 
      The tool tip to be displayed upon hovering over the marker.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.GetBlankMarker"><summary> Returns a spacer to be used instead of a marker. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.CheckFormGridRowType(System.String,Remotion.Web.UI.Controls.FormGridManager.FormGridRow,Remotion.Web.UI.Controls.FormGridManager.FormGridRowType)"><summary>
              Compares the <paramref name="formGridRow" />'s <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType" /> against the 
              type passed in <paramref name="expectedFormGridRowType" />.
            </summary><param name="argumentName">
      The display name of <paramref name="formGridRow" />
    </param><param name="formGridRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> to be checked.
    </param><param name="expectedFormGridRowType">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType" /> wanted.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.HasSeperateControlsRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow)"><summary>
              Tests the labels matches the controls row.
            </summary><param name="dataRow">
      The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> to check.
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.PopulateFormGridList(System.Web.UI.Control)"><summary> Registers all suffixed tables for this <c>FormGridManager</c>. </summary><param name="control">
      Parent element of the HtmlTable objects
    </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary> Transforms one or more tables into form grids. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary> Transforms one or more tables into form grids. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridSuffix"><summary> The suffix identifying all tables managed by this <c>FormGridManager</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.LabelsColumn"><summary>
              Specifies which column in the table or tables contains the labels.
              Must be less than the value of <see cref="P:Remotion.Web.UI.Controls.FormGridManager.ControlsColumn" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.ControlsColumn"><summary>
              Specifies which column in the table or tables contains the controls for single-line rows.
              Must be higher than the value of <see cref="P:Remotion.Web.UI.Controls.FormGridManager.LabelsColumn" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.ValidatorVisibility"><summary> Defines how the validation messages are displayed. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.ShowValidationMarkers"><summary> Enables/Disables the validation markers. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.ShowRequiredMarkers"><summary> Enables/Disables the required markers. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.ShowHelpProviders"><summary> Enables/Disables the help providers. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.HasMarkersColumn"><summary> Returns <see langname="true" /> if the markers column is needed. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.HasValidationMessageColumn"><summary>
              Returns <see langname="true" /> if the validation messages are shown in an extra column.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.ImageExtension"><summary> Extension of the images. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassTable"><summary> CSS-Class applied to the form grid tables' <c>table</c> tag. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassTitleCell"><summary> CSS-Class applied to the cell containing the header. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassSubTitleCell"><summary> CSS-Class applied to the cell containing a sub title. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassLabelsCell"><summary> CSS-Class applied to the cells containing the labels. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassMarkersCell"><summary>
              CSS-Class applied to the cells containing the marker controls
              (required, validation error, help).
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassInputControlsCell"><summary> CSS-Class applied to the cells containing the input controls. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassValidationMessagesCell"><summary> CSS-Class applied to the cells containing the validation messages. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassTopDataRow"><summary> CSS-Class additionally applied to the first row after the header row. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassInputControl"><summary> CSS-Class applied to the input controls. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassValidationMessage"><summary> CSS-Class applied to the individual validation messages. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.CssClassValidator"><summary> CSS-Class applied to the validators vreated by the <see cref="T:Remotion.Web.UI.Controls.FormGridManager" />. </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager.FormGridImage"><summary> A list of possible images/icons displayed in the Form Grid. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridImage.Spacer"><summary> A blank image to be used as a spacer. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridImage.RequiredField"><summary> Used for field's with a mandatory input. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridImage.Help"><summary> Used to indicate a help link. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridImage.ValidationError"><summary> Used if an entered value does not validate. </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager.ResourceIdentifier"><summary> A list of form grid manager wide resources. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.ResourceIdentifier.RequiredFieldAlternateText"><summary>The alternate text for the required icon.</summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.ResourceIdentifier.HelpAlternateText"><summary>The alternate text for the help icon.</summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.ResourceIdentifier.ValidationErrorInfoAlternateText"><summary>The alternate text for the validation error icon.</summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.ResourceIdentifier.RequiredFieldTitle"><summary>The tool tip text for the required icon.</summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.ResourceIdentifier.HelpTitle"><summary>The tool tip text for the help icon.</summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid"><summary>
              Wrapper class for a single HtmlTable plus the additional information
              added through the <see cref="T:Remotion.Web.UI.Controls.FormGridManager" />.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGrid._table"><summary> The <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> used as a base for the form grid. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGrid._rows"><summary> The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> collection for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" />. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGrid._defaultLabelsColumn"><summary> The column normally containing the labels. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGrid._defaultControlsColumn"><summary> The column normally containing the controls. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.#ctor(System.Web.UI.HtmlControls.HtmlTable,Remotion.Web.UI.Controls.FormGridManager.FormGridRow[],System.Int32,System.Int32)"><summary> 
              Initializes a new isntance of the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" /> class with the 
              <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> used as a form grid, the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> array 
              and the indeces of the columns normally containing the labels and the controls.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.GetValidationErrors"><summary>
              Returns all <see cref="T:Remotion.Web.UI.Controls.ValidationError" /> objects defined in the 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects collection.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.HasValidationErrors"><summary>
              Searches through the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects collection for a validation error.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.HasValidationMarkers"><summary>
              Searches through the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects collection for a validation markers.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.HasRequiredMarkers"><summary>
              Searches through the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects collection for a required markers.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.HasHelpProviders"><summary> Searches through the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects collection for a help providers. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.BuildIDCollection"><summary> Build the ID collection for this form grid. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.GetRowForID(System.String)"><summary>
              Searches for a <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> containing the specified <paramref name="ID" />.
            </summary><param name="id">
        The control ID to find the row for.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGrid.InsertNewFormGridRow(Remotion.Web.UI.Controls.FormGridManager.FormGridRow,System.String,Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition)"><summary>
              Inserts a <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> at the position specified by 
              <paramref name="positionInFormGrid" /> and <paramref name="relatedRowID" />.
            </summary><param name="newFormGridRow">
        The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> to insert.
      </param><param name="relatedRowID">
        The ID of the row used to find the insert position.
        </param><param name="positionInFormGrid">
        Specifies where to insert the row in relation to <paramref name="relatedRowID" />
      </param></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGrid.Table"><summary> The <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> used as base for the form grid. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGrid.Rows"><summary> The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRowCollection" /> for this <c>FormGrid</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGrid.DefaultLabelsColumn"><summary> Gets or sets the index of the column used for labels. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGrid.DefaultControlsColumn"><summary> Gets or sets the index of the column used for controls. </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRowCollection"><summary> A collection of <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRowCollection._ownerFormGrid"><summary> The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" /> to which this collection belongs to. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRowCollection.#ctor(Remotion.Web.UI.Controls.FormGridManager.FormGrid,Remotion.Web.UI.Controls.FormGridManager.FormGridRow[])"><summary> Simple constructor. </summary><param name="ownerFormGrid">
        The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGrid" /> to which this collection belongs to.
      </param><param name="formGridRows">
        The array of <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> object to be managed by this collection.
        May not contain null references.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRowCollection.OnInsert(System.Int32,System.Object)"><summary> Allows only the insertion of objects of type of <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary><param name="index">
        The zero-based index at which to insert value.
      </param><param name="value">
        The new value of the element at index.
      </param></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRowCollection.Item(System.Int32)"><summary> A read only indexer for the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects. </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow"><summary>
              Wrapper class for one or more <see cref="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.HtmlTableRows" /> forming a logical row in the 
              <see cref="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.FormGrid" /> object's base <see cref="T:System.Web.UI.HtmlControls.HtmlTable" />.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._formGrid"><summary> The <see cref="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.FormGrid" /> instance this <c>FormGridRow</c> is a part of. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._htmlTableRows"><summary> The <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> collection for this <c>FormGridRow</c>. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._type"><summary> The type of this <c>FormGridRow</c>. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._visible"><summary> <see langword="true" /> if the row sould be rendered. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._validationErrors"><summary> The <c>ValidationError</c> objects for this <c>FormGridRow</c>. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._validationMarker"><summary> The validation marker for this <c>FormGridRow</c>. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._requiredMarker"><summary>The required marker for this <c>FormGridRow</c>. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._helpProvider"><summary> The help provider for this <c>FormGridRow</c>. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._labelsRowIndex"><summary> The index of the row containing the labels cell. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._controlsRowIndex"><summary> The index of the row containing the controls cell. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._labelsColumn"><summary> The index of the column normally containing the labels cell. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._controlsColumn"><summary> The index of the column normally containing the controls cell. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._labelsCell"><summary> The cell containing the labels. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._controlsCell"><summary> The cell containing the controls. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._controlsCellDummy"><summary>
              The cell used as a place holder if the controls cell is not at the standard position.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._markersCell"><summary> The cell containing the markers. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._validationMessagesCell"><summary> The cell containing the validation messages. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._validationMessagesCellDummy"><summary>
              The cell used as a place holder if the validation message cell is not at the standard
              position.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRow._controls"><summary> The Web.UI.Controls in this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />, using the ID as key. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.#ctor(System.Web.UI.HtmlControls.HtmlTableRow[],Remotion.Web.UI.Controls.FormGridManager.FormGridRowType,System.Int32,System.Int32,System.Boolean)"><summary> Simple contructor. </summary><param name="htmlTableRows">
        The array of <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> objects logically forming this <c>FormGridRow</c>.
        Must not be empty or contain <see langword="null" />
      </param><param name="type">
        The <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType" /> represented by this object.
      </param><param name="labelsColumn">
        The index of the labels column.
      </param><param name="controlsColumn">
        The index of the controls column.
      </param><param name="isGenerated">
        <see langword="true"> if this row has been generated by a <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" />.</see>
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.SetLabelsCell(System.Int32,System.Int32)"><summary> Set the labels cell for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary><param name="rowIndex">
        The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the labels cell.
      </param><param name="cellIndex"> 
        The index of the labels cell in the sepcified <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.SetControlsCell(System.Int32,System.Int32)"><summary> Set the controls cell for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary><param name="rowIndex">
        The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the controls cell.
      </param><param name="cellIndex"> 
        The index of the controls cell in the sepcified <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.SetControlsCellDummy(System.Int32,System.Int32)"><summary> Set the controls cell dummy for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary><param name="rowIndex">
        The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the controls cell dummy cell.
      </param><param name="cellIndex"> 
        The index of the controls cell dummy cell in the sepcified <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.SetMarkersCell(System.Int32,System.Int32)"><summary> Set the markers cell for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary><param name="rowIndex">
      The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the markers cell.
      </param><param name="cellIndex"> 
        The index of the markers cell in the sepcified <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.SetValidationMessagesCell(System.Int32,System.Int32)"><summary> Set the validation messages cell for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary><param name="rowIndex">
        The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the validation messages cell.
      </param><param name="cellIndex"> 
        The index of the validation messages cell in the sepcified <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.SetValidationMessagesCellDummy(System.Int32,System.Int32)"><summary>Set the labels validation messages cell dummy for this <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.</summary><param name="rowIndex">
        The index of the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the validation messages cell dummy.
      </param><param name="cellIndex"> 
        The index of the validation messages cell dummy in the sepcified.
        <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.CheckCellRange(System.Int32,System.Int32)"><summary> Checks if the indices are inside the bounds. </summary><param name="rowIndex">
        The index of row in the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.ReadOnlyHtmlTableRowCollection" />.
      </param><param name="cellIndex">
        The index of the cell in row denoted by <paramref name="rowIndex" />.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.BuildIDCollection"><summary>
              Fills a <see cref="T:System.Collections.Hashtable" /> with the controls contained in this 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />, using their ID as a key.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.GetControlForID(System.String)"><summary> Returns the control with the specified ID or <see langword="null" />. </summary><param name="id">
        The ID to look up.
      </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ContainsControlWithID(System.String)"><summary> 
              Returns <see langword="true" /> if the control with the specified ID is contained 
              in the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary><param name="id">
        The ID to look up. </param></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.CheckVisibility"><summary>
              Checks whether the row should be rendered.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.Hide"><summary>
              Sets the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> and its contained <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> objects
              invisible.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.Show"><summary>
              Sets the <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> and its contained <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> 
              visible.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.FormGrid"><summary>
              The <see cref="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.FormGrid" /> instance of which this <c>FormGridRow</c> is a part of.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.HtmlTableRows"><summary> The <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> collection for this <c>FormGridRow</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.Type"><summary> The type of this <c>FormGridRow</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.Visible"><summary>
              Gets or sets a value indicating whether the contained <see cref="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.HtmlTableRows" />
              should be rendered on as Ui on the page.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.IsGenerated"><summary> Gets a value indicating whether this row has been generated from a <see cref="T:Remotion.Web.UI.Controls.IFormGridRowProvider" />. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ValidationErrors"><summary> The <c>ValidationError</c> objects for this <c>FormGridRow</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ValidationMarker"><summary> The validation marker for this <c>FormGridRow</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.RequiredMarker"><summary> The required marker for this <c>FormGridRow</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.HelpProvider"><summary> The help provider for this <c>FormGridRow</c>. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.LabelsRowIndex"><summary> The index of the row containing the labels cell. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ControlsRowIndex"><summary> The index of the row containing the controls cell. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.LabelsColumn"><summary> The index of the column normally containing the labels cell. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ControlsColumn"><summary> The index of the column normally containing the controls cell. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.LabelsRow"><summary> The <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the labels cell. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ControlsRow"><summary> The <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> containing the controls cell. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.LabelsCell"><summary> The cell containing the labels. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ControlsCell"><summary> The cell containing the controls. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ControlsCellDummy"><summary>
              The cell used as a place holder if the controls cell is not at the standard position.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.MarkersCell"><summary> The cell containing the markers. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ValidationMessagesCell"><summary> The cell containing the validation messages. </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.FormGridRow.ValidationMessagesCellDummy"><summary>
              The cell used as a place holder if the validation message cell is not at the standard
              position.
            </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager.ReadOnlyHtmlTableRowCollection"><summary> A read only collection of <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> objects. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridManager.ReadOnlyHtmlTableRowCollection.#ctor(System.Web.UI.HtmlControls.HtmlTableRow[])"><summary> Simple constructor. </summary><param name="htmlTableRows">
        The array of <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> object to be managed by this collection.
        May not contain null references.
      </param></member><member name="P:Remotion.Web.UI.Controls.FormGridManager.ReadOnlyHtmlTableRowCollection.Item(System.Int32)"><summary> A read only indexer for the <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> onbjects. </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType"><summary> The row types possible for a <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType.TitleRow"><summary> The row containing the form grid's title. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType.SubTitleRow"><summary> The row containing the form grid's title. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType.DataRow"><summary> A row containing labels, controls and validators. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridManager.FormGridRowType.UnknownRow"><summary> A row that can not be identified as one of the other types. </summary></member><member name="T:Remotion.Web.UI.Controls.ValidatorVisibility"><summary> Defiens how the validators are displayed in the FormGrid. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidatorVisibility.HideValidators"><summary> Don't display the validation messages. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidatorVisibility.ShowValidators"><summary> Leave displaying the validation messages to the individual validation controls. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidatorVisibility.ValidationMessageInControlsColumn"><summary>
              Display the validation message in the same cell as as the invalid control's.
              Default implementation display each message inside it own <c>div</c>-tag.
            </summary></member><member name="F:Remotion.Web.UI.Controls.ValidatorVisibility.ValidationMessageAfterControlsColumn"><summary>
              Display the validation message in a new cell inserted after the invalid control's cell.
              Default implementation display each message inside it own <c>div</c>-tag.
            </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridRowInfo"><summary>
              The information for the automatic creation of a new <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. 
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo._control"><summary> The control to the inserted into the row. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo._newRowType"><summary>
              The <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowType" /> for the new <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo._positionInFormGrid"><summary>
              The <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition" /> for inserting the new 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo._releatedRowID"><summary>
              The row used as a point of reference for inserting the new 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridRowInfo.#ctor(System.Web.UI.Control,Remotion.Web.UI.Controls.FormGridRowInfo.RowType,System.String,Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition)"><summary> 
              Initiliazes a new instance of the <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo" /> class with all 
              required information.
            </summary><param name="control"> The control to the inserted into the row. </param><param name="newRowType">
              The <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowType" /> for the new <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </param><param name="relatedRowID">
              The row used as a point of reference for inserting the new 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </param><param name="positionInFormGrid">
              The <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition" /> for inserting the new 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </param></member><member name="P:Remotion.Web.UI.Controls.FormGridRowInfo.Control"><summary> Gets the control to the inserted into the row.  </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridRowInfo.NewRowType"><summary>
              Gets the <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowType" /> for the new <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridRowInfo.ReleatedRowID"><summary> 
              Gets the row used as a point of reference when inserting the new 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.FormGridRowInfo.PositionInFormGrid"><summary> 
              Gets the <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition" /> for inserting the new 
              <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition"><summary> The possible positions for inserting the new row relative to a given ID. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition.BeforeRowWithID"><summary> Place the row before the row containing the ID. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo.RowPosition.AfterRowWithID"><summary> Place the row after the row containing the ID. </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridRowInfo.RowType"><summary> The possible layouts for the new <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" />. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo.RowType.ControlInRowWithLabel"><summary> Label and Control will be placed into the same row. </summary></member><member name="F:Remotion.Web.UI.Controls.FormGridRowInfo.RowType.ControlInRowAfterLabel"><summary> The Control will be placed in a seperat row, following the Label's row. </summary></member><member name="T:Remotion.Web.UI.Controls.FormGridRowInfoCollection"><summary> A read only collection of <see cref="T:Remotion.Web.UI.Controls.FormGridManager.FormGridRow" /> objects. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridRowInfoCollection.#ctor(Remotion.Web.UI.Controls.FormGridRowInfo[])"><summary> 
              Initalizates a new <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfoCollection" /> class
              with an array of <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo" /> objects.
            </summary><param name="values">
              The array of <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo" /> object to be managed by this collection.
              May not contain <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.FormGridRowInfoCollection.#ctor"><summary> Initalizates a new <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfoCollection" /> class. </summary></member><member name="M:Remotion.Web.UI.Controls.FormGridRowInfoCollection.OnInsert(System.Int32,System.Object)"><summary> Allows only the insertion of form grid row prototypes. </summary><param name="index"> The zero-based index at which to insert value. </param><param name="value"> The new value of the element at index. </param></member><member name="M:Remotion.Web.UI.Controls.FormGridRowInfoCollection.Add(Remotion.Web.UI.Controls.FormGridRowInfo)"><summary> Adds the form grid row prototype to the end of the list. </summary><param name="value"> The new form grid row prototype. </param></member><member name="T:Remotion.Web.UI.Controls.HelpInfo"><summary>
            The <see cref="T:Remotion.Web.UI.Controls.HelpInfo" /> type is used to group all information required for displaying a help-link in a form-grid.
            </summary></member><member name="M:Remotion.Web.UI.Controls.HelpInfo.#ctor(System.String)"><summary>
            Initializes a new instance of the <see cref="T:Remotion.Web.UI.Controls.HelpInfo" /> type.
            </summary><param name="navigateUrl">The URL assigned to the hyperlinks <c>href</c>-attribute. Must not be <see langword="null" /> or empty.</param></member><member name="M:Remotion.Web.UI.Controls.HelpInfo.#ctor(System.String,System.String,System.String,System.String)"><summary>
            Initializes a new instance of the <see cref="T:Remotion.Web.UI.Controls.HelpInfo" /> type.
            </summary><param name="navigateUrl">The URL assigned to the hyperlinks <c>href</c>-attribute. Must not be <see langword="null" /> or empty.</param><param name="target">The target for the <paramref name="navigateUrl" />.</param><param name="toolTip">The tool-tip to be displayed when hovering over the help-link.</param><param name="onClick">The javascript to be executed for the <c>OnClick</c> event on the client.</param></member><member name="P:Remotion.Web.UI.Controls.HelpInfo.NavigateUrl"><summary>
            Gets the URL to be rendered. Use the <c>~/</c> notation to specify an URL relative to the application-root.
            </summary></member><member name="P:Remotion.Web.UI.Controls.HelpInfo.Target"><summary>
            Gets the target for the <see cref="P:Remotion.Web.UI.Controls.HelpInfo.NavigateUrl" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.HelpInfo.OnClick"><summary>
            Gets the javascript to be executed for the <c>OnClick</c> event on the client.
            </summary></member><member name="P:Remotion.Web.UI.Controls.HelpInfo.ToolTip"><summary>
            Gets the tool-tip to be displayed when hovering over the help-link.
            </summary></member><member name="T:Remotion.Web.UI.Controls.HtmlHeadContents"><summary>
              When added to the webform (inside the head element), the <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> 
              control renderes the controls registered with <see cref="T:Remotion.Web.UI.HtmlHeadAppender" />.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IEditableControl.IsDirty"><summary>
              Specifies whether the value of the control has been changed on the Client since the last load/save operation.
            </summary></member><member name="P:Remotion.Web.UI.Controls.IFocusableControl.FocusID"><summary> Gets the ID of the element to receive the focus when the page is loaded. </summary></member><member name="T:Remotion.Web.UI.Controls.IFormGridRowProvider"><summary>
              Interface for allowing the <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> to query its parent page
              for rows to be inserted and rows to be hidden.
            </summary></member><member name="M:Remotion.Web.UI.Controls.IFormGridRowProvider.GetHiddenRows(System.Web.UI.HtmlControls.HtmlTable)"><summary>
              Returns a list of IDs identifying the rows to be hidden in a form grid.
            </summary><param name="table"> The <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> whose rows will be hidden. </param></member><member name="M:Remotion.Web.UI.Controls.IFormGridRowProvider.GetAdditionalRows(System.Web.UI.HtmlControls.HtmlTable)"><summary>
              Returns a list of <see cref="T:Remotion.Web.UI.Controls.FormGridRowInfo" /> objects used to constrtuct and then 
              insert new rows into a form grid.
            </summary><param name="table"> The <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> into which the new rows will be inserted. </param></member><member name="T:Remotion.Web.UI.Controls.INavigationControl"><summary>
              This interface declares the methods required by controls used for navigating between individual pages of a
              web application.
            </summary></member><member name="M:Remotion.Web.UI.Controls.INavigationControl.GetNavigationUrlParameters"><summary> 
              Provides the URL parameters containing the navigation information for this control (e.g. the selected tab).
            </summary></member><member name="T:Remotion.Web.UI.Controls.IValidatableControl"><summary>
              Provides the ability to register validators with their target control and call validate on the web controls themselves.
            </summary></member><member name="M:Remotion.Web.UI.Controls.IValidatableControl.RegisterValidator(System.Web.UI.WebControls.BaseValidator)"><summary>
              Registers a validator that references this control.
            </summary></member><member name="M:Remotion.Web.UI.Controls.IValidatableControl.Validate"><summary>
              Calls <see cref="M:System.Web.UI.WebControls.BaseValidator.Validate" /> on all registered validators.
            </summary></member><member name="T:Remotion.Web.UI.Controls.ValidatableControlInitializer"><summary>
              Initializes validators for <see cref="T:Remotion.Web.UI.Controls.IValidatableControl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidatableControlInitializer.InitializeValidatableControls(System.Web.UI.Page)"><summary>
              Registers validators with their <see cref="T:Remotion.Web.UI.Controls.IValidatableControl" /> web controls.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidatableControlInitializer.#ctor(System.Web.UI.Page)"><summary>
              Creates a new initializer for <c>page</c> and all sub-controls.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidatableControlInitializer.EnsureValidatableControlsInitialized"><summary>
              When called the first time, registers validators with their controls. Call this method before validating.
            </summary></member><member name="P:Remotion.Web.UI.Controls.LengthValidator.MinimumLength"><summary> The minimum number of characters allowed. </summary></member><member name="P:Remotion.Web.UI.Controls.LengthValidator.MaximumLength"><summary> The maximum number of characters allowed. </summary></member><member name="F:Remotion.Web.UI.Controls.WebTab._ownerControl"><summary> The control to which this object belongs. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.#ctor(System.String,System.String,Remotion.Web.UI.Controls.IconInfo)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.#ctor(System.String,System.String,System.String)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.#ctor(System.String,System.String)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.#ctor"><summary> Initalizes a new instance. For VS.NET Designer use only. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.OnOwnerControlChanged"><summary> Is called when the value of <see cref="P:Remotion.Web.UI.Controls.WebTab.OwnerControl" /> has changed. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.PreRender"><summary> Is called when the <see cref="P:Remotion.Web.UI.Controls.WebTab.OwnerControl" /> is Pre-Rendered. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.SetTabStrip(Remotion.Web.UI.Controls.WebTabStrip)"><summary> Sets this tab's <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTab.SetSelected(System.Boolean)"><summary> Sets the tab's selection state. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTab.ItemID"><summary> Gets or sets the ID of this tab. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTab.Text"><summary> Gets or sets the text displayed in this tab. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTab.Icon"><summary> Gets or sets the icon displayed in this tab. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTab.TabStrip"><summary> Gets the <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" /> to which this tab belongs. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTab.IsSelected"><summary> Gets or sets a flag that determines whether this node is the selected node of the tree view. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTab.DisplayedTypeName"><summary> Gets the human readable name of this type. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTab.OwnerControl"><summary> Gets or sets the control to which this object belongs. </summary></member><member name="F:Remotion.Web.UI.Controls.MenuTab._renderingCommand"><summary> The command being rendered by this menu item. </summary></member><member name="M:Remotion.Web.UI.Controls.MenuTab.ResetCommand"><summary> Sets the <see cref="P:Remotion.Web.UI.Controls.MenuTab.Command" /> to its default value. </summary></member><member name="M:Remotion.Web.UI.Controls.MenuTab.ShouldSerializePersistedCommand"><summary> Controls the persisting of the <see cref="P:Remotion.Web.UI.Controls.MenuTab.Command" />. </summary></member><member name="P:Remotion.Web.UI.Controls.MenuTab.Command"><summary> Gets or sets the <see cref="T:Remotion.Web.UI.Controls.NavigationCommand" /> rendered for this menu item. </summary></member><member name="M:Remotion.Web.UI.Controls.MainMenuTab.#ctor"><summary> Initalizes a new instance. For VS.NET Designer use only. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabCollection.#ctor(System.Web.UI.Control,System.Type[])"><summary> Initializes a new instance. </summary><param name="ownerControl"> Owner control. </param><param name="supportedTypes">
              Supported types must either be <see cref="T:Remotion.Web.UI.Controls.WebTab" /> or derived from <see cref="T:Remotion.Web.UI.Controls.WebTab" />. 
              Must not be <see langword="null" /> or contain items that are <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.WebTabCollection.#ctor(System.Web.UI.Control)"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabCollection.DeselectTab(Remotion.Web.UI.Controls.WebTab,System.Int32)"><summary> Deselects a <see cref="T:Remotion.Web.UI.Controls.WebTab" /> whose position in the list is still occupied. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabCollection.Find(System.String)"><summary>
              Finds the <see cref="T:Remotion.Web.UI.Controls.WebTab" /> with a <see cref="P:Remotion.Web.UI.Controls.WebTab.ItemID" /> of <paramref name="id" />.
            </summary><param name="id"> The ID to look for. </param></member><member name="M:Remotion.Web.UI.Controls.MainMenuTabCollection.#ctor(System.Web.UI.Control,System.Type[])"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.MainMenuTabCollection.#ctor(System.Web.UI.Control)"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.SubMenuTabCollection.#ctor(System.Web.UI.Control,System.Type[])"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.SubMenuTabCollection.#ctor(System.Web.UI.Control)"><summary> Initializes a new instance. </summary></member><member name="T:Remotion.Web.UI.Controls.NavigationCommand"><summary> A <see cref="T:Remotion.Web.UI.Controls.NavigationCommand" /> defines an action the user can invoke when navigating between pages. </summary></member><member name="M:Remotion.Web.UI.Controls.NavigationCommand.AddAttributesToRenderForWxeFunctionCommand(System.Web.UI.HtmlTextWriter,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)"><summary> Adds the attributes for the Wxe Function command to the anchor tag. </summary><param name="writer"> The <see cref="T:System.Web.UI.HtmlTextWriter" /> object to use. Must not be <see langword="null" />. </param><param name="postBackEvent">
              The string executed upon the click on a command of types
              <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" /> or <see cref="F:Remotion.Web.UI.Controls.CommandType.WxeFunction" />.
              This string is usually the call to the <c>__doPostBack</c> script function used by ASP.net
              to force a post back. Must not be <see langword="null" />.
            </param><param name="onClick"> 
              The string always rendered in the <c>onClick</c> tag of the anchor element. 
            </param><param name="additionalUrlParameters">
              The <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing additional url parameters.
              Must not be <see langword="null" />.
            </param><param name="includeNavigationUrlParameters"> 
              <see langword="true" /> to include URL parameters provided by <see cref="T:Remotion.Web.UI.ISmartNavigablePage" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.NavigationCommand.GetWxeFunctionPermanentUrl(System.Collections.Specialized.NameValueCollection)"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> defined by the 
              <see cref="T:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo" />.
            </summary><param name="additionalUrlParameters">
              The <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing additional url parameters. 
              Must not be <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.NavigationCommand.GetWxeFunctionPermanentUrl"><summary> 
              Gets the permanent URL for the <see cref="T:Remotion.Web.ExecutionEngine.WxeFunction" /> defined by the 
              <see cref="T:Remotion.Web.UI.Controls.Command.WxeFunctionCommandInfo" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.NumericValidator"><summary> Summary validates the text for a valid numeric value. </summary></member><member name="P:Remotion.Web.UI.Controls.NumericValidator.DataType"><summary> Gets or sets the data type to be tested. </summary></member><member name="P:Remotion.Web.UI.Controls.NumericValidator.AllowNegative"><summary> Gets or sets a value that determines whether negative values are allowed. </summary></member><member name="P:Remotion.Web.UI.Controls.NumericValidator.NumberStyle"><summary> Gets or sets the allowed <see cref="T:System.Globalization.NumberStyles" /> of the value to be tested. </summary></member><member name="M:Remotion.Web.UI.Controls.SingleControlItemCollection.#ctor(Remotion.Web.UI.Controls.IControlItem,System.Type[])"><summary> Creates a new instance. </summary><param name="controlItem">The <see cref="T:Remotion.Web.UI.Controls.IControlItem" /> to be stored in this instance.</param><param name="supportedTypes"> Supported types must implement <see cref="T:Remotion.Web.UI.Controls.IControlItem" />. </param></member><member name="M:Remotion.Web.UI.Controls.SingleControlItemCollection.IsSupportedType(Remotion.Web.UI.Controls.IControlItem)"><summary>Tests whether the specified control item's type is supported by the collection. </summary></member><member name="M:Remotion.Web.UI.Controls.SingleControlItemCollection.Add(Remotion.Web.UI.Controls.IControlItem)"><summary> For Designer Support. (VS2003, VS2005) </summary></member><member name="P:Remotion.Web.UI.Controls.SingleControlItemCollection.Item(System.Int32)"><summary> For Designer Support. (VS2003, VS2005) </summary></member><member name="P:Remotion.Web.UI.Controls.SingleView.CssClassBase"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.SingleView" />. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleView.CssClassView"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.SingleView" />'s active view. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleView.CssClassTopControls"><summary> Gets the CSS-Class applied to the top section. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleView.CssClassBottomControls"><summary> Gets the CSS-Class applied to the bottom section. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleView.CssClassViewBody"><summary> Gets the CSS-Class applied to a <c>div</c> wrapping the content and the border elements. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleView.CssClassContent"><summary> Gets the CSS-Class applied to a <c>div</c> intended for formatting the content. </summary></member><member name="P:Remotion.Web.UI.Controls.SingleView.CssClassEmpty"><summary> Gets the CSS-Class applied when the section is empty. </summary></member><member name="T:Remotion.Web.UI.Controls.SmartHyperLink"><summary>
              A <see cref="T:System.Web.UI.WebControls.HyperLink" /> that provides integration into the <see cref="T:Remotion.Web.UI.ISmartNavigablePage" /> framework by
              automatically appending the navigation URL parameters to the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartHyperLink.AddAttributesToRender(System.Web.UI.HtmlTextWriter)"><summary> 
              Uses <see cref="M:Remotion.Web.UI.ISmartNavigablePage.AppendNavigationUrlParameters(System.String)" /> to include the navigation URL parameters
              with the rendered <see cref="P:System.Web.UI.WebControls.HyperLink.NavigateUrl" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SmartLabel.FormatLabelText(System.String,System.Boolean,System.String@)"><summary>
              Formats the string to support an access key:
              Looks for an ampersand and optionally highlights the next letter with &lt;u&gt;&lt;/u&gt;.
            </summary></member><member name="P:Remotion.Web.UI.Controls.SmartLabel.ForControl"><summary>
              The ID of the control to display a label for.
            </summary></member><member name="P:Remotion.Web.UI.Controls.SmartLabel.Text"><summary>
              Gets or sets the text displayed if the <see cref="T:Remotion.Web.UI.Controls.SmartLabel" /> is not bound to an 
              <see cref="T:Remotion.Web.UI.Controls.ISmartControl" /> or the <see cref="T:Remotion.Web.UI.Controls.ISmartControl" /> does provide a 
              <see cref="P:Remotion.Web.UI.Controls.ISmartControl.DisplayName" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.SubMenuTab.#ctor"><summary> Initalizes a new instance. For VS.NET Designer use only. </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMenu"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.OnInit(System.EventArgs)"><summary> Overrides the <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> method. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.CreateChildControls"><summary> Overrides the <see cref="M:System.Web.UI.Control.CreateChildControls" /> method. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.EnsureSubMenuTabStripPopulated"><summary> Ensures that the <see cref="P:Remotion.Web.UI.Controls.TabbedMenu.SubMenuTabStrip" /> is populated with the tabs from the selected 
              <see cref="T:Remotion.Web.UI.Controls.MainMenuTab" />'s <see cref="P:Remotion.Web.UI.Controls.MainMenuTab.SubMenuTabs" />. 
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.RefreshSubMenuTabStrip"><summary> 
              Refreshes the <see cref="P:Remotion.Web.UI.Controls.TabbedMenu.SubMenuTabStrip" /> with the tabs from the selected <see cref="T:Remotion.Web.UI.Controls.MainMenuTab" />'s
              <see cref="P:Remotion.Web.UI.Controls.MainMenuTab.SubMenuTabs" />. 
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.PopulateSubMenuTabStrip"><summary> 
              Populates the <see cref="P:Remotion.Web.UI.Controls.TabbedMenu.SubMenuTabStrip" /> with the tabs from the selected <see cref="T:Remotion.Web.UI.Controls.MainMenuTab" />'s
              <see cref="P:Remotion.Web.UI.Controls.MainMenuTab.SubMenuTabs" />. 
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.OnPreRender(System.EventArgs)"><summary> Overrides the <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> method. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)"><summary> Overrides the <see cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> method. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.EvaluateWaiConformity"><summary> Checks whether the control conforms to the required WAI level. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.RenderContents(System.Web.UI.HtmlTextWriter)"><summary> Overrides the <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" /> method. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.ConvertTabIDsToArray(Remotion.Web.UI.Controls.MainMenuTab,Remotion.Web.UI.Controls.SubMenuTab)"><summary> 
              Creates a string array from the IDs of the provided <paramref name="mainMenuTab" /> and 
              <paramref name="subMenuTab" />.
            </summary><param name="mainMenuTab"> 
              The <see cref="T:Remotion.Web.UI.Controls.MainMenuTab" />. If <see langword="null" />, an empty array will be returned.
            </param><param name="subMenuTab"> The <see cref="T:Remotion.Web.UI.Controls.SubMenuTab" />. </param></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.LoadSelection"><summary> Loads the selected tabs from the window state or the query string. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.GetSelectionFromQueryString"><summary> Gets the IDs of the tabs to be selected from the query string. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.GetSelectionFromWindowState"><summary> Gets the IDs of the tabs to be selected from the <see cref="T:Remotion.Web.UI.IWindowStateManager" />. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.SaveSelection"><summary> Saves the selected tabs into the window state. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#INavigationControl#GetNavigationUrlParameters"><summary> 
              Provides the URL parameters containing the navigation information for this control (e.g. the selected tab).
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.GetUrlParameters(Remotion.Web.UI.Controls.MenuTab)"><summary> Gets the parameters required for selecting the <paramref name="menuTab" />. </summary><param name="menuTab"> 
              The <see cref="T:Remotion.Web.UI.Controls.MenuTab" /> that should be selected by the when using the returned URL parameters. 
              Must not be <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.FormatUrl(System.String)"><summary> 
              Adds parameters required for re-selecting the currently selected <see cref="T:Remotion.Web.UI.Controls.MenuTab" /> to the 
              <paramref name="url" />. 
            </summary><param name="url"> The URL. Must not be <see langword="null" /> or empty. </param></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.FormatUrl(System.String,Remotion.Web.UI.Controls.MenuTab)"><summary> 
              Adds the parameters required for selecting the <paramref name="menuTab" /> to the <paramref name="url" />.
            </summary><param name="url"> The URL. Must not be <see langword="null" /> or empty. </param><param name="menuTab"> 
              The <see cref="T:Remotion.Web.UI.Controls.MenuTab" /> that should be selected by the <paramref name="url" />. 
              Must not be <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.MainMenuTabStrip_Click(System.Object,Remotion.Web.UI.Controls.WebTabClickEventArgs)"><summary> 
              Event handler for the <see cref="E:Remotion.Web.UI.Controls.WebTabStrip.Click" /> of the <see cref="P:Remotion.Web.UI.Controls.TabbedMenu.MainMenuTabStrip" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.SubMenuTabStrip_Click(System.Object,Remotion.Web.UI.Controls.WebTabClickEventArgs)"><summary> 
              Event handler for the <see cref="E:Remotion.Web.UI.Controls.WebTabStrip.Click" /> of the <see cref="P:Remotion.Web.UI.Controls.TabbedMenu.SubMenuTabStrip" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.HandleTabStripClick(Remotion.Web.UI.Controls.MenuTab)"><summary> 
              Handles the click events of the <see cref="P:Remotion.Web.UI.Controls.TabbedMenu.MainMenuTabStrip" /> and the <see cref="P:Remotion.Web.UI.Controls.TabbedMenu.SubMenuTabStrip" />.
            </summary><param name="tab"> The <see cref="T:Remotion.Web.UI.Controls.MenuTab" /> whose command was clicked. </param></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.OnEventCommandClick(Remotion.Web.UI.Controls.MenuTab)"><summary> Fires the <see cref="E:Remotion.Web.UI.Controls.TabbedMenu.EventCommandClick" /> event. </summary><param name="tab"> The <see cref="T:Remotion.Web.UI.Controls.MenuTab" /> whose command was clicked. </param></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.GetResourceManager"><summary> Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this control. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.GetResourceManager(System.Type)"><summary> Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this control. </summary><param name="localResourcesType"> 
              A type with the <see cref="T:Remotion.Globalization.MultiLingualResourcesAttribute" /> applied to it.
              Typically an <b>enum</b> or the derived class itself.
            </param></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.LoadResources(Remotion.Globalization.IResourceManager)"><summary> Loads the resources into the control's properties. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMenu.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary>
              The <b>TabbedMenu</b> can be used to provide a navigation menu.
            </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.TagKey"><summary> Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.TagKey" /> property. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.Controls"><summary> Overrides the <see cref="P:System.Web.UI.Control.Controls" /> property. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.SelectionID"><summary> Gets the ID used for reading and persisting the selected tab IDs. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.Tabs"><summary> Gets the collection of <see cref="T:Remotion.Web.UI.Controls.MainMenuTab" /> objects. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.StatusText"><summary> Gets or sets the text displayed in the status area. </summary></member><member name="E:Remotion.Web.UI.Controls.TabbedMenu.EventCommandClick"><summary> Is raised when a tab with a command of type <see cref="F:Remotion.Web.UI.Controls.CommandType.Event" /> is clicked. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.SelectedMainMenuTab"><summary> Gets the selected <see cref="T:Remotion.Web.UI.Controls.MainMenuTab" />. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.SelectedSubMenuTab"><summary> Gets the selected <see cref="T:Remotion.Web.UI.Controls.SubMenuTab" />. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.MainMenuTabStrip"><summary> Gets the <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" /> used for the main menu. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.SubMenuTabStrip"><summary> Gets the <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" /> used for the sub menu. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.StatusStyle"><summary> Gets the style applied to the status area. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.CssClassBase"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" /> itself. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.CssClassMainMenu"><summary> Gets the CSS-Class applied to the main menu's tab strip. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.CssClassSubMenu"><summary> Gets the CSS-Class applied to the sub menu's tab strip. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.CssClassMainMenuCell"><summary> Gets the CSS-Class applied to the main menu cell. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.CssClassSubMenuCell"><summary> Gets the CSS-Class applied to the sub menu cell. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMenu.CssClassStatusCell"><summary> Gets the CSS-Class applied to the status cell. </summary></member><member name="T:Remotion.Web.UI.Controls.MenuTabClickEventHandler"><summary>
              Represents the method that handles the <c>Click</c> event raised when clicking on a <see cref="T:Remotion.Web.UI.Controls.MenuTab" />.
            </summary></member><member name="T:Remotion.Web.UI.Controls.MenuTabClickEventArgs"><summary>
              Provides data for the <c>Click</c> event.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTabClickEventArgs"><summary>
              Provides data for the <c>Click</c> event.
            </summary></member><member name="F:Remotion.Web.UI.Controls.WebTabClickEventArgs._tab"><summary> The <see cref="T:Remotion.Web.UI.Controls.WebTab" /> that was clicked. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabClickEventArgs.#ctor(Remotion.Web.UI.Controls.WebTab)"><summary> Initializes an instance. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabClickEventArgs.Tab"><summary> The <see cref="T:Remotion.Web.UI.Controls.WebTab" /> that was clicked. </summary></member><member name="M:Remotion.Web.UI.Controls.MenuTabClickEventArgs.#ctor(Remotion.Web.UI.Controls.MenuTab)"><summary> Initializes an instance. </summary></member><member name="P:Remotion.Web.UI.Controls.MenuTabClickEventArgs.Command"><summary> The <see cref="P:Remotion.Web.UI.Controls.MenuTabClickEventArgs.Command" /> that caused the event. </summary></member><member name="P:Remotion.Web.UI.Controls.MenuTabClickEventArgs.Tab"><summary> The <see cref="T:Remotion.Web.UI.Controls.MenuTab" /> that was clicked. </summary></member><member name="T:Remotion.Web.UI.Controls.TabbedMultiView"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Clear"><summary>
              Clears all items.
            </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.Remotion#Web#UI#Controls#IControl#get_BindingContainer"></member><member name="E:Remotion.Web.UI.Controls.TabbedMultiView.ActiveViewChanged"><summary>
              Fired everytime the active view is changed after the <c>LoavViewState</c> phase or if it is not a post back.
            </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiView.CssClassBase"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.TabbedMultiView" />. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiView.CssClassTabStrip"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.TabbedMultiView" />'s tab strip. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiView.CssClassActiveView"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.TabbedMultiView" />'s active view. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiView.CssClassTopControls"><summary> Gets the CSS-Class applied to the top section. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiView.CssClassBottomControls"><summary> Gets the CSS-Class applied to the bottom section. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiView.CssClassViewBody"><summary> Gets the CSS-Class applied to a <c>div</c> wrapping the content and the border elements. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiView.CssClassContent"><summary> Gets the CSS-Class applied to a <c>div</c> intended for formatting the content. </summary></member><member name="P:Remotion.Web.UI.Controls.TabbedMultiView.CssClassEmpty"><summary> Gets the CSS-Class applied when the section is empty. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.MultiViewTab.#ctor(System.String,System.String,Remotion.Web.UI.Controls.IconInfo)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.MultiViewTab.#ctor(System.String,System.String,System.String)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.MultiViewTab.#ctor(System.String,System.String)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.TabbedMultiView.MultiViewTab.#ctor"><summary> Initalizes a new instance. </summary></member><member name="P:Remotion.Web.UI.Controls.TabView.Title"><summary> Gets or sets the title displayed in the tab for this view. </summary></member><member name="P:Remotion.Web.UI.Controls.TabView.Icon"><summary> Gets or sets the icon displayed in the tab for this view. </summary></member><member name="T:Remotion.Web.UI.Controls.ValidationError"><summary>
              Encapsulats an validation error: the effected control, the message and the validator used.
            </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationError._validatedControl"><summary> The control with an invalid state. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationError._validationMessage"><summary> The message to be displayed to the user. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationError._validator"><summary> The validator used to validate the <see cref="F:Remotion.Web.UI.Controls.ValidationError._validatedControl" />. </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationError.#ctor(System.Web.UI.Control,System.Web.UI.IValidator,System.Web.UI.ControlCollection)"><summary>
              Initializes a new instance of the <see cref="T:Remotion.Web.UI.Controls.ValidationError" /> class with the
              <see cref="T:System.Web.UI.Control" /> containing invalid data and the <see cref="T:System.Web.UI.IValidator" />
              used to identify the error.
            </summary><param name="validatedControl"> The control with an invalid state. </param><param name="validator"> The validator used to validate the <paramref name="validatedControl" />.  Must not be <see langword="null" />. </param><param name="labels">The labels containing the control's headings.</param></member><member name="M:Remotion.Web.UI.Controls.ValidationError.#ctor(System.Web.UI.Control,System.String,System.Web.UI.ControlCollection)"><summary>
              Initializes a new instance of the <see cref="T:Remotion.Web.UI.Controls.ValidationError" /> class with the
              <see cref="T:System.Web.UI.Control" /> containing invalid data and the message describing the error.
            </summary><param name="validatedControl"> The control with an invalid state. </param><param name="validationMessage"> The message to be displayed to the user. Must not be <see langword="null" /> or empty. </param><param name="labels">The labels containing the control's headings.</param></member><member name="M:Remotion.Web.UI.Controls.ValidationError.ToLabel(System.String)"><summary>
              Formats the <c>ValidationError</c> as a <see cref="T:System.Web.UI.WebControls.Label" />
              and associates the <see cref="P:Remotion.Web.UI.Controls.ValidationError.ValidatedControl" /> with it.
            </summary><param name="cssClass"> The name of the CSS-class used to format the label. </param></member><member name="M:Remotion.Web.UI.Controls.ValidationError.ToHyperLink(System.String)"><summary>
              Formats the <c>ValidationError</c> as a <see cref="T:System.Web.UI.WebControls.HyperLink" />
              and references the <see cref="P:Remotion.Web.UI.Controls.ValidationError.ValidatedControl" /> through an in-page link.
            </summary><param name="cssClass"> The name of the CSS-class used to format the hyperlink. </param></member><member name="M:Remotion.Web.UI.Controls.ValidationError.ToDiv(System.String)"><summary>
              Places the <c>ValidationError</c>'s message into an <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" /> with <b>div</b> tags.
            </summary><param name="cssClass"> The name of the CSS-class used to format the <c>div</c>-tag. </param></member><member name="M:Remotion.Web.UI.Controls.ValidationError.ToSpan(System.String)"><summary>
              Places the <c>ValidationError</c>'s message into an <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" /> with <b>span</b> tags.
            </summary><param name="cssClass"> The name of the CSS-class used to format the <c>span</c>-tag. </param></member><member name="M:Remotion.Web.UI.Controls.ValidationError.ToGenericControl(System.String,System.String)"><summary>
              Places the <c>ValidationError</c>'s message into a which ever HTML tag is provided
              and returns this construct as a <see cref="T:System.Web.UI.HtmlControls.HtmlGenericControl" />.
            </summary><param name="cssClass"> The name of the CSS-class used to format the HTML tag. </param><param name="tag"> The HTML tag to be used. </param></member><member name="P:Remotion.Web.UI.Controls.ValidationError.ValidatedControl"><summary> Gets the control with an invalid state. </summary></member><member name="P:Remotion.Web.UI.Controls.ValidationError.ValidationMessage"><summary> The message to be displayed to the user. </summary></member><member name="P:Remotion.Web.UI.Controls.ValidationError.Validator"><summary> Gets the validator used to validate the <see cref="P:Remotion.Web.UI.Controls.ValidationError.ValidatedControl" />. </summary></member><member name="T:Remotion.Web.UI.Controls.ValidationStateViewer"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationStateViewer.c_cssClassValidationMessage"><summary> CSS-Class applied to the individual validation messages. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationStateViewer.c_cssClassValidationNotice"><summary> CSS-Class applied to the validation notice. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationStateViewer._formGridManagers"><summary> Collection of <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances in the page. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationStateViewer._noticeText"><summary>
              The Text displayed if <see cref="P:Remotion.Web.UI.Controls.ValidationStateViewer.ValidationErrorStyle" /> is set to 
              <see cref="F:Remotion.Web.UI.Controls.ValidationErrorStyle.Notice" />.
            </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationStateViewer._validationErrorStyle"><summary> The style in which the validation errors should be displayed on the page. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationStateViewer._cachedResourceManager"><summary> Caches the <see cref="T:Remotion.Globalization.ResourceManagerSet" /> for this <see cref="T:Remotion.Web.UI.Controls.ValidationStateViewer" />. </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.#ctor"><summary> Initializes a new instance of the <see cref="T:Remotion.Web.UI.Controls.ValidationStateViewer" /> class. </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.PopulateFormGridManagerList(System.Web.UI.Control)"><summary> Registers all instances of <see cref="T:Remotion.Web.UI.Controls.FormGridManager" />. </summary><param name="parent"> Parent element of the FormGridManager objects. </param></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.RenderValidationNotice(System.Web.UI.HtmlTextWriter)"><summary> Displays a short notice if validation errors where found. </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.RenderValidationMessages(System.Web.UI.HtmlTextWriter)"><summary> Displays the validation messages for each error. </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.GetResourceManager"><summary>
              Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this <see cref="T:Remotion.Web.UI.Controls.ValidationStateViewer" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="M:Remotion.Web.UI.Controls.ValidationStateViewer.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary>
              Collects the validation errors from all <see cref="T:Remotion.Web.UI.Controls.FormGridManager" /> instances on the page
              and displays the validation state.
            </summary></member><member name="P:Remotion.Web.UI.Controls.ValidationStateViewer.NoticeText"><summary>
              The Text displayed if <see cref="P:Remotion.Web.UI.Controls.ValidationStateViewer.ValidationErrorStyle" /> is set to 
              <see cref="F:Remotion.Web.UI.Controls.ValidationErrorStyle.Notice" />
            </summary></member><member name="P:Remotion.Web.UI.Controls.ValidationStateViewer.ValidationErrorStyle"><summary> Gets or sets a value that defines how the validation errors are displayed on the page. </summary></member><member name="P:Remotion.Web.UI.Controls.ValidationStateViewer.ShowLabels"><summary>
              Gets or sets a flag that determines whether to render the label associated with the erroneous control 
              in front of the error message.
            </summary></member><member name="P:Remotion.Web.UI.Controls.ValidationStateViewer.CssClassValidationMessage"><summary> CSS-Class applied to the individual validation messages. </summary></member><member name="P:Remotion.Web.UI.Controls.ValidationStateViewer.CssClassValidationNotice"><summary> CSS-Class applied to the validation notice. </summary></member><member name="T:Remotion.Web.UI.Controls.ValidationStateViewer.ResourceIdentifier"><summary> A list of validation state viewer wide resources. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationStateViewer.ResourceIdentifier.NoticeText"><summary>The summary message displayed if validation errors where found. </summary></member><member name="T:Remotion.Web.UI.Controls.ValidationErrorStyle"><summary> A list of possible ways to displau the validation messages. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationErrorStyle.HideErrors"><summary> Display no messages. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationErrorStyle.Notice"><summary> Display a short notice if validation errors where found. </summary></member><member name="F:Remotion.Web.UI.Controls.ValidationErrorStyle.DetailedMessages"><summary> Display the individual validation messages provided by the FormGridManager. </summary></member><member name="T:Remotion.Web.UI.Controls.WebButton"><summary> A <c>Button</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.Button.Text" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"></member><member name="M:Remotion.Web.UI.Controls.WebButton.AddAttributesToRender_net20(System.Web.UI.HtmlTextWriter)"><summary> Method to be executed when compiled for .net 2.0. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.EvaluateWaiConformity"><summary> Checks whether the control conforms to the required WAI level. </summary></member><member name="M:Remotion.Web.UI.Controls.WebButton.LoadResources(Remotion.Globalization.IResourceManager)"><summary> Loads the resources into the control's properties. </summary></member><member name="P:Remotion.Web.UI.Controls.WebButton.Icon"><summary> Gets or sets the icon displayed in this menu item. </summary></member><member name="P:Remotion.Web.UI.Controls.WebButton.UseLegacyButton"><summary> 
              Gets or sets the flag that determines whether to use a legacy (i.e. input) element for the button or the modern form (i.e. button). 
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebButton.CssClassBase"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebButton" /> itself. </summary></member><member name="P:Remotion.Web.UI.Controls.WebButton.CssClassButtonBody"><summary> Gets the CSS-Class applied to a <c>div</c> intended for formatting the content. </summary></member><member name="P:Remotion.Web.UI.Controls.WebButton.CssClassMouseDown"><summary> Gets the CSS-Class applied when the section is empty. </summary></member><member name="T:Remotion.Web.UI.Controls.WebLinkButton"><summary> A <c>LinkButton</c> using <c>&amp;</c> as access key prefix in <see cref="P:System.Web.UI.WebControls.LinkButton.Text" />. </summary></member><member name="F:Remotion.Web.UI.Controls.WebMenuItem._command"><summary> The command rendered for this menu item. </summary></member><member name="F:Remotion.Web.UI.Controls.WebMenuItem._ownerControl"><summary> The control to which this object belongs. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItem.OnOwnerControlChanged"><summary> Is called when the value of <see cref="P:Remotion.Web.UI.Controls.WebMenuItem.OwnerControl" /> has changed. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItem.PreRender"><summary> Is called when the <see cref="P:Remotion.Web.UI.Controls.WebMenuItem.OwnerControl" /> is Pre-Rendered. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItem.OnClick"><summary> This mehtod is called when a menu item is clicked on the client side. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItem.ToString"><summary> Returns a <see cref="T:System.String" /> that represents this <see cref="T:Remotion.Web.UI.Controls.WebMenuItem" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItem.ResetCommand"><summary> Sets the <see cref="P:Remotion.Web.UI.Controls.WebMenuItem.Command" /> to its default value. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItem.ShouldSerializePersistedCommand"><summary> Controls the persisting of the <see cref="P:Remotion.Web.UI.Controls.WebMenuItem.Command" />. </summary></member><member name="P:Remotion.Web.UI.Controls.WebMenuItem.DisplayedTypeName"><summary> Gets the human readable name of this type. </summary></member><member name="P:Remotion.Web.UI.Controls.WebMenuItem.Icon"><summary> 
              Gets or sets the image representing the menu item in the rendered page. Must not be <see langword="null" />. 
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebMenuItem.DisabledIcon"><summary> 
              Gets or sets the image representing the disabled menu item in the rendered page. Must not be <see langword="null" />. 
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebMenuItem.Command"><summary> Gets or sets the <see cref="P:Remotion.Web.UI.Controls.WebMenuItem.Command" /> rendered for this menu item. </summary></member><member name="P:Remotion.Web.UI.Controls.WebMenuItem.OwnerControl"><summary> Gets or sets the control to which this object belongs. </summary></member><member name="T:Remotion.Web.UI.Controls.WebMenuItemClickEventHandler"><summary>
              Represents the method that handles the <c>Click</c> event raised when clicking on a menu item.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebMenuItemClickEventArgs"><summary>
              Provides data for the <c>Click</c> event.
            </summary></member><member name="F:Remotion.Web.UI.Controls.WebMenuItemClickEventArgs._item"><summary> The <see cref="T:Remotion.Web.UI.Controls.WebMenuItem" /> that was clicked. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItemClickEventArgs.#ctor(Remotion.Web.UI.Controls.WebMenuItem)"><summary> Initializes an instance. </summary></member><member name="P:Remotion.Web.UI.Controls.WebMenuItemClickEventArgs.Command"><summary> The <see cref="P:Remotion.Web.UI.Controls.WebMenuItemClickEventArgs.Command" /> that caused the event. </summary></member><member name="P:Remotion.Web.UI.Controls.WebMenuItemClickEventArgs.Item"><summary> The <see cref="T:Remotion.Web.UI.Controls.WebMenuItem" /> that was clicked. </summary></member><member name="T:Remotion.Web.UI.Controls.WebMenuItemCollection"><summary> A collection of <see cref="T:Remotion.Web.UI.Controls.WebMenuItem" /> objects. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItemCollection.GroupMenuItems(Remotion.Web.UI.Controls.WebMenuItem[],System.Boolean)"><summary> Sorts the <paramref name="menuItems" /> by their categories." </summary><param name="menuItems"> Must not be <see langword="null" /> or contain items that are <see langword="null" />. </param><param name="generateSeparators"> <see langword="true" /> to generate a separator before starting a new category. </param></member><member name="M:Remotion.Web.UI.Controls.WebMenuItemCollection.#ctor(System.Web.UI.Control,System.Type[])"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItemCollection.#ctor(System.Web.UI.Control)"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebMenuItemCollection.GroupMenuItems(System.Boolean)"><summary> Sorts the <see cref="T:Remotion.Web.UI.Controls.WebMenuItem" /> objects by their categories." </summary><param name="generateSeparators"> <see langword="true" /> to generate a separator before starting a new category. </param></member><member name="T:Remotion.Web.UI.Controls.WebTabClickEventHandler"><summary>
              Represents the method that handles the <c>Click</c> event raised when clicking on a web tab.
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStyle.BorderColor"></member><member name="P:Remotion.Web.UI.Controls.WebTabStyle.BorderStyle"></member><member name="P:Remotion.Web.UI.Controls.WebTabStyle.BorderWidth"></member><member name="P:Remotion.Web.UI.Controls.WebTabStyle.Width"></member><member name="P:Remotion.Web.UI.Controls.WebTabStyle.Height"></member><member name="T:Remotion.Web.UI.Controls.WebTabStrip"></member><member name="F:Remotion.Web.UI.Controls.WebTabStrip.c_resourceKeyTabs"><summary> The key identifying a tab resource entry. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.HandleSelectionChangeEvent(System.String)"><summary> Handles the click event for a tab. </summary><param name="itemID"> The id of the tab. </param></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.LoadTabsControlState(System.Object,Remotion.Web.UI.Controls.WebTabCollection)"><summary> Loads the settings of the <paramref name="tabs" /> from <paramref name="tabsControlState" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.SaveTabsControlState(Remotion.Web.UI.Controls.WebTabCollection)"><summary> Saves the settings of the  <paramref name="tabs" /> and returns this view state </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControlWithDesignTimeSupport#PreRenderForDesignMode"><summary> Calls <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> on every invocation. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Globalization#IResourceDispatchTarget#Dispatch(System.Collections.IDictionary)"><summary> Dispatches the resources passed in <paramref name="values" /> to the control's properties. </summary><param name="values"> An <c>IDictonary</c>: &lt;string key, string value&gt;. </param></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Dispatch(System.Collections.IDictionary)"><summary> Dispatches the resources passed in <paramref name="values" /> to the control's properties. </summary><param name="values"> An <c>IDictonary</c>: &lt;string key, string value&gt;. </param></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.LoadResources(Remotion.Globalization.IResourceManager)"><summary> Loads the resources into the control's properties. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.SetSelectedTabInternal(Remotion.Web.UI.Controls.WebTab)"><summary> Sets the selected tab. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"></member><member name="M:Remotion.Web.UI.Controls.WebTabStrip.Remotion#Web#UI#Controls#IControl#get_BindingContainer"></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.SelectedTab"><summary> Gets the currently selected tab. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.Tabs"><summary> Gets the tabs displayed by this tab strip. </summary></member><member name="E:Remotion.Web.UI.Controls.WebTabStrip.SelectedIndexChanged"><summary> Occurs when a node is clicked. </summary></member><member name="E:Remotion.Web.UI.Controls.WebTabStrip.Click"><summary> Is raised when a tab is clicked. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassBase"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTabStrip" /> itself. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassTabsPane"><summary> Gets the CSS-Class applied to the pane of <see cref="T:Remotion.Web.UI.Controls.WebTab" /> items. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassTabsPaneEmpty"><summary> Gets the CSS-Class applied to a pane of <see cref="T:Remotion.Web.UI.Controls.WebTab" /> items if no items are present. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassTab"><summary> Gets the CSS-Class applied to a <see cref="T:Remotion.Web.UI.Controls.WebTab" />. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassTabSelected"><summary> Gets the CSS-Class applied to a <see cref="T:Remotion.Web.UI.Controls.WebTab" /> if it is selected. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassTabAnchorBody"><summary> Gets the CSS-Class applied to a <c>span</c> intended for formatting the inside of the anchor element. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassTabLast"><summary> Gets the CSS-Class applied to a <c>span</c> intended for clearing the space after the last tab. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassSeparator"><summary> Gets the CSS-Class applied to a separator. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTabStrip.CssClassDisabled"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTab" /> when it is displayed disabled. </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeNode"><summary> A node for the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />. </summary></member><member name="F:Remotion.Web.UI.Controls.WebTreeNode._ownerControl"><summary> The control to which this object belongs. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.#ctor(System.String,System.String,System.String,Remotion.Web.UI.Controls.IconInfo)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.#ctor(System.String,System.String,Remotion.Web.UI.Controls.IconInfo)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.#ctor(System.String,System.String,System.String)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.#ctor(System.String,System.String)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.#ctor"><summary> Initalizes a new instance. For VS.NET Designer use only. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.Evaluate"><summary> Evaluates the current node. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.EvaluateChildren"><summary> Evaluates the current node's children. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.EvaluateExpand"><summary> Evaluates and expands the current node. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.OnOwnerControlChanged"><summary> Is called when the value of <see cref="P:Remotion.Web.UI.Controls.WebTreeNode.OwnerControl" /> has changed. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.SetParent(Remotion.Web.UI.Controls.WebTreeView,Remotion.Web.UI.Controls.WebTreeNode)"><summary> Sets this node's <see cref="T:Remotion.Web.UI.Controls.WebTreeView" /> and parent <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNode.SetSelected(System.Boolean)"><summary> Sets the node's selection state. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.ItemID"><summary> Gets or sets the ID of this node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.Text"><summary> Gets or sets the text displayed in this node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.ToolTip"><summary> Gets or sets the tool-tip displayed in this node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.Icon"><summary> Gets or sets the icon displayed in this tree node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.Children"><summary> 
              Gets the child nodes of for node. The node has to be evaluated before the actual child nodes can be accessed.
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.TreeView"><summary> Gets the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" /> to which this node belongs. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.ParentNode"><summary> Gets the parent <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" /> of this node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.IsExpanded"><summary> Gets or sets a flag that determines whether this node is expanded. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.IsEvaluated"><summary> Gets or sets a flag that determines whether this node's child collection has been populated. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.IsSelected"><summary> Gets or sets a flag that determines whether this node is the selected node of the tree view. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.DisplayedTypeName"><summary> Gets the human readable name of this type. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNode.OwnerControl"><summary> Gets or sets the control to which this object belongs. </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeNodeCollection"><summary> A collection of <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" /> objects. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNodeCollection.#ctor(System.Web.UI.Control,System.Type[])"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNodeCollection.#ctor(System.Web.UI.Control)"><summary> Initializes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNodeCollection.Find(System.String)"><summary>
              Finds the <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" /> with a <see cref="P:Remotion.Web.UI.Controls.WebTreeNode.ItemID" /> of <paramref name="id" />.
            </summary><param name="id"> The ID to look for. </param></member><member name="T:Remotion.Web.UI.Controls.WebTreeView"><summary> A tree view. </summary></member><member name="F:Remotion.Web.UI.Controls.WebTreeView.c_pathSeparator"><summary> The separator used for the node path. </summary></member><member name="F:Remotion.Web.UI.Controls.WebTreeView.c_expansionCommandPrefix"><summary> The prefix for the expansion command. </summary></member><member name="F:Remotion.Web.UI.Controls.WebTreeView.c_clickCommandPrefix"><summary> The prefix for the click command. </summary></member><member name="F:Remotion.Web.UI.Controls.WebTreeView._nodes"><summary> The nodes in this tree view. </summary></member><member name="F:Remotion.Web.UI.Controls.WebTreeView._evaluateTreeNode"><summary>
              The delegate called before a node with <see cref="P:Remotion.Web.UI.Controls.WebTreeNode.IsEvaluated" /> set to <see langword="false" />
              is expanded.
            </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.#ctor(System.Web.UI.Control)"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.#ctor"><summary> Initalizes a new instance. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)"><summary> Implementation of the <see cref="T:System.Web.UI.IPostBackEventHandler" /> interface. </summary><param name="eventArgument"> &lt;command prefix&gt;&lt;node path&gt;</param></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.HandleExpansionCommandEvent(System.String)"><summary> Handles the expansion command (i.e. expands/collapses the clicked tree node). </summary><param name="eventArgument"> The path to the clicked tree node. </param></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.HandleClickCommandEvent(System.String)"><summary> Handles the click command. </summary><param name="eventArgument"> The path to the clicked tree node. </param></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.OnClick(Remotion.Web.UI.Controls.WebTreeNode,System.String[])"><summary> Fires the <see cref="E:Remotion.Web.UI.Controls.WebTreeView.Click" /> event. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.OnSelectionChanged(Remotion.Web.UI.Controls.WebTreeNode)"><summary> Fires the <see cref="E:Remotion.Web.UI.Controls.WebTreeView.SelectionChanged" /> event. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.EvaluateTreeNodeInternal(Remotion.Web.UI.Controls.WebTreeNode)"><summary>
              Calles the delegate set using <see cref="M:Remotion.Web.UI.Controls.WebTreeView.SetEvaluateTreeNodeDelegate(Remotion.Web.UI.Controls.EvaluateWebTreeNode)" /> with the passed <paramref name="node" />.
            </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.LoadNodesControlStateRecursive(System.Web.UI.Triplet[],Remotion.Web.UI.Controls.WebTreeNodeCollection)"><summary> Loads the settings of the <paramref name="nodes" /> from <paramref name="nodesState" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.SaveNodesControlStateRecursive(Remotion.Web.UI.Controls.WebTreeNodeCollection)"><summary> Saves the settings of the  <paramref name="nodes" /> and returns this view state </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Globalization#IResourceDispatchTarget#Dispatch(System.Collections.IDictionary)"><summary> Dispatches the resources passed in <paramref name="values" /> to the control's properties. </summary><param name="values"> An <c>IDictonary</c>: &lt;string key, string value&gt;. </param></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Dispatch(System.Collections.IDictionary)"><summary> Dispatches the resources passed in <paramref name="values" /> to the control's properties. </summary><param name="values"> An <c>IDictonary</c>: &lt;string key, string value&gt;. </param></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.LoadResources(Remotion.Globalization.IResourceManager)"><summary> Loads the resources into the control's properties. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.OnPreRender(System.EventArgs)"><summary> Overrides the parent control's <c>OnPreRender</c> method. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.RenderContents(System.Web.UI.HtmlTextWriter)"><summary> Overrides the parent control's <c>RenderContents</c> method. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.RenderNodes(System.Web.UI.HtmlTextWriter,Remotion.Web.UI.Controls.WebTreeNodeCollection,System.Boolean)"><summary> Renders the <paremref name="nodes" /> onto the <paremref name="writer" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.RenderNode(System.Web.UI.HtmlTextWriter,Remotion.Web.UI.Controls.WebTreeNode,System.Boolean,System.Boolean,System.Boolean)"><summary> Renders the <paramref name="node" /> onto the <paremref name="writer" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.RenderNodeExpander(System.Web.UI.HtmlTextWriter,Remotion.Web.UI.Controls.WebTreeNode,System.String,System.Boolean,System.Boolean)"><summary> Renders the <paramref name="node" />'s expander (i.e. +/-) onto the <paremref name="writer" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.RenderNodeHead(System.Web.UI.HtmlTextWriter,Remotion.Web.UI.Controls.WebTreeNode,System.String)"><summary> Renders the <paramref name="node" />'s head (i.e. icon and text) onto the <paremref name="writer" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.RenderNodeChildren(System.Web.UI.HtmlTextWriter,Remotion.Web.UI.Controls.WebTreeNode,System.Boolean,System.Boolean)"><summary> Renders the <paramref name="node" />'s children onto the <paremref name="writer" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.RenderDesignModeContents(System.Web.UI.HtmlTextWriter)"><summary> Renders a dummy tree for design mode. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.FormatNodePath(Remotion.Web.UI.Controls.WebTreeNode)"><summary> Generates the string representation of the <paramref name="node" />'s path. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.ParseNodePath(System.String,System.String[]@)"><summary>
              Parses the string generated by <see cref="M:Remotion.Web.UI.Controls.WebTreeView.FormatNodePath(Remotion.Web.UI.Controls.WebTreeNode)" /> and returns the node to which it points.
            </summary><param name="path"> The path to be parsed. </param><param name="pathSegments"> Returns the IDs that comprised the path. </param></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.GetNodeIcon(Remotion.Web.UI.Controls.WebTreeNode,System.Boolean,System.Boolean)"><summary> Returns the URL of the node icon for the <paramref name="node" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.ResolveNodeIcons"><summary> Resolves the URLs for the node icons. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.SetSelectedNode(Remotion.Web.UI.Controls.WebTreeNode)"><summary> Sets the selected tree node. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#add_DataBinding(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#remove_DataBinding(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#add_Init(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#remove_Init(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#add_Load(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#remove_Load(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#add_PreRender(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#remove_PreRender(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#add_Unload(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#remove_Unload(System.EventHandler)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#SetRenderMethodDelegate(System.Web.UI.RenderMethod)"><summary> A tree view. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeView.Remotion#Web#UI#Controls#IControl#get_BindingContainer"><summary> A tree view. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.TagKey"><summary> Overrides the parent control's <c>TagKey</c> property. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.Nodes"><summary> Gets the tree nodes displayed by this tree view. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.EnableTopLevelExpander"><summary> 
              Gets or sets a flag that determines whether to show the top level expander and automatically expand the 
              child nodes if the expander is hidden.
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.EnableLookAheadEvaluation"><summary> Gets or sets a flag that determines whether to evaluate the child nodes when expanding a tree node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.EnableScrollBars"><summary> 
              Gets or sets a flag that determines whether to show scroll bars. Requires also a width for the tree view.
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.EnableWordWrap"><summary> Gets or sets a flag that determines whether to enable word wrapping. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.ShowLines"><summary> Gets or sets a flag that determines whether to show the connection lines between the nodes. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.EnableTreeNodeControlState"><summary> 
              Gets or sets a flag that determines whether the tree node's state information will be saved in the view state.
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.RequiresSynchronousPostBack"><summary>
            Gets or sets a flag that determines whether the post back from a node click must be executed synchronously when the tree is rendered within 
            an <see cref="T:System.Web.UI.UpdatePanel" />.
            </summary></member><member name="E:Remotion.Web.UI.Controls.WebTreeView.Click"><summary> Occurs when a node is clicked. </summary></member><member name="E:Remotion.Web.UI.Controls.WebTreeView.SelectionChanged"><summary> Occurs when the selected node is changed. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.SelectedNode"><summary> Gets the currently selected tree node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.CssClassNode"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" /> node. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.CssClassNodeHead"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />'s node head. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.CssClassNodeHeadSelected"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />'s node head if it is selected. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.CssClassNodeChildren"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />'s node children. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.CssClassNodeChildrenNoLines"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />'s last node's children. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.CssClassTopLevelNodeChildren"><summary> 
              Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />'s top level node's children if the expander is 
              hidden.
            </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeView.CssClassRoot"><summary> Gets the CSS-Class applied to the <see cref="T:Remotion.Web.UI.Controls.WebTreeView" />'s root element. </summary></member><member name="T:Remotion.Web.UI.Controls.EvaluateWebTreeNode"><summary>
              Represents the method called before a <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" /> with <see cref="P:Remotion.Web.UI.Controls.WebTreeNode.IsEvaluated" />
              set to <see langword="false" /> is expanded.
            </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeNodeEventHandler"><summary> Represents the method that handles an event raised by a <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" />. </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeNodeEventArgs"><summary> Provides data for event raised by a <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" />. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNodeEventArgs.#ctor(Remotion.Web.UI.Controls.WebTreeNode)"><summary> Initializes an instance. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNodeEventArgs.Node"><summary> The <see cref="T:Remotion.Web.UI.Controls.WebTreeNode" /> that was clicked. </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeNodeClickEventHandler"><summary> Represents the method that handles the <c>Click</c> event raised when clicking on a tree node. </summary></member><member name="T:Remotion.Web.UI.Controls.WebTreeNodeClickEventArgs"><summary> Provides data for the <c>Click</c> event. </summary></member><member name="M:Remotion.Web.UI.Controls.WebTreeNodeClickEventArgs.#ctor(Remotion.Web.UI.Controls.WebTreeNode,System.String[])"><summary> Initializes an instance. </summary></member><member name="P:Remotion.Web.UI.Controls.WebTreeNodeClickEventArgs.Path"><summary> The ID path for the clicked node. </summary></member><member name="T:Remotion.Web.UI.Design.ControlToStringConverter"><summary>
              Derive from this class to create a VS.NET designer pick list for a property that 
              references another control.
            </summary></member><member name="M:Remotion.Web.UI.Design.ControlToStringConverter.IsValidTargetControl(System.ComponentModel.IComponent)"><summary>
            Overload this method to defines whether a control should appear in the designer pick list. 
            </summary></member><member name="M:Remotion.Web.UI.Design.StringArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)"><summary> Test: Can convert from the <paramref name="sourceType" /> to a <see cref="T:System.String" /> array? </summary><param name="context"> An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param><param name="sourceType"> 
              The <see cref="T:System.Type" /> of the value to be converted into an <see cref="T:System.String" />.
            </param></member><member name="M:Remotion.Web.UI.Design.StringArrayConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)"><summary> Test: Can convert a <see cref="T:System.String" /> array to the <paramref name="destinationType" />? </summary><param name="context"> An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param><param name="destinationType"> 
              The <see cref="T:System.Type" /> of the value to be converted into a <see cref="T:System.String" /> Array.
            </param></member><member name="M:Remotion.Web.UI.Design.StringArrayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"><summary> Converts <paramref name="value" /> into a <see cref="T:System.String" /> array. </summary><param name="context"> An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param><param name="culture"> The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param><param name="value">  The source value. </param></member><member name="M:Remotion.Web.UI.Design.StringArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"><summary>
              Convertes a <see cref="T:System.String" /> array into the <paramref name="destinationType" />.
            </summary><param name="context"> An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param><param name="culture"> The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param><param name="value"> The <see cref="T:System.String" /> array to be converted. </param><param name="destinationType"> The destination <see cref="T:System.Type" />. </param></member><member name="T:Remotion.Web.UI.Design.WebControlDesigner"><summary>
              A desinger that requries the complete loading of the control.
            </summary></member><member name="T:Remotion.Web.UI.Design.WebDesginModeHelper"><summary>
            Implementation of the <see cref="T:Remotion.Design.IDesignModeHelper" /> interface for environments implementing the <see cref="T:System.Web.UI.Design.IWebApplication" /> designer service.
            </summary></member><member name="T:Remotion.Web.UI.Globalization.ResourceDispatcher"><summary>
              Provides methods for dispatching the resources inside an IResourceManager container
              to a control.
            </summary></member><member name="F:Remotion.Web.UI.Globalization.ResourceDispatcher.c_thisElementID"><summary> Use this ID to dispatch resources to the control that provides the resource manager. </summary></member><member name="M:Remotion.Web.UI.Globalization.ResourceDispatcher.Dispatch(System.Web.UI.Control,Remotion.Globalization.IResourceManager)"><summary>
              Dispatches resources.
            </summary><param name="control">
              The control for which resources are to be dispatched. Must not be <see langname="null" />.
            </param><param name="resourceManager">
              The resource manager to be used. Must not be <see langname="null" />.
            </param></member><member name="M:Remotion.Web.UI.Globalization.ResourceDispatcher.Dispatch(System.Web.UI.Control,System.Boolean)"><summary>
              Dispatches resources provided by <see cref="M:Remotion.Globalization.IObjectWithResources.GetResourceManager" />
            </summary><param name="control">
              The control for which resources are to be dispatched. Must not be <see langname="null" />.
              The control and/or one or more of its parents must implement <see cref="T:Remotion.Globalization.IObjectWithResources" />.
            </param><param name="throwExceptionIfNoResources"> If true and neither the control nor its parents
              define a resource manager, an InvalidOperationException is thrown. </param></member><member name="M:Remotion.Web.UI.Globalization.ResourceDispatcher.Dispatch(System.Web.UI.Control,System.Collections.IDictionary,System.String)"><summary>
              Dispatches an IDictonary of elementID/IDictonary pairs to the specified control.
            </summary><param name="control">
        The control to be dispatched.
    </param><param name="elements">
      The <see cref="T:System.Collections.IDictionary" /> to be dispatched. Must not be <see langname="null" />. Type is IDictionary&lt;string, IDictionary&lt;string, string&gt;&gt;.
    </param><param name="resourceSource">
      The name of the resource manager (used for logging).
    </param></member><member name="M:Remotion.Web.UI.Globalization.ResourceDispatcher.DispatchGeneric(System.Object,System.Collections.IDictionary)"><summary>
              Dispatches the resources passed in <paramref name="values" /> to the properties of <paramref name="obj" />.
            </summary><param name="obj">
      The object to be dispatched. Must not be <see langname="null" />.
    </param><param name="values">
      A dictonary consisting of name/value pairs corresponding to property's name and value resprectively. Must not be <see langname="null" />.
      Type is IDictionary&lt;string, string&gt;.
    </param></member><member name="M:Remotion.Web.UI.Globalization.ResourceDispatcher.GetResources(Remotion.Globalization.IResourceManager,System.String)"><summary>
              Selects all resources matching the <c>prefix</c> into a HashTable.
            </summary><param name="resourceManager">
              The <see cref="T:Remotion.Globalization.IResourceManager" /> to select from. Must not be <see langname="null" />.
            </param><param name="prefix">
              The filter prefix, can be empty. Must not be <see langname="null" />.
            </param></member><member name="T:Remotion.Web.UI.Globalization.ResourceManagerUtility"><summary>
              Functionality for working with <see cref="T:Remotion.Globalization.IResourceManager" /> in Controls.
            </summary></member><member name="F:Remotion.Web.UI.Globalization.ResourceManagerUtility.s_chachedResourceManagers"><summary> Hashtable&lt;type,IResourceManagers&gt; </summary></member><member name="F:Remotion.Web.UI.Globalization.ResourceManagerUtility.s_dummyResourceManager"><summary> Dummy value used mark cached types without a resource manager. </summary></member><member name="M:Remotion.Web.UI.Globalization.ResourceManagerUtility.GetResourceManager(System.Web.UI.Control)"><summary>
              Get resource managers of all controls impementing <see cref="T:Remotion.Globalization.IObjectWithResources" /> in the 
              current control's hierarchy (parents last).
            </summary><param name="control">
              The <see cref="T:System.Web.UI.Control" /> where to start searching for <see cref="T:Remotion.Globalization.IObjectWithResources" />.
            </param></member><member name="M:Remotion.Web.UI.Globalization.ResourceManagerUtility.GetResourceManager(System.Web.UI.Control,System.Boolean)"><summary>
              Get resource managers of all controls impementing <see cref="T:Remotion.Globalization.IObjectWithResources" /> in the 
              current control's hierarchy (parents last).
            </summary><param name="control">
              The <see cref="T:System.Web.UI.Control" /> where to start searching for <see cref="T:Remotion.Globalization.IObjectWithResources" />.
            </param><param name="alwaysIncludeParents">
              If true, parent controls' resource managers are included even if a resource manager has already 
              been found in a child control. Default is true.
            </param></member><member name="M:Remotion.Web.UI.Globalization.ResourceManagerUtility.GetResourceManagerFromCache(Remotion.Globalization.IObjectWithResources)"><summary> Gets the (cached) <see cref="T:Remotion.Globalization.IResourceManager" /> for the passed <see cref="T:Remotion.Globalization.IObjectWithResources" /> </summary><param name="objectWithResources">
              The <see cref="T:Remotion.Globalization.IObjectWithResources" /> to get the <see cref="T:Remotion.Globalization.IResourceManager" /> from.
            </param></member><member name="T:Remotion.Web.UI.Globalization.WebMultiLingualResourcesAttribute"><summary> Specifies the location of the resources used by a <see cref="T:System.Web.UI.Page" /> or <see cref="T:System.Web.UI.UserControl" />. </summary></member><member name="T:Remotion.Web.UI.HtmlHeadAppender"><summary>
              Provides a mechanism to register HTML header elements (e.g., stylesheet or script links).
            </summary></member><member name="F:Remotion.Web.UI.HtmlHeadAppender._registeredHeadElements"><summary> ListDictionary&lt;string key, Control headElement&gt; </summary></member><member name="F:Remotion.Web.UI.HtmlHeadAppender._sortedHeadElements"><summary> SortedList&lt;Priority (int) priority, ArrayList headElements &gt; </summary></member><member name="F:Remotion.Web.UI.HtmlHeadAppender._hasAppendExecuted"><summary> <see langword="true" /> if <see cref="M:Remotion.Web.UI.HtmlHeadAppender.EnsureAppended(Remotion.Web.UI.Controls.HtmlHeadContents)" /> has already executed. </summary></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.#ctor"></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.EnsureAppended(Remotion.Web.UI.Controls.HtmlHeadContents)"><summary>
              Appends the <c>HTML head elements</c> registered with the <see cref="P:Remotion.Web.UI.HtmlHeadAppender.Current" />
              <see cref="T:Remotion.Web.UI.HtmlHeadAppender" /> to the <paramref name="htmlHeadContents" />' <b>Controls</b> collection.
            </summary><param name="htmlHeadContents">
              <see cref="T:Remotion.Web.UI.Controls.HtmlHeadContents" /> to whose <b>Controls</b> collection the headers will be appended.
              Must not be <see langword="null" />.
            </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.SetTitle(System.String)"><summary>
              Sets the <c>title</c> of the page.
            </summary><param name="title"> The stirng to be isnerted as the title. </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.RegisterStylesheetLink(System.String,System.String,Remotion.Web.UI.HtmlHeadAppender.Priority)"><summary> Registers a stylesheet file. </summary><param name="key"> 
              The unique key identifying the stylesheet file in the headers collection. Must not be <see langword="null" /> or empty.
            </param><param name="href"> The url of the stylesheet file. Must not be <see langword="null" /> or empty. </param><param name="priority"> 
              The priority level of the head element. Elements are rendered in the following order:
              Library, UserControl, Page.
            </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.RegisterStylesheetLink(System.String,System.String)"><summary> Registers a stylesheet file. </summary><param name="key"> 
              The unique key identifying the stylesheet file in the headers collection. Must not be <see langword="null" /> or empty.
            </param><param name="href"> 
              The url of the stylesheet file. Must not be <see langword="null" /> or empty. 
            </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.RegisterJavaScriptInclude(System.String,System.String)"><summary> Registers a javascript file. </summary><param name="key">
              The unique key identifying the javascript file in the headers collection. Must not be <see langword="null" /> or empty.
            </param><param name="src"> 
              The url of the javascript file. Must not be <see langword="null" /> or empty. 
            </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.RegisterHeadElement(System.String,System.Web.UI.Control,Remotion.Web.UI.HtmlHeadAppender.Priority)"><summary> Registers a <see cref="T:System.Web.UI.Control" /> containing an HTML head element. </summary><param name="key"> 
              The unique key identifying the header element in the collection. Must not be <see langword="null" /> or empty.
            </param><param name="headElement"> 
              The <see cref="T:System.Web.UI.Control" /> representing the head element. Must not be <see langword="null" />. 
            </param><param name="priority"> 
              The priority level of the head element. Elements are rendered in the following order:
              Library, UserControl, Page.
            </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.IsRegistered(System.String)"><summary>
              Test's whether an element with this <paramref name="key" /> has already been registered.
            </summary><param name="key"> The string to test. Must not be <see langword="null" /> or empty. </param></member><member name="M:Remotion.Web.UI.HtmlHeadAppender.GetHeadElements(Remotion.Web.UI.HtmlHeadAppender.Priority)"><summary> Gets the list of head elements for the specified <see cref="T:Remotion.Web.UI.HtmlHeadAppender.Priority" />. </summary><param name="priority"> The <see cref="T:Remotion.Web.UI.HtmlHeadAppender.Priority" /> level to get the head elements for. </param></member><member name="P:Remotion.Web.UI.HtmlHeadAppender.Current"><summary>
              Gets the <see cref="T:Remotion.Web.UI.HtmlHeadAppender" /> instance.
            </summary></member><member name="P:Remotion.Web.UI.HtmlHeadAppender.HasAppended"><summary> Gets a flag indicating wheter <see cref="M:Remotion.Web.UI.HtmlHeadAppender.EnsureAppended(Remotion.Web.UI.Controls.HtmlHeadContents)" /> has been executed. </summary></member><member name="T:Remotion.Web.UI.PostLoadInvoker"><summary>
              Calls <see cref="M:Remotion.Web.UI.Controls.ISupportsPostLoadControl.OnPostLoad" /> on all controls that support the interface.
            </summary></member><member name="T:Remotion.Web.UI.ShowAbortConfirmation"><summary> Defines the options for showing the abort confirmation dialog upon leaving the page. </summary></member><member name="F:Remotion.Web.UI.ShowAbortConfirmation.Never"><summary> Disables the abort confirmation dialog. </summary></member><member name="F:Remotion.Web.UI.ShowAbortConfirmation.Always"><summary> Always displays an abort confirmation dialog before leaving the page. </summary></member><member name="F:Remotion.Web.UI.ShowAbortConfirmation.OnlyIfDirty"><summary> Only displays an abort confirmation dialog when the page is dirty. </summary></member><member name="T:Remotion.Web.UI.SmartPageEvents"><summary> Specifies the client side events supported for registration by the <see cref="T:Remotion.Web.UI.ISmartPage" />. </summary></member><member name="F:Remotion.Web.UI.SmartPageEvents.OnLoad"><summary> Rasied when the document has finished loading. Signature: <c>void Function (hasSubmitted, isCached)</c> </summary></member><member name="F:Remotion.Web.UI.SmartPageEvents.OnPostBack"><summary> Raised when the user posts back to the server. Signature: <c>void Function (eventTargetID, eventArgs)</c> </summary></member><member name="F:Remotion.Web.UI.SmartPageEvents.OnAbort"><summary> Raised when the user leaves the page. Signature: <c>void Function (hasSubmitted, isCached)</c> </summary></member><member name="F:Remotion.Web.UI.SmartPageEvents.OnScroll"><summary> Raised when the user scrolls the page. Signature: <c>void Function ()</c> </summary></member><member name="F:Remotion.Web.UI.SmartPageEvents.OnResize"><summary> Raised when the user resizes the page. Signature: <c>void Function ()</c> </summary></member><member name="F:Remotion.Web.UI.SmartPageEvents.OnBeforeUnload"><summary> 
              Raised before the request to load a new page (or reload the current page) is executed. Not supported in Opera.
              Signature: <c>void Function ()</c>
            </summary></member><member name="F:Remotion.Web.UI.SmartPageEvents.OnUnload"><summary> Raised before the page is removed from the window. Signature: <c>void Function ()</c> </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.RegisterClientSidePageEventHandler(Remotion.Web.UI.SmartPageEvents,System.String,System.String)"><summary> Implements <see cref="M:Remotion.Web.UI.ISmartPage.RegisterClientSidePageEventHandler(Remotion.Web.UI.SmartPageEvents,System.String,System.String)">ISmartPage.RegisterClientSidePageEventHandler</see>. </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.RegisterControlForDirtyStateTracking(Remotion.Web.UI.Controls.IEditableControl)"><summary> Implements <see cref="M:Remotion.Web.UI.ISmartPage.RegisterControlForDirtyStateTracking(Remotion.Web.UI.Controls.IEditableControl)">ISmartPage.RegisterClientSidePageEventHandler</see>. </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.RegisterControlForDirtyStateTracking(System.String)"><summary> Implements <see cref="M:Remotion.Web.UI.ISmartPage.RegisterControlForClientSideDirtyStateTracking(System.String)">ISmartPage.RegisterControlForClientSideDirtyStateTracking</see>. </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.EvaluateDirtyState"><summary> Implements <see cref="M:Remotion.Web.UI.ISmartPage.EvaluateDirtyState">ISmartPage.EvaluateDirtyState</see>. </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.GetResourceManager"><summary> Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this SmartPageInfo. </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.GetResourceManager(System.Type)"><summary> Find the <see cref="T:Remotion.Globalization.IResourceManager" /> for this control info. </summary><param name="localResourcesType"> 
              A type with the <see cref="T:Remotion.Globalization.MultiLingualResourcesAttribute" /> applied to it.
              Typically an <b>enum</b> or the derived class itself.
            </param></member><member name="M:Remotion.Web.UI.SmartPageInfo.SaveAllState"><summary>
              Implements <see cref="M:Remotion.Web.UI.ISmartPage.SaveAllState">ISmartPage.SaveAllState</see>.
            </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.DiscardSmartNavigationData"><summary>
              Implements <see cref="M:Remotion.Web.UI.ISmartNavigablePage.DiscardSmartNavigationData">ISmartNavigablePage.DiscardSmartNavigationData</see>.
            </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.SetFocus(Remotion.Web.UI.Controls.IFocusableControl)"><summary>
              Implements <see cref="M:Remotion.Web.UI.ISmartNavigablePage.SetFocus(Remotion.Web.UI.Controls.IFocusableControl)">ISmartNavigablePage.SetFocus(IFocusableControl)</see>.
            </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.SetFocus(System.String)"><summary>
              Implements <see cref="M:Remotion.Web.UI.ISmartNavigablePage.SetFocus(System.String)">ISmartNavigablePage.SetFocus(String)</see>.
            </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.RegisterNavigationControl(Remotion.Web.UI.Controls.INavigationControl)"><summary>
              Implements <see cref="M:Remotion.Web.UI.ISmartNavigablePage.RegisterNavigationControl(Remotion.Web.UI.Controls.INavigationControl)">ISmartNavigablePage.RegisterNavigationControl</see>.
            </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.AppendNavigationUrlParameters(System.String)"><summary>
              Implements <see cref="M:Remotion.Web.UI.ISmartNavigablePage.AppendNavigationUrlParameters(System.String)">ISmartNavigablePage.AppendNavigationUrlParameters</see>.
            </summary></member><member name="M:Remotion.Web.UI.SmartPageInfo.GetNavigationUrlParameters"><summary>
              Implements <see cref="M:Remotion.Web.UI.ISmartNavigablePage.GetNavigationUrlParameters">ISmartNavigablePage.GetNavigationUrlParameters</see>.
            </summary></member><member name="P:Remotion.Web.UI.SmartPageInfo.HtmlForm"><summary> 
              Implements <see cref="P:Remotion.Web.UI.ISmartPage.HtmlForm">ISmartPage.HtmlForm</see>.
            </summary></member><member name="P:Remotion.Web.UI.SmartPageInfo.StatusIsSubmittingMessage"><summary>
              Implements <see cref="P:Remotion.Web.UI.ISmartPage.StatusIsSubmittingMessage">ISmartPage.StatusIsSubmittingMessage</see>.
            </summary></member><member name="P:Remotion.Web.UI.SmartPageInfo.AbortMessage"><summary>
              Implements <see cref="P:Remotion.Web.UI.ISmartPage.AbortMessage">ISmartPage.AbortMessage</see>.
            </summary></member><member name="T:Remotion.Web.UI.SmartPageInfo.ResourceIdentifier"><summary> A list of resources. </summary></member><member name="F:Remotion.Web.UI.SmartPageInfo.ResourceIdentifier.AbortMessage"><summary> Displayed when the user attempts to leave the page. </summary></member><member name="F:Remotion.Web.UI.SmartPageInfo.ResourceIdentifier.StatusIsSubmittingMessage"><summary> Displayed when the user attempts to submit while the page is already submitting. </summary></member><member name="M:Remotion.Web.Utilities.ControlHelper.GetParentTemplateControl(System.Web.UI.Control)"><summary>
              This method returns the nearest containing Template Control (i.e., Page or User Control).
            </summary></member><member name="M:Remotion.Web.Utilities.ControlHelper.IsDesignMode(System.Web.UI.Control)"><summary>
              This method returns <see langword="true" /> if the <paramref name="control" /> is in 
              design mode.
            </summary><param name="control"> 
              The <see cref="T:System.Web.UI.Control" /> to be tested for being in design mode. 
            </param></member><member name="M:Remotion.Web.Utilities.ControlHelper.IsDesignMode(Remotion.Web.UI.Controls.IControl,System.Web.HttpContext)"><summary>
              This method returns <see langword="true" /> if the <paramref name="control" /> is in 
              design mode.
            </summary><param name="control"> 
              The <see cref="T:System.Web.UI.Control" /> to be tested for being in design mode. 
            </param><param name="context"> 
              The <see cref="T:System.Web.HttpContext" /> of the <paramref name="control" />. 
            </param></member><member name="M:Remotion.Web.Utilities.ControlHelper.IsDesignMode(Remotion.Web.UI.Controls.IControl)"><summary>
              This method returns <see langword="true" /> if the <paramref name="control" /> is in 
              design mode.
            </summary><param name="control"> 
              The <see cref="T:Remotion.Web.UI.Controls.IControl" /> to be tested for being in design mode. 
            </param></member><member name="M:Remotion.Web.Utilities.ControlHelper.LoadViewStateRecursive(System.Web.UI.Control,System.Object)"><summary> Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s LoadViewStateRecursive method. </summary><param name="target"> The <see cref="T:System.Web.UI.Control" /> to be restored. </param><param name="viewState"> The view state object used for restoring. </param></member><member name="M:Remotion.Web.Utilities.ControlHelper.SaveViewStateRecursive(System.Web.UI.Control)"><summary> Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s SaveViewStateRecursive method. </summary><param name="target"> The <see cref="T:System.Web.UI.Control" /> to be saved. </param></member><member name="M:Remotion.Web.Utilities.ControlHelper.SaveAllState(System.Web.UI.Page)"><summary>Encapsulates the invocation of <see cref="T:System.Web.UI.Page" />'s SaveAllState method.</summary><param name="page">The <see cref="T:System.Web.UI.Page" /> for which SaveAllState will be invoked. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.Utilities.ControlHelper.GetChildControlState``1(``0)"><summary>Returns the control states for all controls that are child-controls of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.ControlHelper.SetChildControlState``1(``0,System.Collections.IDictionary)"><summary>Sets the control states for the child control of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.LoadViewStateRecursive(System.Web.UI.Control,System.Object)"><summary> Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s LoadViewStateRecursive method. </summary><param name="target"> The <see cref="T:System.Web.UI.Control" /> to be restored. </param><param name="viewState"> The view state object used for restoring. </param></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.SaveViewStateRecursive(System.Web.UI.Control)"><summary> Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s SaveViewStateRecursive method. </summary><param name="target"> The <see cref="T:System.Web.UI.Control" /> to be saved. </param></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.SaveAllState(System.Web.UI.Page)"><summary>Encapsulates the invocation of <see cref="T:System.Web.UI.Page" />'s SaveAllState method.</summary><param name="page">The <see cref="T:System.Web.UI.Page" /> for which SaveAllState will be invoked. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.SaveChildControlState``1(``0)"><summary>Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s SaveChildControlState method.</summary><param name="control">The <see cref="T:System.Web.UI.Control" /> for which SaveChildControlState will be invoked. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.SaveControlStateInternal(System.Web.UI.Control)"><summary>Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s SaveControlStateInternal method.</summary><param name="control">The <see cref="T:System.Web.UI.Control" /> for which SaveControlStateInternal will be invoked. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.GetChildControlState``1(``0)"><summary>Returns the control states for all controls that are child-controls of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.SetChildControlState``1(``0,System.Collections.IDictionary)"><summary>Sets the control states for the child control of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.ClearChildControlState``1(``0)"><summary>Sets the control states for the child control of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.IInternalControlMemberCaller.GetPageStatePersister(System.Web.UI.Page)"><summary>Encapsulates the get-access the the <see cref="T:System.Web.UI.Page" />'s PageStatePersister property.</summary></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.LoadViewStateRecursive(System.Web.UI.Control,System.Object)"><summary> Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s LoadViewStateRecursive method. </summary><param name="target"> The <see cref="T:System.Web.UI.Control" /> to be restored. </param><param name="viewState"> The view state object used for restoring. </param></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.SaveViewStateRecursive(System.Web.UI.Control)"><summary> Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s SaveViewStateRecursive method. </summary><param name="target"> The <see cref="T:System.Web.UI.Control" /> to be saved. </param></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.SaveAllState(System.Web.UI.Page)"><summary>Encapsulates the invocation of <see cref="T:System.Web.UI.Page" />'s SaveAllState method.</summary><param name="page">The <see cref="T:System.Web.UI.Page" /> for which SaveAllState will be invoked. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.SaveChildControlState``1(``0)"><summary>Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s SaveChildControlState method.</summary><param name="control">The <see cref="T:System.Web.UI.Control" /> for which SaveChildControlState will be invoked. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.SaveControlStateInternal(System.Web.UI.Control)"><summary>Encapsulates the invocation of <see cref="T:System.Web.UI.Control" />'s SaveControlStateInternal method.</summary><param name="control">The <see cref="T:System.Web.UI.Control" /> for which SaveControlStateInternal will be invoked. Must not be <see langword="null" />.</param></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.GetChildControlState``1(``0)"><summary>Returns the control states for all controls that are child-controls of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.SetChildControlState``1(``0,System.Collections.IDictionary)"><summary>Sets the control states for the child control of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.ClearChildControlState``1(``0)"><summary>Sets the control states for the child control of the passed <see cref="T:System.Web.UI.Control" />.</summary></member><member name="M:Remotion.Web.Utilities.InternalControlMemberCaller.GetPageStatePersister(System.Web.UI.Page)"><summary>Encapsulates the get-access the the <see cref="T:System.Web.UI.Page" />'s PageStatePersister property.</summary></member><member name="T:Remotion.Web.Utilities.PageUtility"><summary>
            Utility class for pages.
            </summary></member><member name="M:Remotion.Web.Utilities.PageUtility.GetPostBackCollection(System.Web.UI.Page)"><summary>
              Gets the form's postback data in a fashion that works for WxePages too. 
              Otherwise simialar to <b>Page.Request.Form</b>.
            </summary><param name="page"> The page to query for the request collection. Must not be <see langword="null" />. </param></member><member name="M:Remotion.Web.Utilities.PageUtility.GetPostBackCollectionItem(System.Web.UI.Page,System.String)"><summary>
              Gets a single item from the form's postback data in a fashion that works for WxePages too. 
              Otherwise simialar to <b>Page.Request.Form</b>.
            </summary><param name="page"> The page to query for the request collection. Must not be <see langword="null" />. </param><param name="name"> The name of the item to be returned. Must not be <see langword="null" /> or empty. </param></member><member name="T:Remotion.Web.Utilities.ScriptUtility"><summary> Utility class for client-side scripts. </summary></member><member name="M:Remotion.Web.Utilities.ScriptUtility.EscapeClientScript(System.String)"><summary> Escapes special characters (e.g. <c>\n</c>) in the passed string. </summary><param name="input"> The unescaped string. Must not be <see langword="null" />. </param></member><member name="M:Remotion.Web.Utilities.ScriptUtility.RegisterClientScriptBlock(System.Web.UI.Control,System.String,System.String)"><summary>
              Used to register a client javascript script to be rendered  at the beginning of the HTML page.
              The script is automatically surrounded by &lt;script&gt; tags.
            </summary><param name="control"> 
              The <see cref="T:System.Web.UI.Control" /> which the script file will be registered. Must not be <see langword="null" />.
            </param><param name="key"> 
              The key identifying the registered script file. Must not be <see langword="null" /> or empty.
            </param><param name="javascript"> 
              The client script that will be registered. Must not be <see langword="null" /> or empty. 
            </param></member><member name="M:Remotion.Web.Utilities.ScriptUtility.RegisterStartupScriptBlock(System.Web.UI.Control,System.String,System.String)"><summary>
              Used to register a client javascript script to be rendered at the end of the HTML page. 
              The script is automatically surrounded by &lt;script&gt; tags.
            </summary><param name="control"> 
              The <see cref="T:System.Web.UI.Control" /> for which the script file will be registered. Must not be <see langword="null" />.
            </param><param name="key"> 
              The key identifying the registered script block. Must not be <see langword="null" /> or empty.
            </param><param name="javascript"> 
              The client script that will be registered. Must not be <see langword="null" /> or empty. 
            </param></member><member name="M:Remotion.Web.Utilities.ScriptUtility.IsPartOfRenderedOutput(System.Web.UI.Control)"><summary>
            Gets a flag that informs the caller if the <paramref name="control" /> will be part of the rendered output. This method only works during the
            Render cycle.
            </summary></member><member name="T:Remotion.Web.Utilities.UrlUtility"><summary>
            Provided helper functions for working with URLs.
            </summary></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetAbsoluteUrl(System.Web.UI.Page,System.String,System.Boolean)"><summary>
            Makes a relative URL absolute.
            </summary><param name="page">The requesting page.</param><param name="relativeUrl">The relative URL.</param><param name="includeServer"><see langword="true" /> to include the server part. Defaults to <see langword="false" />.</param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetAbsoluteUrl(System.Web.UI.Page,System.String)"><summary>
            Makes a relative URL absolute.
            </summary><param name="page">The requesting page.</param><param name="relativeUrl">The relative URL.</param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetAbsoluteUrlWithoutProtocol(System.Web.UI.Page,System.String)"><summary>
            Returns an absolute URL from a relative URL and removes the protocol part (e.g. "http://")
            </summary><param name="page">The requesting page.</param><param name="relativeUrl">The relative URL.</param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetAbsoluteUrl(Remotion.Web.Infrastructure.IHttpContext,System.String,System.Boolean)"><summary> Makes a relative URL absolute. </summary><param name="context"> The <see cref="T:Remotion.Web.Infrastructure.IHttpContext" /> to be used. Must not be <see langword="null" />. </param><param name="relativeUrl"> The relative URL. Must not be <see langword="null" /> or empty. </param><param name="includeServer"><see langword="true" /> to include the server part. Defaults to <see langword="false" />.</param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetAbsoluteUrl(Remotion.Web.Infrastructure.IHttpContext,System.String)"><summary> Makes a relative URL absolute. </summary><param name="context"> The <see cref="T:Remotion.Web.Infrastructure.IHttpContext" /> to be used. Must not be <see langword="null" />. </param><param name="relativeUrl"> The relative URL. Must not be <see langword="null" /> or empty. </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetAbsoluteUrl(System.Web.HttpContext,System.String)"><summary> Makes a relative URL absolute. </summary><param name="context"> The <see cref="T:System.Web.HttpContext" /> to be used. Must not be <see langword="null" />. </param><param name="relativeUrl"> The relative URL. Must not be <see langword="null" /> or empty. </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.ResolveUrl(System.String)"><summary> Resolves a URL. </summary><param name="url"> The URL. Must not be <see langword="null" /> or empty.</param></member><member name="M:Remotion.Web.Utilities.UrlUtility.Combine(System.String,System.String)"><summary>
            Combines 2 web URLs. 
            </summary><param name="path1">Can be a relative or a absolute URL.</param><param name="path2">Must be a relative URL or a filename.</param></member><member name="M:Remotion.Web.Utilities.UrlUtility.FormatUrl(System.String,System.Object[])"><summary>
            Formats a URL string with URL encoding. (The <c>format</c> argument is not encoded.)
            </summary></member><member name="M:Remotion.Web.Utilities.UrlUtility.AddParameter(System.String,System.String,System.String,System.Text.Encoding)"><summary> Adds a <paramref name="name" />/<paramref name="value" /> pair to the <paramref name="url" />. </summary><param name="url"> 
      A string containing a url or a query string. Must not be <see langword="null" />. 
      If it contains a query string, the query string must start with the query string delimiter (<c>?</c>).
      It may be empty or end with a delimiter (<c>?</c>, <c>&amp;</c>).
    </param><param name="name"> 
      The name of the url parameter to be added. Must not be <see langword="null" /> or empty. 
    </param><param name="value"> 
      The value of the url parameter to be added. Must not be <see langword="null" />. 
    </param><param name="encoding"> 
      The <see cref="T:System.Text.Encoding" /> used to encode the <paramref name="value" />. Must not be <see langword="null" />.
      Defaults to the <see cref="P:System.Web.HttpResponse.ContentEncoding">HttpResponse.ContentEncoding</see> of the
      <see cref="P:System.Web.HttpContext.Current">Current</see> HttpContext.
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.AddParameter(System.String,System.String,System.String)"><summary> Adds a <paramref name="name" />/<paramref name="value" /> pair to the <paramref name="url" />. </summary><param name="url"> 
      A string containing a url or a query string. Must not be <see langword="null" />. 
      If it contains a query string, the query string must start with the query string delimiter (<c>?</c>).
      It may be empty or end with a delimiter (<c>?</c>, <c>&amp;</c>).
    </param><param name="name"> 
      The name of the url parameter to be added. Must not be <see langword="null" /> or empty. 
    </param><param name="value"> 
      The value of the url parameter to be added. Must not be <see langword="null" />. 
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.AddParameters(System.String,System.Collections.Specialized.NameValueCollection,System.Text.Encoding)"><summary> 
              Adds the name/value pairs from the  <paramref name="queryStringCollection" /> to the <paramref name="url" />. 
            </summary><param name="url"> 
      A string containing a url or a query string. Must not be <see langword="null" />. 
      If it contains a query string, the query string must start with the query string delimiter (<c>?</c>).
      It may be empty or end with a delimiter (<c>?</c>, <c>&amp;</c>).
    </param><param name="queryStringCollection"> 
      The list of name value pairs for the query string.
    </param><param name="encoding"> 
      The <see cref="T:System.Text.Encoding" /> used to encode the <paramref name="value" />. Must not be <see langword="null" />.
      Defaults to the <see cref="P:System.Web.HttpResponse.ContentEncoding">HttpResponse.ContentEncoding</see> of the
      <see cref="P:System.Web.HttpContext.Current">Current</see> HttpContext.
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.AddParameters(System.String,System.Collections.Specialized.NameValueCollection)"><summary> 
              Adds the name/value pairs from the  <paramref name="queryStringCollection" /> to the <paramref name="url" />. 
            </summary><param name="url"> 
      A string containing a url or a query string. Must not be <see langword="null" />. 
      If it contains a query string, the query string must start with the query string delimiter (<c>?</c>).
      It may be empty or end with a delimiter (<c>?</c>, <c>&amp;</c>).
    </param><param name="queryStringCollection"> 
      The list of name value pairs for the query string.
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.FormatQueryString(System.Collections.Specialized.NameValueCollection,System.Text.Encoding)"><summary> Builds a query string from the <paramref name="queryStringCollection" />. </summary><param name="queryStringCollection"> 
      The list of name value pairs for the query string.
    </param><param name="encoding"> 
      The <see cref="T:System.Text.Encoding" /> used to encode the <paramref name="value" />. Must not be <see langword="null" />.
      Defaults to the <see cref="P:System.Web.HttpResponse.ContentEncoding">HttpResponse.ContentEncoding</see> of the
      <see cref="P:System.Web.HttpContext.Current">Current</see> HttpContext.
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.FormatQueryString(System.Collections.Specialized.NameValueCollection)"><summary> Builds a query string from the <paramref name="queryStringCollection" />. </summary><param name="queryStringCollection"> 
      The list of name value pairs for the query string.
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.DeleteParameter(System.String,System.String)"><summary> Removes a <paramref name="name" />/value pair from the <paramref name="url" />. </summary><param name="url"> 
      A string containing a url or a query string. Must not be <see langword="null" />.
      If it contains a query string, the query string must start with the query string delimiter (<c>?</c>).
      It may be empty or end with a delimiter (<c>?</c>, <c>&amp;</c>).
    </param><param name="name"> 
      The name of the url parameter to be removed. Must not be <see langword="null" /> or empty. 
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetParameter(System.String,System.String,System.Text.Encoding)"><summary> Gets the decoded value of the parameter identified by <paramref name="name" />. </summary><param name="url"> 
      A string containing a url or a query string. Must not be <see langword="null" />.
      If it contains a query string, the query string must start with the query string delimiter (<c>?</c>).
      It may be empty or end with a delimiter (<c>?</c>, <c>&amp;</c>).
    </param><param name="name"> 
      The name of the url parameter whose value is to be returned. Must not be <see langword="null" /> or empty. 
    </param><param name="encoding"> 
      The <see cref="T:System.Text.Encoding" /> used to deencode the <paramref name="value" />. Must not be <see langword="null" />.
      Defaults to the <see cref="P:System.Web.HttpRequest.ContentEncoding">HttpRequest.ContentEncoding</see> of the
      <see cref="P:System.Web.HttpContext.Current">Current</see> HttpContext.
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetParameter(System.String,System.String)"><summary> Gets the decoded value of the parameter identified by <paramref name="name" />. </summary><param name="url"> 
      A string containing a url or a query string. Must not be <see langword="null" />.
      If it contains a query string, the query string must start with the query string delimiter (<c>?</c>).
      It may be empty or end with a delimiter (<c>?</c>, <c>&amp;</c>).
    </param><param name="name"> 
      The name of the url parameter whose value is to be returned. Must not be <see langword="null" /> or empty. 
    </param></member><member name="M:Remotion.Web.Utilities.UrlUtility.GetParameterPosition(System.String,System.String)"><summary> Gets the index of the <paramref name="parameter" /> in the <paramref name="url" />. </summary></member><member name="T:Remotion.Web.Utilities.WebTypeUtility"><summary> Utility methods for handling types in web projects. </summary></member><member name="M:Remotion.Web.Utilities.WebTypeUtility.GetType(System.String)"><summary>
              Loads a type, optionally using an abbreviated type name as defined in 
              <see cref="M:Remotion.Utilities.TypeUtility.ParseAbbreviatedTypeName(System.String)" />.
            </summary></member><member name="M:Remotion.Web.Utilities.WebTypeUtility.GetType(System.String,System.Boolean)"><summary>
              Loads a type, optionally using an abbreviated type name as defined in 
              <see cref="M:Remotion.Utilities.TypeUtility.ParseAbbreviatedTypeName(System.String)" />.
            </summary></member><member name="M:Remotion.Web.Utilities.WebTypeUtility.GetType(System.String,System.Boolean,System.Boolean)"><summary>
              Loads a type, optionally using an abbreviated type name as defined in 
              <see cref="M:Remotion.Utilities.TypeUtility.ParseAbbreviatedTypeName(System.String)" />.
            </summary></member></members></doc>